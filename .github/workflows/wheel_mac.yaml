# GH actions.
name: Wheel-Mac

on:
  push:
    tags:
      - '*' # Push events to every tag not containing /

jobs:
  Build:
    strategy:
      matrix:
        platform: ['macos-13', 'macos-latest']

    runs-on: ${{ matrix.platform }}
    defaults:
      run:
        shell: 'bash -l {0}'

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
      - name: Checkout source
        run: |
          git clone https://github.com/mlc-ai/package package --recursive
      - name: Setup script env
        run: |
          mv scripts/build-environment.yaml package/3rdparty/tlcpack/conda/build-environment.yaml
          rm -rf conda
          ln -s package/3rdparty/tlcpack/conda conda
      - name: Sync XGrammar Package
        run: |
          python scripts/sync_package.py --package . --package-name xgrammar --version ${{ github.ref_name }}
      # Build wheel for different python versions
      - name: Setup@Py39
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-Py39
          channel-priority: strict
          environment-file: conda/build-environment.yaml
          python-version: 3.9
          auto-activate-base: false
      - name: XGrammar-Build@Py39
        run: >-
          scripts/build_xgrammar_lib_osx.sh ${{ matrix.platform == 'macos-13' && '10.15' || '13.02' }}
      - name: Wheel-Build@Py39
        run: |
          python --version
          python -m pip install setuptools Cython wheel
          cd python
          python setup.py bdist_wheel
          rm -rf xgrammar/*.so
      - name: Setup@Py310
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-Py310
          channel-priority: strict
          environment-file: conda/build-environment.yaml
          python-version: '3.10'
          auto-activate-base: false
      - name: XGrammar-Build@Py310
        run: >-
          scripts/build_xgrammar_lib_osx.sh ${{ matrix.platform == 'macos-13' && '10.15' || '13.02' }}
      - name: Wheel-Build@Py310
        run: |
          python --version
          python -m pip install setuptools Cython wheel
          cd python
          python setup.py bdist_wheel
          rm -rf xgrammar/*.so
      - name: Setup@Py311
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-Py311
          channel-priority: strict
          environment-file: conda/build-environment.yaml
          python-version: '3.11'
          auto-activate-base: false
      - name: XGrammar-Build@Py311
        run: >-
          scripts/build_xgrammar_lib_osx.sh ${{ matrix.platform == 'macos-13' && '10.15' || '13.02' }}
      - name: Wheel-Build@Py311
        run: |
          python --version
          python -m pip install setuptools Cython wheel
          cd python
          python setup.py bdist_wheel
          rm -rf xgrammar/*.so
      - name: Setup@Py312
        uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: build-Py312
          channel-priority: strict
          environment-file: conda/build-environment.yaml
          python-version: '3.12'
          auto-activate-base: false
      - name: XGrammar-Build@Py312
        run: >-
          scripts/build_xgrammar_lib_osx.sh ${{ matrix.platform == 'macos-13' && '10.15' || '13.02' }}
      - name: Wheel-Build@Py312
        run: |
          python --version
          python -m pip install setuptools Cython wheel
          cd python
          python setup.py bdist_wheel
          rm -rf xgrammar/*.so
      - uses: actions/upload-artifact@v4
        with:
          name: xgrammar-wheel-${{ github.ref_name }}-${{ matrix.platform }}
          path: python/dist/
          retention-days: 3
          overwrite: true

  Publish-to-PyPI:
    needs:
      - Build
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/xgrammar
    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the wheels
        uses: actions/download-artifact@v4
        with:
          pattern: xgrammar-wheel-${{ github.ref_name }}-macos-*
          path: python/dist/
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages_dir: python/dist
          skip_existing: true
          verbose: true
