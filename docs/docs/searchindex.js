Search.setIndex({"docnames": ["README", "api/python/bitmask_ops", "api/python/compiled_grammar", "api/python/configuration", "api/python/grammar", "api/python/grammar_compiler", "api/python/grammar_matcher", "api/python/index", "api/python/structural_tag", "api/python/tokenizer_info", "developer_guide/building_docs", "developer_guide/code_coverage", "index", "start/install", "start/quick_start", "tutorials/constrained_decoding", "tutorials/ebnf_guided_generation", "tutorials/engine_integration", "tutorials/json_generation", "xgrammar_features/javascript_api", "xgrammar_features/runtime_safeguards"], "filenames": ["README.md", "api/python/bitmask_ops.rst", "api/python/compiled_grammar.rst", "api/python/configuration.rst", "api/python/grammar.rst", "api/python/grammar_compiler.rst", "api/python/grammar_matcher.rst", "api/python/index.rst", "api/python/structural_tag.rst", "api/python/tokenizer_info.rst", "developer_guide/building_docs.md", "developer_guide/code_coverage.md", "index.rst", "start/install.md", "start/quick_start.md", "tutorials/constrained_decoding.md", "tutorials/ebnf_guided_generation.md", "tutorials/engine_integration.md", "tutorials/json_generation.md", "xgrammar_features/javascript_api.md", "xgrammar_features/runtime_safeguards.md"], "titles": ["XGrammar Documentation", "Bitmask Operations", "xgr.CompiledGrammar", "Configuration", "xgr.Grammar", "xgr.GrammarCompiler", "xgr.GrammarMatcher", "XGrammar Python API", "Structural Tag", "xgr.TokenizerInfo", "Building Docs", "Code Coverage Tool", "\ud83d\udc4b Welcome to XGrammar", "Installation", "Quick Start", "Constrained Decoding", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "JavaScript API", "Runtime Safeguards"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20], "wa": 0, "built": [0, 10, 13, 14, 17, 18], "upon": 0, "sphinx": [0, 10], "see": [0, 4, 5, 8, 9, 10, 14, 16, 17, 18, 19], "doc": [0, 9, 12], "help": [0, 4, 5, 6, 14, 16, 18], "build": [0, 12], "xgrammar": [1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 14, 19, 20], "allocate_token_bitmask": [1, 6, 7, 16, 17, 18], "batch_siz": [1, 15, 17], "int": [1, 2, 3, 4, 5, 6, 9, 18], "vocab_s": [1, 9, 14, 15, 16, 17, 18], "torch": [1, 6, 14, 16, 17, 18], "tensor": [1, 6, 15, 16, 17, 18], "sourc": [1, 2, 3, 4, 5, 6, 8, 9, 12], "alloc": [1, 16, 17, 18], "next": [1, 4, 6, 16, 17, 18], "token": [1, 2, 4, 5, 6, 9, 13, 14, 15, 16, 17, 18], "predict": [1, 6], "i": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20], "an": [1, 4, 5, 6, 14, 16, 17, 18, 20], "int32": [1, 15], "cpu": [1, 6, 13, 14, 16, 17, 18], "shape": [1, 15, 16, 17, 18], "ceil": [1, 15], "32": [1, 9, 15], "user": [1, 4, 6, 9, 14, 16, 18], "who": 1, "have": [1, 4, 13, 14, 16, 17, 18], "own": [1, 17], "need": [1, 4, 6, 9, 10, 13, 17], "manag": [1, 7, 10, 20], "cuda": [1, 14, 16, 17, 18], "memori": [1, 2, 5], "can": [1, 2, 4, 6, 9, 10, 13, 14, 16, 17, 18, 20], "construct": [1, 2, 4, 5, 6, 9, 14, 16, 17, 18], "get_bitmask_shap": [1, 7], "bitmask_dtyp": [1, 7], "themselv": 1, "reason": 1, "why": 1, "we": [1, 4, 13, 16, 17, 18], "us": [1, 2, 4, 5, 6, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20], "instead": [1, 2, 9, 10], "uint32": 1, "old": 1, "version": [1, 10, 13], "pytorch": 1, "do": [1, 2, 13], "support": [1, 4, 9, 13, 15, 17], "paramet": [1, 3, 4, 5, 6, 9], "batch": [1, 6, 15, 16, 18], "size": [1, 9, 15], "vocabulari": [1, 6, 9, 15, 17], "return": [1, 3, 4, 5, 6, 9], "type": [1, 3, 4, 5, 6, 8, 9, 18], "apply_token_bitmask_inplac": [1, 7, 16, 17, 18], "logit": [1, 4, 15, 16, 18], "option": [1, 4, 5, 6, 9, 18], "none": [1, 3, 4, 5, 6, 9], "indic": 1, "list": [1, 4, 5, 6, 9, 16, 17, 18], "appli": [1, 6, 15, 16, 17, 18], "place": 1, "01": 1, "bitwis": 1, "compress": [1, 15], "where": [1, 4, 6], "0": [1, 6, 9, 14, 15, 16, 17, 18], "mean": [1, 4, 6, 20], "mask": [1, 2, 4, 6, 9, 15, 16, 17, 18], "1": [1, 3, 4, 5, 6, 9, 16, 17, 18, 20], "It": [1, 4, 5, 6, 9, 14, 15, 16, 17, 18, 19, 20], "gener": [1, 2, 4, 5, 6, 9, 12, 15], "fill": [1, 6, 17], "fill_next_token_bitmask": [1, 4, 6, 16, 17, 18, 20], "after": [1, 6, 11, 15, 17], "set": [1, 3, 4, 5, 9, 11, 15, 17, 20], "inf": 1, "should": [1, 4, 5, 6, 9, 14, 17], "bitmask_s": 1, "respect": 1, "rang": [1, 6, 16, 17, 18], "j": [1, 19], "get_bitmask_valu": 1, "get": [1, 3, 4, 5, 6, 16, 17, 18, 20], "th": 1, "bit": 1, "row": 1, "note": [1, 2, 4, 5, 9, 16, 17, 18], "pad": [1, 9, 16, 17, 18], "thi": [1, 2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 19], "method": [1, 3, 4, 5, 6, 9], "allow": [1, 3, 4, 5, 6, 15], "addit": 1, "dimens": 1, "If": [1, 4, 5, 6, 9, 13, 20], "exist": 1, "provid": [1, 4, 6, 9, 13, 14, 15, 16, 18, 19, 20], "real": 1, "vocab": [1, 9], "detect": [1, 6, 9], "min": 1, "specifi": [1, 4, 5, 6, 9, 16, 18], "which": [1, 17, 20], "especi": [1, 4], "when": [1, 4, 5, 9, 10, 13, 17], "ar": [1, 4, 9, 10, 14, 15, 16, 17, 18], "structur": [1, 4, 5, 7, 12, 14, 15, 16, 18], "request": [1, 16, 17, 18], "unstructur": 1, "mix": 1, "same": [1, 4, 5, 9, 15, 17], "skip": 1, "batch_id": 1, "As": 1, "long": 1, "valid": [1, 3, 15, 16, 17, 18], "perform": 1, "devic": [1, 14, 16, 17, 18], "both": 1, "them": [1, 4, 6, 9, 10, 17], "gpu": [1, 13, 14, 16, 17, 18], "launch": 1, "kernel": [1, 17], "implement": [1, 17], "optim": [1, 6], "prefer": [1, 10], "In": [1, 4, 5, 6, 9, 11, 15, 16, 17, 18], "practic": 1, "usual": 1, "so": [1, 6, 15, 16, 17, 18], "manual": [1, 3, 9], "copi": [1, 13], "befor": [1, 9], "call": [1, 4, 17], "function": [1, 4, 6], "default": [1, 3, 4, 5, 6, 9, 17, 20], "A": [1, 2, 3, 8, 16], "uniqu": 1, "all": [1, 4, 5, 6, 13, 16, 17, 18], "reset_token_bitmask": [1, 7], "reset": [1, 6, 16, 17, 18], "full": [1, 10], "tupl": [1, 4, 5], "arg": 1, "ani": [1, 4, 5, 6, 8, 9, 14], "kwarg": 1, "dtype": [1, 15], "class": [2, 4, 5, 6, 8, 9, 18, 20], "primari": 2, "object": [2, 4, 5, 18], "store": [2, 5, 20], "compil": [2, 5, 11, 16, 17, 18, 19, 20], "grammar": [2, 5, 6, 7, 8, 9, 15, 16, 17, 18, 20], "grammarmatch": [2, 4, 7, 16, 18, 20], "effici": [2, 16, 17, 18], "directli": [2, 13], "grammarcompil": [2, 7, 14, 16, 18, 20], "attribut": [2, 5, 6, 9], "properti": [2, 4, 5, 6, 9, 18], "origin": [2, 3, 9], "tokenizer_info": [2, 5, 9, 14, 16, 17, 18, 20], "tokenizerinfo": [2, 5, 7, 14, 16, 18], "info": [2, 5, 9, 16, 17, 18], "associ": [2, 5], "memory_size_byt": 2, "approxim": [2, 5], "usag": [2, 5, 14], "byte": [2, 5, 6, 9], "get_max_recursion_depth": [3, 20], "maximum": [3, 5, 6, 20], "share": 3, "per": [3, 17, 20], "process": [3, 9, 20], "determin": [3, 4, 9], "follow": [3, 4, 5, 6, 11, 13, 15, 16, 17], "order": 3, "via": [3, 13, 17], "set_max_recursion_depth": [3, 20], "2": [3, 9, 14, 16, 17, 18], "xgrammar_max_recursion_depth": 3, "environ": [3, 10, 16, 17, 18], "variabl": [3, 11], "integ": [3, 18], "1000000": 3, "3": [3, 9, 14, 16, 17, 18], "valu": [3, 4, 5, 6, 9], "10000": [3, 20], "max_recursion_depth": [3, 20], "thread": [3, 5, 17], "safe": [3, 17], "temp_depth": 3, "context": [3, 4, 6, 20], "temporarili": 3, "exampl": [3, 4, 5, 18], "recursion_depth": 3, "1000": 3, "here": [3, 9, 16, 17, 18], "pass": [3, 4, 9, 17], "restor": 3, "repres": [4, 16], "later": [4, 13, 17], "guid": [4, 5, 6, 9, 14, 17], "free": 4, "cfg": 4, "ebnf": [4, 5, 12, 14, 17], "extend": 4, "backu": 4, "naur": 4, "form": [4, 9], "format": [4, 5, 9, 16], "There": [4, 17], "mani": 4, "specif": [4, 6, 10, 13, 14, 16], "literatur": 4, "gbnf": [4, 14, 16], "ggml": [4, 16], "bnf": [4, 16], "http": [4, 5, 9, 10, 13], "github": [4, 5, 9, 12, 13, 14], "com": [4, 5, 9, 13], "ggerganov": [4, 5], "llama": [4, 5, 9, 14, 16, 17, 18], "cpp": [4, 5], "blob": [4, 5, 9], "master": [4, 5], "readm": [4, 5], "md": [4, 5, 10], "print": [4, 6, 13, 14, 16, 18], "convert": [4, 9], "__str__": 4, "str": [4, 5, 6, 8, 9, 18], "string": [4, 5, 6, 9, 14, 16, 18], "grammar_str": 4, "static": [4, 9], "from_ebnf": 4, "ebnf_str": [4, 5, 14], "root_rule_nam": [4, 5], "root": [4, 5, 11, 16], "from": [4, 5, 6, 9, 14, 15, 16, 17, 18, 20], "name": [4, 5, 9, 13, 17, 18], "rule": [4, 5], "rais": [4, 6, 20], "runtimeerror": [4, 6, 20], "regex": [4, 5], "pattern": 4, "fail": 4, "detail": [4, 5, 8, 9, 14], "about": [4, 6], "pars": [4, 20], "error": 4, "from_json_schema": 4, "schema": [4, 5, 8, 14, 16, 18], "union": [4, 5, 6, 8, 9], "basemodel": [4, 5, 8, 18], "dict": [4, 5, 8], "any_whitespac": [4, 5], "bool": [4, 5, 6, 9], "true": [4, 5, 6, 14, 16, 17, 18], "indent": [4, 5], "separ": [4, 5], "strict_mod": [4, 5], "print_converted_ebnf": 4, "fals": [4, 5, 6, 9, 14, 16, 17, 18], "json": [4, 5, 9, 12, 14, 16, 17], "pydant": [4, 5, 18], "model": [4, 5, 9, 13, 14, 16, 17, 18], "whitespac": 4, "want": [4, 13], "convent": [4, 5], "dump": [4, 5, 9, 18], "intern": [4, 6], "whether": [4, 5, 6, 9], "ignor": 4, "number": [4, 5, 6], "space": [4, 5, 9], "output": [4, 5, 6, 14, 15, 16, 18], "one": [4, 5, 6, 18], "line": [4, 5], "forc": 4, "llm": [4, 5, 6, 9, 12, 14, 15, 19, 20], "strictli": 4, "howev": 4, "some": [4, 9, 17], "mai": [4, 5, 9, 16, 18, 20], "tend": 4, "case": [4, 6, 9, 14, 17], "degrad": 4, "qualiti": 4, "sgl": 4, "project": [4, 12, 13], "sglang": 4, "issu": [4, 14], "2216": 4, "issuecom": 4, "2516192009": 4, "more": [4, 5, 8, 9, 14, 16, 19], "two": [4, 5, 17, 18], "comma": [4, 5], "colon": [4, 5], "otherwis": [4, 5, 6, 17], "strict": [4, 5], "mode": [4, 5], "item": [4, 5, 8, 20], "equival": [4, 5], "unevaluatedproperti": [4, 5], "unevaluateditem": [4, 5], "accur": [4, 5], "For": [4, 10, 17, 18, 19], "debug": [4, 6], "purpos": 4, "from_regex": 4, "regex_str": 4, "creat": 4, "regular": 4, "express": 4, "first": [4, 16, 17, 18], "from_structural_tag": [4, 5, 8], "tag": [4, 5, 7], "structuraltagitem": [4, 5, 7, 8], "trigger": [4, 5], "handl": [4, 6, 9], "dispatch": 4, "differ": [4, 17], "base": [4, 8, 9, 10, 17], "initi": [4, 6], "until": 4, "encount": 4, "correspond": 4, "end": [4, 8, 16, 18], "func_nam": 4, "arg1": 4, "arg2": 4, "consist": 4, "three": [4, 9, 18], "part": 4, "begin": [4, 8], "accord": [4, 17], "describ": [4, 5], "abl": 4, "multipl": [4, 5, 9], "prefix": 4, "constrain": [4, 12], "match": [4, 6], "Then": [4, 15, 16, 17, 18], "must": [4, 6, 15], "e": [4, 9, 13], "g": [4, 9, 13], "get_weath": 4, "citi": 4, "beij": 4, "corrrespond": 4, "automat": [4, 9, 10, 13], "group": 4, "togeth": 4, "make": [4, 10, 13, 16, 17, 18], "sure": [4, 10, 16, 17, 18], "anoth": 4, "ambigu": 4, "To": [4, 11, 14, 17, 19], "each": [4, 10, 15, 16, 17, 18], "like": 4, "enforc": [4, 16, 17, 18], "benefit": 4, "boundari": [4, 9], "between": [4, 9], "doe": [4, 6], "worri": 4, "schema1": 4, "schema2": 4, "arg3": 4, "float": 4, "arg4": 4, "f": 4, "builtin_json_grammar": 4, "standard": [4, 5], "compat": 4, "offici": 4, "www": 4, "org": 4, "en": 4, "html": 4, "concat": 4, "concaten": 4, "That": 4, "oper": [4, 6, 7, 13, 20], "max_thread": [5, 16, 17, 18], "8": [5, 16, 17, 18], "cache_en": 5, "cache_limit_byt": [5, 20], "certain": [5, 13], "compiledgrammar": [5, 6, 7, 18], "parallel": 5, "ha": [5, 6, 9, 17, 20], "cach": [5, 17], "result": [5, 17], "avoid": [5, 20], "time": [5, 6, 10], "__init__": [5, 6, 9, 13], "enabl": [5, 16, 17, 18], "unit": 5, "actual": [5, 16, 17, 18], "slightli": 5, "exce": [5, 6, 20], "compile_json_schema": [5, 14, 18], "compiled_grammar": [5, 6, 14, 16, 17, 18], "compile_builtin_json_grammar": [5, 14, 17, 18], "compile_regex": 5, "compile_structural_tag": 5, "compile_grammar": [5, 14, 16], "overload": 5, "clear_cach": 5, "clear": 5, "get_cache_size_byt": 5, "limit": 5, "override_stop_token": 6, "terminate_without_stop_token": 6, "max_rollback_token": 6, "core": 6, "maintain": [6, 16, 17, 18], "state": [6, 16, 17, 18], "matcher": [6, 16, 17, 18, 20], "accept": [6, 16, 17, 18], "bitmask": [6, 7, 16, 18], "Its": 6, "roll": 6, "back": [6, 9], "also": [6, 9, 13, 15, 16, 17, 18, 19, 20], "util": 6, "jump": 6, "forward": 6, "decod": [6, 9, 12, 14, 16, 18], "whole": 6, "stop": [6, 9, 16, 17, 18], "onli": 6, "termin": [6, 16, 17, 18], "cannot": 6, "new": [6, 10, 14], "finish": 6, "under": 6, "hood": 6, "pushdown": [6, 20], "automaton": 6, "backtrack": 6, "overrid": 6, "ones": [6, 13], "without": [6, 9], "rollback": 6, "specul": 6, "accept_token": [6, 16, 17, 18, 20], "token_id": [6, 20], "debug_print": 6, "updat": [6, 10, 13, 16, 17, 18], "try": 6, "id": [6, 9], "out": [6, 14, 17], "special": [6, 9], "captur": 6, "inform": [6, 9, 17, 19], "recurs": [6, 7, 13], "depth": [6, 7, 20], "exceed": 6, "accept_str": [6, 20], "input_str": 6, "consid": [6, 9], "step": [6, 11, 15, 16, 17, 18], "complement": 6, "alwai": [6, 9, 16, 17, 18], "index": 6, "input": [6, 9, 14, 16, 18], "chang": [6, 10], "need_appli": 6, "alreadi": [6, 14], "find_jump_forward_str": [6, 20], "find": [6, 11], "longest": 6, "certainli": 6, "conform": 6, "current": [6, 16, 17, 20], "becom": 6, "requir": [6, 10, 13, 18], "jump_forward_str": 6, "num_token": 6, "previou": 6, "sever": [6, 17], "nor": 6, "is_termin": [6, 16, 17, 18], "check": [6, 14], "stop_token_id": [6, 9], "xgr": [7, 14, 16, 18], "vocabtyp": [7, 9], "configur": [7, 11, 17], "schema_": 8, "given": 9, "modul": [9, 13], "qualnam": 9, "start": 9, "enum": 9, "raw": 9, "byte_fallback": 9, "byte_level": 9, "kept": 9, "kind": 9, "includ": [9, 13, 17, 20], "tiktoken": 9, "microsoft": 9, "phi": 9, "small": 9, "8k": 9, "instruct": [9, 14, 16, 17, 18], "qwen": 9, "7b": 9, "chat": 9, "etc": [9, 13, 16, 18], "fallback": 9, "bpe": 9, "encod": [9, 16, 17, 18], "through": 9, "convers": 9, "0x1b": 9, "appl": [9, 13], "meta": [9, 14, 16, 17, 18], "5": [9, 16], "mini": 9, "level": 9, "unicod": 9, "huggingfac": [9, 13, 14], "transform": [9, 14, 17], "87be06ca77166e6a6215eee5a990ab9f07238a18": 9, "src": 9, "gpt2": 9, "tokenization_gpt2": 9, "py": [9, 13], "l38": 9, "l59": 9, "8b": 9, "encoded_vocab": 9, "vocab_typ": 9, "add_prefix_spac": 9, "contain": [9, 13, 16, 18], "necessari": [9, 16, 17, 18], "although": 9, "bytefallback": 9, "\u0121": 9, "deepseek": 9, "v2": 9, "": [9, 17, 18], "larger": [9, 16, 17, 18], "than": [9, 16, 17, 18], "pleas": [9, 10, 11], "constructor": 9, "becaus": 9, "len": [9, 14, 16, 17, 18], "auto": [9, 16, 18], "correct": [9, 10], "prepend": 9, "text": [9, 14, 16, 18], "from_huggingfac": [9, 14, 16, 17, 18], "pretrainedtokenizerbas": 9, "variou": [9, 13], "backend": 9, "fast": [9, 12], "introduc": [9, 14, 16, 18], "misalign": 9, "could": 9, "defin": [9, 10], "config": [9, 11, 13, 14, 16, 17, 18], "eos_token_id": 9, "other": [9, 14, 17], "you": [9, 10, 11, 13, 14, 16, 17, 18, 20], "equal": 9, "diment": 9, "lm_head": 9, "most": [9, 14, 17], "common": 9, "happen": 9, "possibli": 9, "due": [9, 16, 17, 18], "align": 9, "power": 9, "smaller": 9, "ad": [9, 10], "vision": 9, "molmo": 9, "72b": 9, "0924": 9, "imag": 9, "thei": [9, 17], "model_vocab_s": 9, "prepend_space_in_token": 9, "deprec": 9, "decoded_vocab": 9, "special_token_id": 9, "control": 9, "reserv": 9, "now": [9, 16, 17, 18], "dump_metadata": 9, "metadata": 9, "from_vocab_and_metadata": 9, "document": [10, 14], "host": 10, "written": [10, 13], "markdown": 10, "restructuredtext": 10, "rst": 10, "instal": [10, 12, 14, 19], "depend": [10, 13], "non": 10, "debian": 10, "system": [10, 13, 14, 16, 18], "conda": [10, 13, 16, 17, 18], "your": [10, 16, 17, 18], "packag": 10, "rubi": 10, "sudo": 10, "apt": 10, "python": [10, 12, 14, 19], "m": [10, 13], "pip": [10, 13, 16, 17, 18], "r": [10, 16], "txt": 10, "gem": 10, "jekyl": 10, "remot": 10, "theme": 10, "bash": [10, 13], "script": [10, 11, 13], "local_deploy_sit": 10, "sh": [10, 11, 13], "websit": 10, "localhost": 10, "8888": 10, "merg": 10, "main": [10, 16, 17, 18], "branch": 10, "workflow": 10, "yaml": 10, "upload": 10, "gh": 10, "featur": 10, "accordingli": 10, "referenc": 10, "code": [10, 12, 16, 17, 18, 19, 20], "repositori": 10, "refer": 10, "releas": 10, "run_coverag": 11, "offer": 11, "wai": [11, 14, 17], "test": 11, "librari": [11, 16, 17, 18], "run": [11, 18, 19], "cmake": [11, 13], "xgrammar_enable_coverag": 11, "ON": 11, "directori": 11, "report": [11, 14], "coverage_report": 11, "open": [12, 14], "solut": 12, "flexibl": [12, 14, 16], "portabl": 12, "mission": 12, "bring": 12, "zero": 12, "overhead": [12, 16, 17, 18], "everywher": 12, "quick": 12, "integr": [12, 16, 18], "engin": 12, "runtim": 12, "safeguard": 12, "javascript": 12, "coverag": 12, "tool": 12, "platform": 13, "linux": 13, "maco": 13, "window": 13, "hardwar": 13, "nvidia": 13, "amd": 13, "silicon": 13, "tpu": 13, "9": [13, 16], "wheel": 13, "forg": 13, "command": 13, "verifi": 13, "import": [13, 14, 16, 17, 18, 20], "path": 13, "env": 13, "lib": 13, "python3": 13, "11": 13, "site": 13, "modif": 13, "obtain": 13, "git": 13, "clone": 13, "mlc": [13, 19], "ai": [13, 19], "cd": 13, "pre": [13, 17], "commit": 13, "cp": 13, "isol": [13, 16, 17, 18], "edit": 13, "rebuild": 13, "gate": 13, "cli": 13, "login": 13, "your_hf_token": 13, "pytest": 13, "subset": 13, "hf_token_requir": 13, "rust": 13, "ninja": 13, "mkdir": 13, "run_ctest": 13, "filter": 13, "test_nam": 13, "whose": 13, "how": [14, 16, 17, 18], "focus": 14, "instanti": [14, 16, 17, 18], "automodelforcausallm": [14, 16, 18], "autotoken": [14, 16, 17, 18], "autoconfig": [14, 16, 17, 18], "Or": [14, 16, 18], "don": 14, "t": [14, 16], "model_nam": [14, 16, 18], "1b": [14, 16, 17, 18], "from_pretrain": [14, 16, 17, 18], "torch_dtyp": [14, 16, 18], "float32": [14, 16, 18], "device_map": [14, 16, 18], "messag": [14, 16, 18], "role": [14, 16, 18], "content": [14, 16, 18], "assist": [14, 16, 18], "yourself": [14, 16, 18], "briefli": [14, 16], "apply_chat_templ": [14, 16, 18], "add_generation_prompt": [14, 16, 18], "model_input": [14, 16, 18], "return_tensor": [14, 16, 18], "pt": [14, 16, 18], "custom": [14, 16, 18], "grammar_compil": [14, 16, 18], "json_schema_str": 14, "logits_processor": [14, 16, 18], "xgr_logits_processor": [14, 16, 18], "contrib": [14, 16, 18], "hf": 14, "logitsprocessor": [14, 16, 18], "generated_id": [14, 16, 18], "max_new_token": [14, 16, 18], "512": [14, 16, 18], "input_id": [14, 16, 18], "skip_special_token": [14, 16, 18], "problem": 14, "ask": 14, "question": 14, "our": [14, 17], "repo": 14, "techniqu": 15, "infer": [15, 16, 18], "prohibit": 15, "those": 15, "binari": 15, "length": [15, 17], "sampl": [15, 16, 17, 18], "stage": 15, "let": 15, "take": 15, "closer": 15, "look": 15, "infti": 15, "probabl": 15, "softmax": [15, 16, 17, 18], "sampler": 15, "vaild": 15, "bitset": 15, "storag": 15, "multi": 15, "therefor": [15, 17], "besid": [16, 19], "go": [16, 17, 18], "over": [16, 17, 18], "achiev": [16, 18], "avail": [16, 17, 18], "recommend": [16, 17, 18], "virtual": [16, 17, 18], "section": [16, 17, 18], "ensur": [16, 18], "snippet": [16, 17, 18], "below": [16, 17, 18], "runnabl": [16, 17, 18], "simul": [16, 17, 18], "tutori": [16, 17, 18], "numpi": [16, 17, 18], "np": [16, 17, 18], "extract": [16, 18], "With": [16, 17, 18], "choic": [16, 17, 18], "model_id": [16, 17, 18], "full_vocab_s": [16, 17, 18], "ebnf_grammar_str": 16, "expr": 16, "term": 16, "num": 16, "interact": [16, 17, 18], "token_bitmask": [16, 17, 18], "singl": [16, 17, 18], "regress": [16, 18], "respons": [16, 17, 18], "sim_sampled_respons": [16, 17, 18], "16": 16, "end_of_text": [16, 17, 18], "sim_sampled_token_id": [16, 17, 18], "add_special_token": [16, 17, 18], "loop": [16, 17, 18], "iter": [16, 17, 18], "sim_token_id": [16, 17, 18], "enumer": [16, 17, 18], "randn": [16, 17, 18], "invalid": [16, 17, 18], "prob": [16, 17, 18], "dim": [16, 17, 18], "next_token_id": [16, 17, 18], "random": [16, 17, 18], "p": [16, 17, 18], "its": [16, 17, 18], "assert": [16, 17, 18], "inde": [16, 17, 18], "sinc": [16, 17, 18], "readi": [16, 17, 18], "easili": [16, 18], "mainli": [16, 18], "aim": [16, 18], "access": [16, 18], "extra": [16, 18], "json_grammar_ebnf_str": 16, "basic_arrai": 16, "basic_object": 16, "basic_ani": 16, "basic_numb": 16, "basic_str": 16, "basic_boolean": 16, "basic_nul": 16, "basic_integ": 16, "ee": 16, "basic_string_1": 16, "x00": 16, "x1f": 16, "escap": 16, "bfnrt": 16, "u": 16, "fa": 16, "f0": 16, "null": 16, "w": 16, "n": 16, "final": [16, 17, 18], "kei": 17, "compon": 17, "lai": 17, "concept": 17, "demonstr": 17, "encapsul": 17, "conveni": 17, "former": 17, "being": 17, "persist": 17, "behavior": 17, "multithread": 17, "enable_cach": 17, "everi": 17, "thing": 17, "seen": 17, "up": 17, "rather": 17, "essenti": 17, "illeg": 17, "neg": 17, "infin": 17, "never": 17, "prepar": 17, "abov": 17, "assum": 17, "work": 17, "exact": 17, "sai": 17, "simplic": 17, "just": 17, "But": 17, "easi": 17, "b": 17, "loop_it": 17, "paralleliz": 17, "estim": 17, "One": 18, "adher": 18, "pick": 18, "person": 18, "ag": 18, "person_schema": 18, "titl": 18, "field": 18, "c": 19, "typescript": 19, "sdk": 19, "emscripten": 19, "webassembli": 19, "design": 19, "browser": 19, "webllm": 19, "npm": 19, "web": 19, "mechan": 20, "server": 20, "crash": 20, "automata": 20, "parser": 20, "involv": 20, "veri": 20, "deep": 20, "caus": 20, "stack": 20, "overflow": 20, "block": 20, "grow": 20, "too": 20, "larg": 20, "lru": 20, "algorithm": 20, "evict": 20, "least": 20, "recent": 20}, "objects": {"xgrammar": [[2, 0, 1, "", "CompiledGrammar"], [4, 0, 1, "", "Grammar"], [5, 0, 1, "", "GrammarCompiler"], [6, 0, 1, "", "GrammarMatcher"], [8, 0, 1, "", "StructuralTagItem"], [9, 0, 1, "", "TokenizerInfo"], [9, 0, 1, "", "VocabType"], [1, 4, 1, "", "allocate_token_bitmask"], [1, 4, 1, "", "apply_token_bitmask_inplace"], [1, 5, 1, "", "bitmask_dtype"], [1, 4, 1, "", "get_bitmask_shape"], [3, 4, 1, "", "get_max_recursion_depth"], [3, 4, 1, "", "max_recursion_depth"], [1, 4, 1, "", "reset_token_bitmask"], [3, 4, 1, "", "set_max_recursion_depth"]], "xgrammar.CompiledGrammar": [[2, 1, 1, "", "grammar"], [2, 1, 1, "", "memory_size_bytes"], [2, 1, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[4, 2, 1, "", "__str__"], [4, 2, 1, "", "builtin_json_grammar"], [4, 2, 1, "", "concat"], [4, 2, 1, "", "from_ebnf"], [4, 2, 1, "", "from_json_schema"], [4, 2, 1, "", "from_regex"], [4, 2, 1, "", "from_structural_tag"], [4, 2, 1, "", "union"]], "xgrammar.GrammarCompiler": [[5, 2, 1, "", "__init__"], [5, 1, 1, "", "cache_limit_bytes"], [5, 2, 1, "", "clear_cache"], [5, 2, 1, "", "compile_builtin_json_grammar"], [5, 2, 1, "", "compile_grammar"], [5, 2, 1, "", "compile_json_schema"], [5, 2, 1, "", "compile_regex"], [5, 2, 1, "", "compile_structural_tag"], [5, 2, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[6, 2, 1, "", "__init__"], [6, 2, 1, "", "accept_string"], [6, 2, 1, "", "accept_token"], [6, 2, 1, "", "fill_next_token_bitmask"], [6, 2, 1, "", "find_jump_forward_string"], [6, 2, 1, "", "is_terminated"], [6, 1, 1, "", "max_rollback_tokens"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "rollback"], [6, 1, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[8, 3, 1, "", "begin"], [8, 3, 1, "", "end"], [8, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[9, 2, 1, "", "__init__"], [9, 1, 1, "", "add_prefix_space"], [9, 1, 1, "", "decoded_vocab"], [9, 2, 1, "", "dump_metadata"], [9, 2, 1, "", "from_huggingface"], [9, 2, 1, "", "from_vocab_and_metadata"], [9, 1, 1, "", "prepend_space_in_tokenization"], [9, 1, 1, "", "special_token_ids"], [9, 1, 1, "", "stop_token_ids"], [9, 1, 1, "", "vocab_size"], [9, 1, 1, "", "vocab_type"]], "xgrammar.VocabType": [[9, 3, 1, "", "BYTE_FALLBACK"], [9, 3, 1, "", "BYTE_LEVEL"], [9, 3, 1, "", "RAW"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"xgrammar": [0, 7, 12, 13, 15, 16, 17, 18], "document": 0, "bitmask": [1, 17], "oper": 1, "xgr": [2, 4, 5, 6, 9, 17], "compiledgrammar": [2, 17], "configur": 3, "recurs": [3, 20], "depth": 3, "manag": 3, "grammar": [4, 14], "grammarcompil": [5, 17], "grammarmatch": [6, 17], "python": [7, 13], "api": [7, 12, 19], "structur": [8, 17], "tag": 8, "tokenizerinfo": [9, 17], "build": [10, 13], "doc": 10, "local": 10, "deploi": 10, "github": 10, "page": 10, "best": 10, "practic": 10, "write": 10, "code": 11, "coverag": 11, "tool": 11, "welcom": 12, "get": 12, "start": [12, 14], "tutori": 12, "featur": 12, "develop": 12, "guid": [12, 16], "refer": 12, "instal": [13, 16, 17, 18], "method": 13, "1": 13, "prebuilt": 13, "packag": 13, "2": 13, "from": 13, "sourc": 13, "option": 13, "run": 13, "test": 13, "3": 13, "c": 13, "librari": 13, "onli": 13, "quick": 14, "prepar": 14, "compil": 14, "gener": [14, 16, 17, 18], "what": 14, "do": 14, "next": 14, "constrain": 15, "decod": 15, "": 15, "optim": 15, "ebnf": 16, "llm": [16, 17, 18], "engin": [16, 17, 18], "try": [16, 18], "out": [16, 18], "via": [16, 18], "hf": [16, 18], "transform": [16, 18], "integr": 17, "high": 17, "level": 17, "flow": 17, "logit": 17, "auto": 17, "regress": 17, "batch": 17, "infer": 17, "json": 18, "javascript": 19, "runtim": 20, "safeguard": 20, "limit": 20, "cach": 20, "size": 20}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"XGrammar Documentation": [[0, "xgrammar-documentation"]], "Bitmask Operations": [[1, "bitmask-operations"]], "xgr.CompiledGrammar": [[2, "xgr-compiledgrammar"], [17, "xgr-compiledgrammar"]], "Configuration": [[3, "configuration"]], "Recursion Depth Management": [[3, "recursion-depth-management"]], "xgr.Grammar": [[4, "xgr-grammar"]], "xgr.GrammarCompiler": [[5, "xgr-grammarcompiler"], [17, "xgr-grammarcompiler"]], "xgr.GrammarMatcher": [[6, "xgr-grammarmatcher"], [17, "xgr-grammarmatcher"]], "XGrammar Python API": [[7, "xgrammar-python-api"]], "Structural Tag": [[8, "structural-tag"]], "xgr.TokenizerInfo": [[9, "xgr-tokenizerinfo"], [17, "xgr-tokenizerinfo"]], "Building Docs": [[10, "building-docs"]], "Building Docs Locally": [[10, "building-docs-locally"]], "Deploying Docs on GitHub Pages": [[10, "deploying-docs-on-github-pages"]], "Best Practices for Writing Docs": [[10, "best-practices-for-writing-docs"]], "Code Coverage Tool": [[11, "code-coverage-tool"]], "\ud83d\udc4b Welcome to XGrammar": [[12, "welcome-to-xgrammar"]], "Get Started": [[12, null]], "Tutorials": [[12, null]], "XGrammar Features": [[12, null]], "Developer Guide": [[12, null]], "API Reference": [[12, null]], "Installation": [[13, "installation"]], "Method 1: Prebuilt Package": [[13, "method-1-prebuilt-package"]], "Method 2: Build XGrammar from Source": [[13, "method-2-build-xgrammar-from-source"]], "Optional: Run Python Tests": [[13, "optional-run-python-tests"]], "Method 3: Build XGrammar C++ Library Only": [[13, "method-3-build-xgrammar-c-library-only"]], "Optional: Run C++ Tests": [[13, "optional-run-c-tests"]], "Quick Start": [[14, "quick-start"]], "Preparation": [[14, "preparation"]], "Compile Grammar": [[14, "compile-grammar"]], "Generate with grammar": [[14, "generate-with-grammar"]], "What to Do Next": [[14, "what-to-do-next"]], "Constrained Decoding": [[15, "constrained-decoding"]], "XGrammar\u2019s Optimization": [[15, "xgrammar-s-optimization"]], "EBNF-Guided Generation": [[16, "ebnf-guided-generation"]], "Install XGrammar": [[16, "install-xgrammar"], [17, "install-xgrammar"], [18, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[16, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[16, "try-out-via-hf-transformers"], [18, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[17, "integration-with-llm-engine"]], "High-Level Flow": [[17, "high-level-flow"]], "Bitmasking Logits in Auto-regressive Generation": [[17, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[17, "structured-generation-for-batched-inference"]], "JSON Generation": [[18, "json-generation"]], "JSON Generation in LLM Engines": [[18, "json-generation-in-llm-engines"]], "JavaScript API": [[19, "javascript-api"]], "Runtime Safeguards": [[20, "runtime-safeguards"]], "Recursion Limit": [[20, "recursion-limit"]], "Cache Size Limit": [[20, "cache-size-limit"]]}, "indexentries": {"allocate_token_bitmask() (in module xgrammar)": [[1, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[1, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[1, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[1, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[1, "xgrammar.reset_token_bitmask"]], "compiledgrammar (class in xgrammar)": [[2, "xgrammar.CompiledGrammar"]], "grammar (xgrammar.compiledgrammar property)": [[2, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[2, "xgrammar.CompiledGrammar.memory_size_bytes"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[2, "xgrammar.CompiledGrammar.tokenizer_info"]], "get_max_recursion_depth() (in module xgrammar)": [[3, "xgrammar.get_max_recursion_depth"]], "max_recursion_depth() (in module xgrammar)": [[3, "xgrammar.max_recursion_depth"]], "set_max_recursion_depth() (in module xgrammar)": [[3, "xgrammar.set_max_recursion_depth"]], "grammar (class in xgrammar)": [[4, "xgrammar.Grammar"]], "__str__() (xgrammar.grammar method)": [[4, "xgrammar.Grammar.__str__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.concat"]], "from_ebnf() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_structural_tag"]], "union() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[5, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[5, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_grammar() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[6, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[6, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[6, "xgrammar.GrammarMatcher.stop_token_ids"]], "structuraltagitem (class in xgrammar)": [[8, "xgrammar.StructuralTagItem"]], "begin (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.begin"]], "end (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.end"]], "schema_ (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.schema_"]], "byte_fallback (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.BYTE_FALLBACK"]], "byte_level (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.BYTE_LEVEL"]], "raw (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.RAW"]], "tokenizerinfo (class in xgrammar)": [[9, "xgrammar.TokenizerInfo"]], "vocabtype (class in xgrammar)": [[9, "xgrammar.VocabType"]], "__init__() (xgrammar.tokenizerinfo method)": [[9, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.decoded_vocab"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[9, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[9, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[9, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.vocab_type"]]}})