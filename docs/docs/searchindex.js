Search.setIndex({"docnames": ["api/python/bitmask_ops", "api/python/compiled_grammar", "api/python/configuration", "api/python/grammar", "api/python/grammar_compiler", "api/python/grammar_matcher", "api/python/index", "api/python/structural_tag", "api/python/testing", "api/python/tokenizer_info", "developer_guide/building_docs", "developer_guide/code_coverage", "index", "start/installation", "start/quick_start", "tutorials/advanced_topics", "tutorials/constrained_decoding", "tutorials/ebnf_guided_generation", "tutorials/engine_integration", "tutorials/json_generation", "tutorials/workflow_of_xgrammar", "xgrammar_features/javascript_api", "xgrammar_features/runtime_safeguards"], "filenames": ["api/python/bitmask_ops.rst", "api/python/compiled_grammar.rst", "api/python/configuration.rst", "api/python/grammar.rst", "api/python/grammar_compiler.rst", "api/python/grammar_matcher.rst", "api/python/index.rst", "api/python/structural_tag.rst", "api/python/testing.rst", "api/python/tokenizer_info.rst", "developer_guide/building_docs.md", "developer_guide/code_coverage.md", "index.rst", "start/installation.md", "start/quick_start.md", "tutorials/advanced_topics.md", "tutorials/constrained_decoding.md", "tutorials/ebnf_guided_generation.md", "tutorials/engine_integration.md", "tutorials/json_generation.md", "tutorials/workflow_of_xgrammar.md", "xgrammar_features/javascript_api.md", "xgrammar_features/runtime_safeguards.md"], "titles": ["Bitmask Operations", "xgr.CompiledGrammar", "Configuration", "xgr.Grammar", "xgr.GrammarCompiler", "xgr.GrammarMatcher", "XGrammar Python API", "Structural Tag", "xgr.testing", "xgr.TokenizerInfo", "Building Docs", "Code Coverage", "\ud83d\udc4b Welcome to XGrammar", "Installation", "Quick Start", "Advanced Topics", "Constrained Decoding", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "Workflow of XGrammar", "JavaScript API", "Runtime Safeguards"], "terms": {"xgrammar": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 15, 21, 22], "allocate_token_bitmask": [0, 5, 6, 8, 15, 16, 17, 18, 19, 20], "batch_siz": [0, 16, 18, 20], "int": [0, 1, 2, 3, 4, 5, 8, 9, 19, 20], "vocab_s": [0, 8, 9, 14, 15, 16, 17, 18, 19, 20], "torch": [0, 5, 8, 14, 17, 18, 19, 20], "tensor": [0, 5, 8, 15, 16, 17, 18, 19, 20], "sourc": [0, 1, 2, 3, 4, 5, 7, 8, 9, 12], "alloc": [0, 16, 17, 18, 19, 20], "next": [0, 3, 5, 17, 18, 19], "token": [0, 1, 3, 4, 5, 8, 9, 13, 14, 15, 17, 18, 19], "predict": [0, 5], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 21, 22], "i": [0, 1, 2, 3, 4, 5, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22], "an": [0, 3, 4, 5, 8, 14, 16, 17, 18, 19, 20, 22], "int32": [0, 16, 20], "cpu": [0, 5, 8, 13, 14, 15, 17, 18, 19, 20], "shape": [0, 15, 16, 17, 18, 19, 20], "ceil": [0, 16, 20], "32": [0, 8, 9, 16, 20], "user": [0, 3, 5, 8, 9, 14, 17, 19], "who": 0, "have": [0, 3, 11, 13, 14, 16, 17, 18, 19, 20], "own": [0, 18], "need": [0, 3, 5, 9, 10, 13, 18], "manag": [0, 6, 10, 22], "cuda": [0, 14, 17, 18, 19, 20], "memori": [0, 1, 4, 15, 16, 20], "can": [0, 1, 3, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22], "construct": [0, 1, 3, 4, 5, 9, 14, 15, 16, 17, 18, 19, 20], "get_bitmask_shap": [0, 6], "bitmask_dtyp": [0, 6], "themselv": 0, "reason": 0, "why": 0, "we": [0, 3, 13, 15, 16, 17, 18, 19, 20], "us": [0, 1, 3, 4, 5, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "instead": [0, 1, 9, 10], "uint32": 0, "old": 0, "version": [0, 10, 13], "pytorch": 0, "do": [0, 1, 13, 16], "support": [0, 3, 8, 9, 13, 16, 18, 20], "paramet": [0, 2, 3, 4, 5, 8, 9, 15], "batch": [0, 5, 8, 16, 17, 19, 20], "size": [0, 8, 9, 15, 16, 20], "vocabulari": [0, 5, 8, 9, 15, 16, 18, 20], "return": [0, 2, 3, 4, 5, 8, 9, 15], "type": [0, 2, 3, 4, 5, 7, 8, 9, 16, 19], "apply_token_bitmask_inplac": [0, 6, 17, 18, 19, 20], "logit": [0, 3, 16, 17, 19, 20], "option": [0, 3, 4, 5, 8, 9, 19], "none": [0, 2, 3, 4, 5, 8, 9], "indic": 0, "list": [0, 3, 4, 5, 8, 9, 17, 18, 19, 20], "appli": [0, 5, 16, 17, 18, 19, 20], "place": [0, 20], "01": 0, "bitwis": 0, "compress": [0, 16, 20], "where": [0, 3, 5], "0": [0, 5, 8, 9, 14, 16, 17, 18, 19, 20], "mean": [0, 3, 5, 8, 22], "mask": [0, 1, 3, 5, 8, 9, 16, 17, 18, 19, 20], "1": [0, 2, 3, 4, 5, 8, 9, 15, 16, 17, 18, 19, 20, 22], "It": [0, 3, 4, 5, 9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22], "gener": [0, 1, 3, 4, 5, 8, 9, 12], "fill": [0, 5, 8, 18, 20], "fill_next_token_bitmask": [0, 3, 5, 8, 16, 17, 18, 19, 20, 22], "after": [0, 5, 11, 16, 18, 20], "set": [0, 2, 3, 4, 8, 9, 11, 15, 16, 18, 20, 22], "inf": 0, "should": [0, 3, 4, 5, 8, 9, 14, 18, 20], "bitmask_s": 0, "respect": [0, 15], "rang": [0, 5, 8, 17, 18, 19], "j": [0, 21], "get_bitmask_valu": 0, "get": [0, 2, 3, 4, 5, 8, 16, 17, 18, 19, 22], "th": 0, "bit": [0, 8, 16], "row": 0, "note": [0, 1, 3, 4, 9, 11, 15, 16, 17, 18, 19], "pad": [0, 8, 9, 17, 18, 19], "thi": [0, 1, 2, 3, 4, 5, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21], "method": [0, 2, 3, 4, 5, 8, 9, 20], "allow": [0, 2, 3, 4, 5, 8, 16], "addit": [0, 8], "dimens": [0, 15], "If": [0, 3, 4, 5, 8, 9, 13, 15, 20, 22], "exist": 0, "provid": [0, 3, 5, 9, 13, 14, 16, 17, 19, 20, 21, 22], "real": [0, 20], "vocab": [0, 9], "detect": [0, 5, 9], "min": 0, "specifi": [0, 3, 4, 5, 8, 9, 16, 17, 19], "which": [0, 11, 18, 22], "especi": [0, 3, 16], "when": [0, 3, 4, 8, 9, 10, 13, 16, 18, 20], "ar": [0, 3, 8, 9, 10, 11, 14, 15, 16, 17, 18, 19], "structur": [0, 3, 4, 6, 8, 12, 14, 16, 17, 19, 20], "request": [0, 17, 18, 19], "unstructur": 0, "mix": 0, "same": [0, 3, 4, 9, 15, 16, 18, 20], "skip": 0, "batch_id": 0, "As": 0, "long": 0, "valid": [0, 2, 16, 17, 18, 19], "perform": [0, 15, 20], "devic": [0, 14, 17, 18, 19, 20], "both": [0, 15], "them": [0, 3, 5, 8, 9, 10, 18], "gpu": [0, 13, 14, 17, 18, 19, 20], "launch": 0, "kernel": [0, 18], "implement": [0, 18], "optim": [0, 5, 15], "prefer": [0, 10], "In": [0, 3, 4, 5, 8, 9, 11, 16, 17, 18, 19, 20], "practic": 0, "usual": 0, "so": [0, 5, 15, 16, 17, 18, 19, 20], "manual": [0, 2, 9], "copi": [0, 13], "befor": [0, 9], "call": [0, 3, 8, 18, 20], "function": [0, 3, 5, 8, 15], "default": [0, 2, 3, 4, 5, 8, 9, 18, 22], "A": [0, 1, 2, 7, 8, 17, 20], "uniqu": 0, "all": [0, 3, 4, 5, 13, 17, 18, 19], "reset_token_bitmask": [0, 6], "reset": [0, 5, 17, 18, 19, 20], "full": [0, 10], "tupl": [0, 3, 4, 8], "arg": 0, "ani": [0, 3, 4, 5, 7, 8, 9, 14], "kwarg": [0, 8], "dtype": [0, 16, 20], "class": [1, 3, 4, 5, 7, 8, 9, 16, 19, 22], "primari": 1, "object": [1, 3, 4, 8, 16, 19, 20], "store": [1, 4, 16, 22], "compil": [1, 4, 8, 11, 16, 17, 18, 19, 21, 22], "grammar": [1, 4, 5, 6, 7, 8, 9, 16, 17, 18, 19, 22], "grammarmatch": [1, 3, 6, 8, 16, 17, 19, 20, 22], "effici": [1, 17, 18, 19], "directli": [1, 13, 15, 16, 20], "grammarcompil": [1, 6, 14, 15, 17, 19, 20, 22], "attribut": [1, 4, 5, 9], "properti": [1, 3, 4, 5, 8, 9, 19], "origin": [1, 2, 9], "tokenizer_info": [1, 4, 8, 9, 14, 15, 17, 18, 19, 20, 22], "tokenizerinfo": [1, 4, 6, 8, 14, 15, 17, 19, 20], "info": [1, 4, 8, 9, 17, 18, 19], "associ": [1, 4, 20], "memory_size_byt": 1, "approxim": [1, 4], "usag": [1, 4, 14, 15], "byte": [1, 4, 5, 8, 9], "get_max_recursion_depth": [2, 22], "maximum": [2, 4, 5, 15, 22], "share": 2, "per": [2, 18, 22], "process": [2, 9, 15, 16, 20, 22], "determin": [2, 3, 9], "follow": [2, 3, 4, 5, 8, 11, 13, 16, 17, 18], "order": 2, "via": [2, 13, 18], "set_max_recursion_depth": [2, 22], "2": [2, 8, 9, 14, 17, 18, 19], "xgrammar_max_recursion_depth": 2, "environ": [2, 10, 17, 18, 19], "variabl": [2, 11], "integ": [2, 16, 19], "1000000": 2, "3": [2, 8, 9, 14, 17, 18, 19], "valu": [2, 3, 4, 5, 8, 9], "10000": [2, 22], "max_recursion_depth": [2, 22], "thread": [2, 4, 18], "safe": [2, 18], "temp_depth": 2, "context": [2, 3, 5, 20, 22], "temporarili": 2, "exampl": [2, 3, 4, 8, 15, 16, 19], "recursion_depth": 2, "1000": 2, "here": [2, 9, 17, 18, 19], "pass": [2, 3, 8, 9, 18, 20], "restor": 2, "repres": [3, 17], "later": [3, 13, 18], "guid": [3, 4, 5, 8, 9, 14, 18], "free": [3, 20], "cfg": 3, "ebnf": [3, 4, 8, 12, 14, 15, 18, 20], "extend": [3, 20], "backu": 3, "naur": 3, "form": [3, 9, 20], "format": [3, 4, 9, 16, 17, 20], "There": [3, 16, 18], "mani": [3, 16], "specif": [3, 5, 10, 13, 14, 17, 20], "literatur": 3, "gbnf": [3, 14, 17], "ggml": [3, 17], "bnf": [3, 8, 17, 20], "http": [3, 4, 8, 9, 10, 13], "github": [3, 4, 9, 13, 14], "com": [3, 4, 9, 13], "ggerganov": [3, 4], "llama": [3, 4, 9, 14, 17, 18, 19], "cpp": [3, 4], "blob": [3, 4, 9], "master": [3, 4], "readm": [3, 4], "md": [3, 4, 10], "print": [3, 5, 8, 13, 14, 17, 19, 20], "convert": [3, 8, 9, 16], "__str__": 3, "str": [3, 4, 5, 7, 8, 9, 19], "string": [3, 4, 5, 8, 9, 14, 15, 16, 17, 19, 20], "grammar_str": 3, "static": [3, 8, 9], "from_ebnf": [3, 20], "ebnf_str": [3, 4, 8, 14, 20], "root_rule_nam": [3, 4, 8], "root": [3, 4, 8, 11, 17], "from": [3, 4, 5, 8, 9, 14, 16, 17, 18, 19, 20, 22], "name": [3, 4, 8, 9, 13, 18, 19], "rule": [3, 4, 8], "rais": [3, 5, 22], "runtimeerror": [3, 5, 22], "regex": [3, 4, 8, 15, 20], "pattern": [3, 15, 20], "fail": [3, 16], "detail": [3, 4, 7, 9, 14, 16], "about": [3, 5, 8, 15, 16, 20], "pars": [3, 8, 16, 22], "error": [3, 16], "from_json_schema": [3, 20], "schema": [3, 4, 7, 8, 14, 15, 17, 19, 20], "union": [3, 4, 5, 7, 8, 9], "basemodel": [3, 4, 7, 8, 19], "dict": [3, 4, 7, 8], "any_whitespac": [3, 4, 8], "bool": [3, 4, 5, 8, 9, 20], "true": [3, 4, 5, 8, 14, 15, 17, 18, 19], "indent": [3, 4, 8], "separ": [3, 4, 8], "strict_mod": [3, 4, 8], "print_converted_ebnf": 3, "fals": [3, 4, 5, 8, 9, 14, 17, 18, 19], "json": [3, 4, 8, 9, 12, 14, 15, 16, 17, 18, 20], "pydant": [3, 4, 8, 19], "model": [3, 4, 8, 9, 13, 14, 15, 17, 18, 19, 20], "whitespac": 3, "want": [3, 13, 16], "convent": [3, 4], "dump": [3, 4, 9, 19], "intern": [3, 5], "whether": [3, 4, 5, 8, 9], "ignor": [3, 8], "number": [3, 4, 5, 8, 15], "space": [3, 4, 8, 9], "output": [3, 4, 5, 8, 14, 16, 17, 19, 20], "one": [3, 4, 5, 8, 19], "line": [3, 4, 8], "forc": 3, "llm": [3, 4, 5, 8, 9, 12, 14, 16, 20, 21, 22], "strictli": 3, "howev": [3, 11], "some": [3, 8, 9, 18], "mai": [3, 4, 9, 17, 19, 22], "tend": 3, "case": [3, 5, 9, 14, 16, 18], "degrad": 3, "qualiti": [3, 16], "see": [3, 4, 7, 9, 10, 14, 16, 17, 18, 19, 21], "sgl": 3, "project": [3, 12, 13], "sglang": 3, "issu": [3, 14, 16], "2216": 3, "issuecom": 3, "2516192009": 3, "more": [3, 4, 7, 9, 14, 16, 17, 20, 21], "two": [3, 4, 8, 15, 18, 19], "comma": [3, 4, 8], "colon": [3, 4, 8], "otherwis": [3, 4, 5, 8, 18], "strict": [3, 4, 8], "mode": [3, 4, 8], "item": [3, 4, 7, 8, 20, 22], "equival": [3, 4, 8, 20], "unevaluatedproperti": [3, 4, 8], "unevaluateditem": [3, 4, 8], "help": [3, 4, 5, 8, 11, 14, 17, 19], "accur": [3, 4, 8], "For": [3, 8, 10, 15, 16, 18, 19, 20, 21], "debug": [3, 5, 8], "purpos": [3, 8], "from_regex": [3, 20], "regex_str": [3, 20], "creat": [3, 8], "regular": 3, "express": 3, "first": [3, 17, 18, 19, 20], "from_structural_tag": [3, 4, 7], "tag": [3, 4, 6], "structuraltagitem": [3, 4, 6, 7], "trigger": [3, 4], "handl": [3, 5, 9, 20], "dispatch": 3, "differ": [3, 18], "base": [3, 7, 8, 9, 10, 18], "initi": [3, 5], "until": 3, "encount": 3, "correspond": 3, "end": [3, 7, 8, 17, 19], "func_nam": 3, "arg1": 3, "arg2": 3, "consist": 3, "three": [3, 9, 19], "part": [3, 11], "begin": [3, 7], "accord": [3, 18], "describ": [3, 4, 16, 20], "abl": 3, "multipl": [3, 4, 9, 15], "prefix": 3, "constrain": [3, 12, 20], "match": [3, 5, 8, 20], "Then": [3, 16, 17, 18, 19], "must": [3, 5, 16], "e": [3, 9, 13], "g": [3, 9, 13], "get_weath": 3, "citi": 3, "beij": 3, "corrrespond": 3, "automat": [3, 9, 10, 13], "group": [3, 8], "togeth": 3, "make": [3, 10, 13, 16, 17, 18, 19], "sure": [3, 10, 17, 18, 19], "anoth": 3, "ambigu": 3, "To": [3, 11, 14, 15, 16, 18, 20, 21], "each": [3, 8, 10, 16, 17, 18, 19, 20], "like": [3, 16], "enforc": [3, 17, 18, 19], "benefit": [3, 16], "boundari": [3, 8, 9], "between": [3, 9], "doe": [3, 5, 8], "worri": 3, "schema1": 3, "schema2": 3, "arg3": 3, "float": [3, 8], "arg4": 3, "f": 3, "builtin_json_grammar": [3, 20], "standard": [3, 4], "compat": 3, "offici": 3, "www": 3, "org": [3, 8], "en": [3, 8], "html": 3, "concat": 3, "concaten": 3, "That": 3, "oper": [3, 5, 6, 13, 15, 22], "max_thread": [4, 15, 17, 18, 19], "8": [4, 15, 17, 18, 19], "cache_en": [4, 15], "cache_limit_byt": [4, 15, 22], "certain": 4, "compiledgrammar": [4, 5, 6, 8, 16, 19, 20], "parallel": [4, 15], "ha": [4, 5, 9, 15, 16, 18, 22], "cach": [4, 18, 20], "result": [4, 8, 15, 18], "avoid": [4, 16, 22], "time": [4, 5, 8, 10, 15], "__init__": [4, 5, 9, 13], "enabl": [4, 15, 17, 18, 19], "unit": 4, "actual": [4, 11, 17, 18, 19], "slightli": 4, "exce": [4, 5, 22], "compile_json_schema": [4, 14, 15, 19, 20], "compiled_grammar": [4, 5, 8, 14, 17, 18, 19, 20], "compile_builtin_json_grammar": [4, 14, 18, 19, 20], "compile_regex": [4, 15, 20], "compile_structural_tag": 4, "compile_grammar": [4, 14, 15, 17, 20], "overload": 4, "clear_cach": [4, 15], "clear": 4, "get_cache_size_byt": 4, "limit": 4, "override_stop_token": 5, "terminate_without_stop_token": 5, "max_rollback_token": 5, "core": [5, 15, 20], "maintain": [5, 17, 18, 19], "state": [5, 16, 17, 18, 19], "matcher": [5, 8, 17, 18, 19, 22], "accept": [5, 8, 16, 17, 18, 19, 20], "bitmask": [5, 6, 8, 15, 17, 19], "Its": 5, "roll": 5, "back": [5, 9], "also": [5, 9, 13, 15, 16, 17, 18, 19, 20, 21, 22], "util": [5, 8], "jump": 5, "forward": 5, "decod": [5, 9, 12, 14, 17, 19, 20], "whole": 5, "stop": [5, 9, 17, 18, 19], "onli": [5, 8, 15, 16], "termin": [5, 17, 18, 19, 20], "cannot": [5, 8], "new": [5, 10, 14], "finish": 5, "under": 5, "hood": 5, "pushdown": [5, 22], "automaton": 5, "backtrack": 5, "overrid": 5, "ones": [5, 13], "without": [5, 8, 9, 16], "rollback": 5, "specul": 5, "accept_token": [5, 16, 17, 18, 19, 20, 22], "token_id": [5, 8, 20, 22], "debug_print": [5, 8], "updat": [5, 10, 13, 17, 18, 19], "try": 5, "id": [5, 8, 9], "out": [5, 14, 18], "special": [5, 9], "captur": [5, 8], "inform": [5, 8, 9, 18, 20, 21], "recurs": [5, 6, 13], "depth": [5, 6, 22], "exceed": 5, "accept_str": [5, 22], "input_str": [5, 8], "consid": [5, 9], "step": [5, 11, 17, 18, 19], "complement": 5, "alwai": [5, 9, 15, 16, 17, 18, 19], "index": [5, 8], "input": [5, 8, 9, 14, 15, 17, 19, 20], "chang": [5, 8, 10], "need_appli": 5, "alreadi": [5, 14, 16], "find_jump_forward_str": [5, 22], "find": [5, 11], "longest": 5, "certainli": 5, "conform": [5, 16], "current": [5, 8, 17, 18, 22], "becom": 5, "requir": [5, 10, 13, 19, 20], "jump_forward_str": 5, "num_token": 5, "previou": 5, "sever": [5, 18], "nor": 5, "is_termin": [5, 17, 18, 19, 20], "check": [5, 8, 14, 20], "stop_token_id": [5, 9], "xgr": [6, 14, 15, 16, 17, 19, 20, 22], "vocabtyp": [6, 9], "test": [6, 11], "_json_schema_to_ebnf": [6, 8], "_regex_to_ebnf": [6, 8], "_ebnf_to_grammar_no_norm": [6, 8], "_get_matcher_from_grammar": [6, 8], "_is_grammar_accept_str": [6, 8], "_get_masked_tokens_from_bitmask": [6, 8], "_is_single_token_bitmask": [6, 8], "_bool_mask_to_bitmask": [6, 8], "_get_matcher_from_grammar_and_tokenizer_info": [6, 8], "_get_allow_empty_rule_id": [6, 8], "_generate_range_regex": [6, 8], "_generate_float_regex": [6, 8], "grammarfunctor": [6, 8], "configur": [6, 11, 18], "schema_": 7, "api": 8, "modul": [8, 9, 13], "prone": 8, "don": [8, 14], "t": [8, 14, 16, 17], "product": 8, "bnf_string": 8, "with_rule_nam": 8, "syntax": [8, 16], "javascript": [8, 12], "ecma": 8, "262": 8, "develop": 8, "mozilla": 8, "u": [8, 17, 20], "doc": [8, 9, 12], "web": [8, 21], "refer": [8, 10], "regular_express": 8, "tutori": [8, 17, 18, 19, 20], "featur": [8, 10, 20], "backrefer": 8, "non": [8, 10], "assert": [8, 17, 18, 19], "unicod": [8, 9], "charact": 8, "escap": [8, 17], "p": [8, 17, 18, 19], "4": 8, "word": 8, "b": [8, 18], "5": [8, 9, 17], "6": 8, "quantifi": 8, "x": 8, "y": 8, "now": [8, 9, 17, 18, 19], "just": [8, 18], "repeat": 8, "element": 8, "workaround": 8, "primarili": 8, "intend": 8, "normal": 8, "unnorm": 8, "empti": 8, "either": 8, "contain": [8, 9, 13, 17, 19, 20], "print_tim": 8, "dure": [8, 20], "reject": 8, "mainli": [8, 17, 19], "infer": [8, 16, 17, 19], "rejected_token_id": 8, "singl": [8, 15, 16, 17, 18, 19], "is_single_token": 8, "bool_mask": 8, "align": [8, 9, 16], "block": [8, 22], "add": 8, "extra": [8, 17, 19], "while": [8, 20], "keyword": 8, "argument": 8, "constructor": [8, 9], "start": [8, 9], "transform": [8, 9, 14, 18, 20], "These": 8, "structure_norm": 8, "rule_inlin": 8, "inlin": 8, "byte_string_fus": 8, "fuse": 8, "dead_code_elimin": 8, "elimin": 8, "referenc": [8, 10], "lookahead_assertion_analyz": 8, "analyz": 8, "lookahead": 8, "given": [9, 16, 20], "qualnam": 9, "enum": 9, "raw": [9, 20], "byte_fallback": 9, "byte_level": 9, "kept": 9, "kind": 9, "includ": [9, 13, 15, 18, 20, 22], "tiktoken": [9, 20], "microsoft": 9, "phi": 9, "small": 9, "8k": 9, "instruct": [9, 14, 17, 18, 19], "qwen": 9, "7b": 9, "chat": 9, "etc": [9, 13, 17, 19, 20], "fallback": 9, "bpe": 9, "encod": [9, 17, 18, 19], "through": 9, "convers": 9, "0x1b": 9, "appl": [9, 13], "meta": [9, 14, 17, 18, 19], "mini": 9, "level": 9, "huggingfac": [9, 13, 14, 20], "87be06ca77166e6a6215eee5a990ab9f07238a18": 9, "src": 9, "gpt2": 9, "tokenization_gpt2": 9, "py": [9, 13], "l38": 9, "l59": 9, "8b": 9, "encoded_vocab": 9, "vocab_typ": 9, "add_prefix_spac": 9, "necessari": [9, 17, 18, 19, 20], "although": 9, "bytefallback": 9, "\u0121": 9, "deepseek": [9, 15], "v2": 9, "": [9, 15, 18, 19, 20], "larger": [9, 15, 17, 18, 19], "than": [9, 15, 17, 18, 19], "pleas": [9, 10, 11, 20], "becaus": [9, 15, 16, 20], "len": [9, 14, 17, 18, 19], "auto": [9, 17, 19], "correct": [9, 10, 16], "prepend": 9, "text": [9, 14, 16, 17, 19, 20], "from_huggingfac": [9, 14, 17, 18, 19, 20], "pretrainedtokenizerbas": 9, "variou": [9, 13], "backend": [9, 20], "fast": [9, 12, 20], "introduc": [9, 14, 17, 19, 20], "misalign": 9, "could": 9, "defin": [9, 10, 15], "config": [9, 11, 13, 14, 15, 17, 18, 19], "eos_token_id": 9, "other": [9, 14, 18], "you": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22], "equal": 9, "diment": 9, "lm_head": 9, "most": [9, 14, 15, 18, 20], "common": 9, "happen": 9, "possibli": 9, "due": [9, 17, 18, 19], "power": 9, "smaller": 9, "ad": [9, 10], "vision": 9, "molmo": 9, "72b": 9, "0924": 9, "imag": 9, "thei": [9, 18], "model_vocab_s": 9, "prepend_space_in_token": 9, "deprec": 9, "decoded_vocab": 9, "special_token_id": 9, "control": [9, 15, 16], "reserv": 9, "dump_metadata": 9, "metadata": 9, "from_vocab_and_metadata": 9, "sphinx": 10, "document": [10, 14], "host": 10, "written": [10, 13], "markdown": 10, "restructuredtext": 10, "rst": 10, "instal": [10, 12, 14, 21], "depend": [10, 13], "debian": 10, "system": [10, 13, 14, 17, 19], "conda": [10, 13, 17, 18, 19], "your": [10, 15, 17, 18, 19], "packag": 10, "rubi": 10, "sudo": 10, "apt": 10, "python": [10, 12, 14, 21], "m": [10, 13], "pip": [10, 13, 17, 18, 19], "r": [10, 17], "txt": 10, "gem": 10, "jekyl": 10, "remot": 10, "theme": 10, "bash": [10, 13], "script": [10, 11, 13], "local_deploy_sit": 10, "sh": [10, 11, 13], "websit": 10, "localhost": 10, "8888": 10, "built": [10, 13, 14, 18, 19], "merg": 10, "main": [10, 17, 18, 19], "branch": 10, "workflow": [10, 12, 16], "yaml": 10, "upload": 10, "gh": 10, "accordingli": 10, "code": [10, 12, 17, 18, 19, 21, 22], "repositori": 10, "releas": [10, 15], "run_coverag": 11, "offer": 11, "wai": [11, 14, 18], "librari": [11, 17, 18, 19], "run": [11, 15, 19, 21], "cmake": [11, 13], "xgrammar_enable_coverag": 11, "ON": 11, "directori": 11, "report": [11, 14, 16], "coverage_report": 11, "tool": 11, "mere": 11, "aid": 11, "identifi": 11, "been": [11, 16], "pursu": 11, "100": 11, "advis": 11, "neg": [11, 16, 18], "consequ": 11, "open": [12, 14], "solut": 12, "flexibl": [12, 14, 17], "portabl": 12, "mission": 12, "bring": 12, "zero": 12, "overhead": [12, 16, 17, 18, 19], "everywher": 12, "quick": 12, "advanc": [12, 20], "topic": [12, 20], "integr": [12, 16, 17, 19, 20], "engin": [12, 20], "runtim": [12, 20], "safeguard": 12, "build": [12, 20], "coverag": 12, "platform": 13, "linux": 13, "maco": 13, "window": 13, "hardwar": 13, "nvidia": 13, "amd": 13, "silicon": 13, "tpu": 13, "9": [13, 17], "wheel": 13, "forg": 13, "command": 13, "verifi": 13, "import": [13, 14, 17, 18, 19, 20, 22], "path": 13, "env": 13, "lib": 13, "python3": 13, "11": 13, "site": 13, "modif": 13, "obtain": 13, "git": 13, "clone": 13, "mlc": [13, 21], "ai": [13, 21], "cd": 13, "pre": [13, 18], "commit": 13, "cp": 13, "isol": [13, 17, 18, 19], "edit": 13, "rebuild": 13, "gate": 13, "cli": 13, "login": 13, "your_hf_token": 13, "pytest": 13, "subset": 13, "hf_token_requir": 13, "rust": 13, "ninja": 13, "mkdir": 13, "run_ctest": 13, "whose": 13, "test_nam": 13, "how": [14, 17, 18, 19, 20], "focus": 14, "instanti": [14, 17, 18, 19], "automodelforcausallm": [14, 17, 19, 20], "autotoken": [14, 17, 18, 19, 20], "autoconfig": [14, 15, 17, 18, 19], "Or": [14, 17, 19], "model_nam": [14, 17, 19], "1b": [14, 17, 18, 19], "from_pretrain": [14, 15, 17, 18, 19, 20], "torch_dtyp": [14, 17, 19], "float32": [14, 17, 19], "device_map": [14, 17, 19], "messag": [14, 17, 19], "role": [14, 17, 19], "content": [14, 16, 17, 19], "assist": [14, 17, 19], "yourself": [14, 17, 19], "briefli": [14, 17], "apply_chat_templ": [14, 17, 19], "add_generation_prompt": [14, 17, 19], "model_input": [14, 17, 19], "return_tensor": [14, 17, 19], "pt": [14, 17, 19], "custom": [14, 17, 19, 20], "grammar_compil": [14, 15, 17, 19, 20], "json_schema_str": [14, 20], "logits_processor": [14, 17, 19], "xgr_logits_processor": [14, 17, 19], "contrib": [14, 17, 19], "hf": 14, "logitsprocessor": [14, 17, 19], "generated_id": [14, 17, 19], "max_new_token": [14, 17, 19], "512": [14, 17, 19], "input_id": [14, 17, 19, 20], "skip_special_token": [14, 17, 19], "problem": 14, "ask": 14, "question": 14, "our": [14, 18], "repo": 14, "section": [15, 17, 18, 19], "cover": 15, "acceler": [15, 20], "comput": [15, 20], "multithread": [15, 18], "compile_": 15, "gil": 15, "asyncio": [15, 20], "recommend": [15, 16, 17, 18, 19], "half": 15, "virtual": [15, 17, 18, 19], "async": 15, "def": 15, "submit": 15, "sequenc": 15, "future1": 15, "to_thread": 15, "grammar1": 15, "future2": 15, "grammar2": 15, "wait": 15, "futur": 15, "complet": [15, 16, 20], "compiled_grammar1": 15, "await": 15, "compiled_grammar2": 15, "again": [15, 20], "lru": [15, 22], "least": [15, 16, 22], "recent": [15, 16, 22], "evict": [15, 22], "polici": 15, "kei": [15, 18], "By": [15, 16], "further": [15, 20], "reduc": 15, "spent": 15, "128": 15, "1024": 15, "immidi": 15, "sometim": [15, 16], "v3": 15, "815": 15, "its": [15, 16, 17, 18, 19, 20], "probabl": [15, 16], "distribut": [15, 16], "129": 15, "280": 15, "treat": 15, "129280": 15, "token_bitmask": [15, 17, 18, 19, 20], "found": 15, "model_path": 15, "techniqu": 16, "prohibit": 16, "those": 16, "binari": 16, "length": [16, 18], "sampl": [16, 17, 18, 19, 20], "stage": 16, "let": 16, "take": 16, "closer": 16, "look": 16, "infti": 16, "softmax": [16, 17, 18, 19, 20], "sampler": 16, "vaild": 16, "ensur": [16, 17, 19], "guarante": 16, "entir": 16, "adher": [16, 19], "applic": 16, "increas": 16, "nearli": 16, "mistak": 16, "might": 16, "field": [16, 19], "23": 16, "even": 16, "wrong": 16, "easi": [16, 18, 20], "clean": 16, "extran": 16, "parsabl": 16, "seamlessli": 16, "downstream": 16, "safeti": 16, "unexpect": 16, "prevent": 16, "erron": 16, "agent": 16, "abil": 16, "valuabl": 16, "todai": 16, "minim": 16, "impact": 16, "capabl": 16, "respons": [16, 17, 18, 19], "constraint": 16, "doesn": 16, "anyth": 16, "But": [16, 18], "produc": [16, 20], "answer": 16, "expect": 16, "prompt": 16, "affect": 16, "underli": 16, "much": 16, "possibl": 16, "bitset": [16, 20], "save": [16, 20], "commun": 16, "storag": 16, "multi": 16, "therefor": [16, 18], "speed": 16, "up": [16, 18], "last": [16, 20], "learn": [16, 20], "besid": [17, 21], "go": [17, 18, 19], "over": [17, 18, 19], "achiev": [17, 19, 20], "avail": [17, 18, 19], "snippet": [17, 18, 19], "below": [17, 18, 19], "runnabl": [17, 18, 19], "simul": [17, 18, 19], "numpi": [17, 18, 19], "np": [17, 18, 19], "extract": [17, 19], "With": [17, 18, 19, 20], "choic": [17, 18, 19], "model_id": [17, 18, 19], "full_vocab_s": [17, 18, 19], "ebnf_grammar_str": 17, "expr": 17, "term": 17, "num": 17, "interact": [17, 18, 19], "regress": [17, 19], "sim_sampled_respons": [17, 18, 19], "16": 17, "end_of_text": [17, 18, 19], "sim_sampled_token_id": [17, 18, 19], "add_special_token": [17, 18, 19], "loop": [17, 18, 19], "iter": [17, 18, 19], "sim_token_id": [17, 18, 19], "enumer": [17, 18, 19], "randn": [17, 18, 19], "invalid": [17, 18, 19], "prob": [17, 18, 19, 20], "dim": [17, 18, 19, 20], "next_token_id": [17, 18, 19, 20], "random": [17, 18, 19], "inde": [17, 18, 19], "sinc": [17, 18, 19], "readi": [17, 18, 19], "easili": [17, 19], "aim": [17, 19], "access": [17, 19, 20], "json_grammar_ebnf_str": 17, "basic_arrai": 17, "basic_object": 17, "basic_ani": 17, "basic_numb": 17, "basic_str": 17, "basic_boolean": 17, "basic_nul": 17, "basic_integ": 17, "ee": 17, "basic_string_1": 17, "x00": 17, "x1f": 17, "bfnrt": 17, "fa": 17, "f0": 17, "null": 17, "w": 17, "n": 17, "final": [17, 18, 19], "compon": [18, 20], "lai": 18, "concept": 18, "demonstr": 18, "encapsul": 18, "conveni": 18, "former": 18, "being": 18, "persist": 18, "behavior": 18, "enable_cach": 18, "everi": 18, "thing": 18, "seen": 18, "rather": 18, "essenti": 18, "illeg": 18, "infin": 18, "never": 18, "prepar": 18, "abov": [18, 20], "assum": 18, "work": 18, "exact": 18, "sai": 18, "simplic": 18, "loop_it": 18, "paralleliz": 18, "estim": 18, "One": 19, "pick": 19, "person": 19, "ag": 19, "person_schema": 19, "titl": 19, "read": 20, "understand": 20, "sentencepiec": 20, "preprocess": 20, "simplifi": 20, "automata": [20, 22], "adapt": 20, "bound": 20, "locat": 20, "logic": 20, "grammar_match": 20, "modifi": 20, "move": 20, "argmax": 20, "introduct": 20, "write": 20, "hug": 20, "face": 20, "seq_len": 20, "append": 20, "eo": 20, "congratul": 20, "successfulli": 20, "c": 21, "typescript": 21, "sdk": 21, "emscripten": 21, "webassembli": 21, "design": 21, "browser": 21, "webllm": 21, "npm": 21, "mechan": 22, "server": 22, "crash": 22, "parser": 22, "involv": 22, "veri": 22, "deep": 22, "caus": 22, "stack": 22, "overflow": 22, "grow": 22, "too": 22, "larg": 22, "algorithm": 22}, "objects": {"xgrammar": [[1, 0, 1, "", "CompiledGrammar"], [3, 0, 1, "", "Grammar"], [4, 0, 1, "", "GrammarCompiler"], [5, 0, 1, "", "GrammarMatcher"], [7, 0, 1, "", "StructuralTagItem"], [9, 0, 1, "", "TokenizerInfo"], [9, 0, 1, "", "VocabType"], [0, 4, 1, "", "allocate_token_bitmask"], [0, 4, 1, "", "apply_token_bitmask_inplace"], [0, 5, 1, "", "bitmask_dtype"], [0, 4, 1, "", "get_bitmask_shape"], [2, 4, 1, "", "get_max_recursion_depth"], [2, 4, 1, "", "max_recursion_depth"], [0, 4, 1, "", "reset_token_bitmask"], [2, 4, 1, "", "set_max_recursion_depth"], [8, 6, 0, "-", "testing"]], "xgrammar.CompiledGrammar": [[1, 1, 1, "", "grammar"], [1, 1, 1, "", "memory_size_bytes"], [1, 1, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[3, 2, 1, "", "__str__"], [3, 2, 1, "", "builtin_json_grammar"], [3, 2, 1, "", "concat"], [3, 2, 1, "", "from_ebnf"], [3, 2, 1, "", "from_json_schema"], [3, 2, 1, "", "from_regex"], [3, 2, 1, "", "from_structural_tag"], [3, 2, 1, "", "union"]], "xgrammar.GrammarCompiler": [[4, 2, 1, "", "__init__"], [4, 1, 1, "", "cache_limit_bytes"], [4, 2, 1, "", "clear_cache"], [4, 2, 1, "", "compile_builtin_json_grammar"], [4, 2, 1, "", "compile_grammar"], [4, 2, 1, "", "compile_json_schema"], [4, 2, 1, "", "compile_regex"], [4, 2, 1, "", "compile_structural_tag"], [4, 2, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[5, 2, 1, "", "__init__"], [5, 2, 1, "", "accept_string"], [5, 2, 1, "", "accept_token"], [5, 2, 1, "", "fill_next_token_bitmask"], [5, 2, 1, "", "find_jump_forward_string"], [5, 2, 1, "", "is_terminated"], [5, 1, 1, "", "max_rollback_tokens"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "rollback"], [5, 1, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[7, 3, 1, "", "begin"], [7, 3, 1, "", "end"], [7, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[9, 2, 1, "", "__init__"], [9, 1, 1, "", "add_prefix_space"], [9, 1, 1, "", "decoded_vocab"], [9, 2, 1, "", "dump_metadata"], [9, 2, 1, "", "from_huggingface"], [9, 2, 1, "", "from_vocab_and_metadata"], [9, 1, 1, "", "prepend_space_in_tokenization"], [9, 1, 1, "", "special_token_ids"], [9, 1, 1, "", "stop_token_ids"], [9, 1, 1, "", "vocab_size"], [9, 1, 1, "", "vocab_type"]], "xgrammar.VocabType": [[9, 3, 1, "", "BYTE_FALLBACK"], [9, 3, 1, "", "BYTE_LEVEL"], [9, 3, 1, "", "RAW"]], "xgrammar.testing": [[8, 0, 1, "", "GrammarFunctor"], [8, 4, 1, "", "_bool_mask_to_bitmask"], [8, 4, 1, "", "_ebnf_to_grammar_no_normalization"], [8, 4, 1, "", "_generate_float_regex"], [8, 4, 1, "", "_generate_range_regex"], [8, 4, 1, "", "_get_allow_empty_rule_ids"], [8, 4, 1, "", "_get_masked_tokens_from_bitmask"], [8, 4, 1, "", "_get_matcher_from_grammar"], [8, 4, 1, "", "_get_matcher_from_grammar_and_tokenizer_info"], [8, 4, 1, "", "_is_grammar_accept_string"], [8, 4, 1, "", "_is_single_token_bitmask"], [8, 4, 1, "", "_json_schema_to_ebnf"], [8, 4, 1, "", "_regex_to_ebnf"]], "xgrammar.testing.GrammarFunctor": [[8, 2, 1, "", "byte_string_fuser"], [8, 2, 1, "", "dead_code_eliminator"], [8, 2, 1, "", "lookahead_assertion_analyzer"], [8, 2, 1, "", "rule_inliner"], [8, 2, 1, "", "structure_normalizer"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "module", "Python module"]}, "titleterms": {"bitmask": [0, 16, 18, 20], "oper": 0, "xgr": [1, 3, 4, 5, 8, 9, 18], "compiledgrammar": [1, 18], "configur": 2, "recurs": [2, 22], "depth": 2, "manag": 2, "grammar": [3, 14, 15, 20], "grammarcompil": [4, 18], "grammarmatch": [5, 18], "xgrammar": [6, 12, 13, 16, 17, 18, 19, 20], "python": [6, 13], "api": [6, 12, 21], "structur": [7, 18], "tag": 7, "test": [8, 13], "tokenizerinfo": [9, 18], "build": [10, 13], "doc": 10, "local": 10, "deploi": 10, "github": 10, "page": 10, "best": 10, "practic": 10, "write": 10, "code": 11, "coverag": 11, "welcom": 12, "get": 12, "start": [12, 14], "tutori": 12, "featur": 12, "develop": 12, "guid": [12, 17], "refer": 12, "instal": [13, 17, 18, 19], "method": 13, "1": 13, "prebuilt": 13, "packag": 13, "2": 13, "from": 13, "sourc": 13, "option": 13, "run": 13, "3": 13, "c": 13, "librari": 13, "onli": 13, "quick": 14, "prepar": 14, "compil": [14, 15, 20], "gener": [14, 16, 17, 18, 19, 20], "what": 14, "do": 14, "next": [14, 16, 20], "advanc": 15, "topic": 15, "multi": 15, "thread": 15, "cach": [15, 22], "handl": 15, "pad": 15, "llm": [15, 17, 18, 19], "output": 15, "logit": [15, 18], "constrain": 16, "decod": 16, "": 16, "implement": 16, "token": [16, 20], "step": [16, 20], "ebnf": 17, "engin": [17, 18, 19], "try": [17, 19], "out": [17, 19], "via": [17, 19], "hf": [17, 19], "transform": [17, 19], "integr": 18, "high": 18, "level": 18, "flow": 18, "auto": 18, "regress": 18, "batch": 18, "infer": 18, "json": 19, "workflow": 20, "info": 20, "matcher": 20, "The": 20, "loop": 20, "javascript": 21, "runtim": 22, "safeguard": 22, "limit": 22, "size": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Bitmask Operations": [[0, "bitmask-operations"]], "xgr.CompiledGrammar": [[1, "xgr-compiledgrammar"], [18, "xgr-compiledgrammar"]], "Configuration": [[2, "configuration"]], "Recursion Depth Management": [[2, "recursion-depth-management"]], "xgr.Grammar": [[3, "xgr-grammar"]], "xgr.GrammarCompiler": [[4, "xgr-grammarcompiler"], [18, "xgr-grammarcompiler"]], "xgr.GrammarMatcher": [[5, "xgr-grammarmatcher"], [18, "xgr-grammarmatcher"]], "XGrammar Python API": [[6, "xgrammar-python-api"]], "Structural Tag": [[7, "structural-tag"]], "xgr.testing": [[8, "module-xgrammar.testing"]], "xgr.TokenizerInfo": [[9, "xgr-tokenizerinfo"], [18, "xgr-tokenizerinfo"]], "Building Docs": [[10, "building-docs"]], "Building Docs Locally": [[10, "building-docs-locally"]], "Deploying Docs on GitHub Pages": [[10, "deploying-docs-on-github-pages"]], "Best Practices for Writing Docs": [[10, "best-practices-for-writing-docs"]], "Code Coverage": [[11, "code-coverage"]], "\ud83d\udc4b Welcome to XGrammar": [[12, "welcome-to-xgrammar"]], "Get Started": [[12, null]], "Tutorials": [[12, null]], "XGrammar Features": [[12, null]], "Developer Guide": [[12, null]], "API Reference": [[12, null]], "Installation": [[13, "installation"]], "Method 1: Prebuilt Package": [[13, "method-1-prebuilt-package"]], "Method 2: Build XGrammar Python Package from Source": [[13, "method-2-build-xgrammar-python-package-from-source"]], "Optional: Run Python Tests": [[13, "optional-run-python-tests"]], "Method 3: Build XGrammar C++ Library Only": [[13, "method-3-build-xgrammar-c-library-only"]], "Optional: Run C++ Tests": [[13, "optional-run-c-tests"]], "Quick Start": [[14, "quick-start"]], "Preparation": [[14, "preparation"]], "Compile Grammar": [[14, "compile-grammar"]], "Generate with grammar": [[14, "generate-with-grammar"]], "What to Do Next": [[14, "what-to-do-next"]], "Advanced Topics": [[15, "advanced-topics"]], "Multi-threaded Grammar Compilation and Cache": [[15, "multi-threaded-grammar-compilation-and-cache"]], "Handle Padding to the LLM Output Logits": [[15, "handle-padding-to-the-llm-output-logits"]], "Constrained Decoding": [[16, "constrained-decoding"]], "XGrammar\u2019s Implementation": [[16, "xgrammar-s-implementation"]], "Token Bitmask": [[16, "token-bitmask"], [20, "token-bitmask"]], "Generating the Token Bitmask": [[16, "generating-the-token-bitmask"]], "Next Steps": [[16, "next-steps"], [20, "next-steps"]], "EBNF-Guided Generation": [[17, "ebnf-guided-generation"]], "Install XGrammar": [[17, "install-xgrammar"], [18, "install-xgrammar"], [19, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[17, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[17, "try-out-via-hf-transformers"], [19, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[18, "integration-with-llm-engine"]], "High-Level Flow": [[18, "high-level-flow"]], "Bitmasking Logits in Auto-regressive Generation": [[18, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[18, "structured-generation-for-batched-inference"]], "JSON Generation": [[19, "json-generation"]], "JSON Generation in LLM Engines": [[19, "json-generation-in-llm-engines"]], "Workflow of XGrammar": [[20, "workflow-of-xgrammar"]], "Grammar": [[20, "grammar"]], "Tokenizer Info": [[20, "tokenizer-info"]], "Grammar Compiler": [[20, "grammar-compiler"]], "Compiled Grammar": [[20, "compiled-grammar"]], "Grammar Matcher": [[20, "grammar-matcher"]], "The Generation Loop": [[20, "the-generation-loop"]], "JavaScript API": [[21, "javascript-api"]], "Runtime Safeguards": [[22, "runtime-safeguards"]], "Recursion Limit": [[22, "recursion-limit"]], "Cache Size Limit": [[22, "cache-size-limit"]]}, "indexentries": {"allocate_token_bitmask() (in module xgrammar)": [[0, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[0, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[0, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[0, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[0, "xgrammar.reset_token_bitmask"]], "compiledgrammar (class in xgrammar)": [[1, "xgrammar.CompiledGrammar"]], "grammar (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.memory_size_bytes"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.tokenizer_info"]], "get_max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.get_max_recursion_depth"]], "max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.max_recursion_depth"]], "set_max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.set_max_recursion_depth"]], "grammar (class in xgrammar)": [[3, "xgrammar.Grammar"]], "__str__() (xgrammar.grammar method)": [[3, "xgrammar.Grammar.__str__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.concat"]], "from_ebnf() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.from_structural_tag"]], "union() (xgrammar.grammar static method)": [[3, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[4, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[4, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_grammar() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.compile_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[4, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[5, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[5, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[5, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[5, "xgrammar.GrammarMatcher.stop_token_ids"]], "structuraltagitem (class in xgrammar)": [[7, "xgrammar.StructuralTagItem"]], "begin (xgrammar.structuraltagitem attribute)": [[7, "xgrammar.StructuralTagItem.begin"]], "end (xgrammar.structuraltagitem attribute)": [[7, "xgrammar.StructuralTagItem.end"]], "schema_ (xgrammar.structuraltagitem attribute)": [[7, "xgrammar.StructuralTagItem.schema_"]], "grammarfunctor (class in xgrammar.testing)": [[8, "xgrammar.testing.GrammarFunctor"]], "_bool_mask_to_bitmask() (in module xgrammar.testing)": [[8, "xgrammar.testing._bool_mask_to_bitmask"]], "_ebnf_to_grammar_no_normalization() (in module xgrammar.testing)": [[8, "xgrammar.testing._ebnf_to_grammar_no_normalization"]], "_generate_float_regex() (in module xgrammar.testing)": [[8, "xgrammar.testing._generate_float_regex"]], "_generate_range_regex() (in module xgrammar.testing)": [[8, "xgrammar.testing._generate_range_regex"]], "_get_allow_empty_rule_ids() (in module xgrammar.testing)": [[8, "xgrammar.testing._get_allow_empty_rule_ids"]], "_get_masked_tokens_from_bitmask() (in module xgrammar.testing)": [[8, "xgrammar.testing._get_masked_tokens_from_bitmask"]], "_get_matcher_from_grammar() (in module xgrammar.testing)": [[8, "xgrammar.testing._get_matcher_from_grammar"]], "_get_matcher_from_grammar_and_tokenizer_info() (in module xgrammar.testing)": [[8, "xgrammar.testing._get_matcher_from_grammar_and_tokenizer_info"]], "_is_grammar_accept_string() (in module xgrammar.testing)": [[8, "xgrammar.testing._is_grammar_accept_string"]], "_is_single_token_bitmask() (in module xgrammar.testing)": [[8, "xgrammar.testing._is_single_token_bitmask"]], "_json_schema_to_ebnf() (in module xgrammar.testing)": [[8, "xgrammar.testing._json_schema_to_ebnf"]], "_regex_to_ebnf() (in module xgrammar.testing)": [[8, "xgrammar.testing._regex_to_ebnf"]], "byte_string_fuser() (xgrammar.testing.grammarfunctor static method)": [[8, "xgrammar.testing.GrammarFunctor.byte_string_fuser"]], "dead_code_eliminator() (xgrammar.testing.grammarfunctor static method)": [[8, "xgrammar.testing.GrammarFunctor.dead_code_eliminator"]], "lookahead_assertion_analyzer() (xgrammar.testing.grammarfunctor static method)": [[8, "xgrammar.testing.GrammarFunctor.lookahead_assertion_analyzer"]], "module": [[8, "module-xgrammar.testing"]], "rule_inliner() (xgrammar.testing.grammarfunctor static method)": [[8, "xgrammar.testing.GrammarFunctor.rule_inliner"]], "structure_normalizer() (xgrammar.testing.grammarfunctor static method)": [[8, "xgrammar.testing.GrammarFunctor.structure_normalizer"]], "xgrammar.testing": [[8, "module-xgrammar.testing"]], "byte_fallback (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.BYTE_FALLBACK"]], "byte_level (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.BYTE_LEVEL"]], "raw (xgrammar.vocabtype attribute)": [[9, "xgrammar.VocabType.RAW"]], "tokenizerinfo (class in xgrammar)": [[9, "xgrammar.TokenizerInfo"]], "vocabtype (class in xgrammar)": [[9, "xgrammar.VocabType"]], "__init__() (xgrammar.tokenizerinfo method)": [[9, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.decoded_vocab"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[9, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[9, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[9, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[9, "xgrammar.TokenizerInfo.vocab_type"]]}})