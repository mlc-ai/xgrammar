Search.setIndex({"docnames": ["README", "api/python/_generated/xgrammar.CompiledGrammar", "api/python/_generated/xgrammar.Grammar", "api/python/_generated/xgrammar.GrammarCompiler", "api/python/_generated/xgrammar.GrammarMatcher", "api/python/_generated/xgrammar.TokenizerInfo", "api/python/_generated/xgrammar.VocabType", "api/python/bitmask_ops", "api/python/index", "api/python/recursion_depth", "api/python/structural_tag_item", "how_to/ebnf_guided_generation", "how_to/engine_integration", "how_to/json_generation", "how_to/portable_api", "index", "misc/runtime_safeguards", "start/install", "start/quick_start"], "filenames": ["README.md", "api/python/_generated/xgrammar.CompiledGrammar.rst", "api/python/_generated/xgrammar.Grammar.rst", "api/python/_generated/xgrammar.GrammarCompiler.rst", "api/python/_generated/xgrammar.GrammarMatcher.rst", "api/python/_generated/xgrammar.TokenizerInfo.rst", "api/python/_generated/xgrammar.VocabType.rst", "api/python/bitmask_ops.rst", "api/python/index.rst", "api/python/recursion_depth.rst", "api/python/structural_tag_item.rst", "how_to/ebnf_guided_generation.rst", "how_to/engine_integration.rst", "how_to/json_generation.rst", "how_to/portable_api.rst", "index.rst", "misc/runtime_safeguards.md", "start/install.rst", "start/quick_start.rst"], "titles": ["XGrammar Documentation", "xgrammar.CompiledGrammar", "xgrammar.Grammar", "xgrammar.GrammarCompiler", "xgrammar.GrammarMatcher", "xgrammar.TokenizerInfo", "xgrammar.VocabType", "Bitmask Operations", "xgrammar", "Recursion Depth Management", "xgrammar.StructuralTagItem", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "Portable API", "\ud83d\udc4b Welcome to XGrammar", "Runtime Safeguards", "Installation", "Quick Start"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 12, 14, 15, 16, 18], "wa": 0, "built": [0, 12, 13, 17, 18], "upon": 0, "sphinx": 0, "run": [0, 13, 14, 17, 18], "follow": [0, 2, 3, 4, 9, 11, 12, 17, 18], "command": [0, 17], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 17, 18], "directori": 0, "instal": [0, 14, 18], "first": [0, 2, 11, 12, 13], "pip3": 0, "r": [0, 11], "requir": [0, 4, 13, 17], "txt": 0, "Then": [0, 2, 11, 12, 13, 17], "you": [0, 5, 11, 12, 13, 16, 17, 18], "can": [0, 1, 2, 4, 5, 7, 11, 12, 13, 14, 16, 17, 18], "make": [0, 2, 11, 12, 13, 17], "html": [0, 2], "start": [0, 6, 17], "simpl": 0, "http": [0, 2, 6, 17], "server": [0, 16], "cd": [0, 17], "_build": 0, "python3": [0, 17], "m": [0, 17], "your": [0, 11, 12, 13, 17], "browser": [0, 14], "localhost": 0, "8000": 0, "port": 0, "custom": [0, 11, 13, 18], "append": 0, "p": [0, 11, 12, 13], "port_numb": 0, "python": [0, 14, 17, 18], "abov": [0, 12], "mai": [0, 2, 3, 5, 11, 13, 16, 17], "also": [0, 4, 5, 11, 12, 13, 14, 16, 17], "need": [0, 2, 4, 5, 7, 12, 17], "bind": [0, 17], "0": [0, 4, 6, 7, 11, 12, 13, 18], "machin": 0, "like": [0, 2], "mac": 0, "class": [1, 2, 3, 4, 5, 6, 10, 13, 16], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 15], "base": [1, 2, 3, 4, 5, 6, 10, 12, 17], "xgrobject": [1, 2, 3, 4, 5], "i": [1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18], "primari": 1, "object": [1, 2, 13], "store": [1, 3, 16], "compil": [1, 3, 11, 12, 13, 14, 16, 17], "grammar": [1, 3, 4, 5, 10, 11, 12, 13, 16], "A": [1, 7, 9, 10, 11, 17], "us": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18], "construct": [1, 2, 5, 7, 11, 12, 13, 18], "grammarmatch": [1, 2, 11, 13, 16], "gener": [1, 2, 3, 4, 5, 7, 15], "token": [1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 17, 18], "mask": [1, 2, 4, 5, 7, 11, 12, 13], "effici": [1, 11, 12, 13], "do": [1, 7, 17], "directli": [1, 17], "instead": [1, 5, 7], "grammarcompil": [1, 11, 13, 16, 18], "__init__": [1, 2, 3, 4, 5, 6, 17], "method": [1, 2, 3, 4, 5, 7, 9], "attribut": [1, 3, 4, 5, 6], "properti": [1, 2, 3, 4, 5, 13], "origin": [1, 5, 6, 9], "memory_size_byt": 1, "int": [1, 2, 3, 4, 5, 7, 9, 13], "approxim": [1, 3], "memori": [1, 3, 7], "usag": [1, 3, 18], "byte": [1, 3, 4, 5, 6], "tokenizer_info": [1, 3, 5, 11, 12, 13, 16, 18], "tokenizerinfo": [1, 3, 6, 11, 13, 18], "info": [1, 3, 5, 11, 12, 13], "associ": [1, 3], "repres": [2, 11], "later": [2, 12], "guid": [2, 3, 4, 5, 12, 18], "support": [2, 5, 6, 7, 12, 17], "context": [2, 4, 9, 16], "free": 2, "cfg": 2, "ebnf": [2, 12, 18], "extend": 2, "backu": 2, "naur": 2, "form": [2, 6], "format": [2, 3, 5, 6, 11], "There": [2, 12], "ar": [2, 5, 6, 7, 11, 12, 13, 17, 18], "mani": [2, 14], "specif": [2, 4, 11, 17, 18], "literatur": 2, "we": [2, 7, 11, 12, 13, 14, 17], "gbnf": [2, 11, 18], "ggml": [2, 11], "bnf": [2, 11], "github": [2, 6, 15, 17, 18], "com": [2, 6, 17], "ggerganov": 2, "llama": [2, 5, 6, 11, 12, 13, 18], "cpp": 2, "blob": [2, 6], "master": 2, "readm": 2, "md": 2, "when": [2, 3, 5, 7, 12, 17], "print": [2, 4, 11, 13, 17, 18], "convert": [2, 5], "static": [2, 5], "builtin_json_grammar": 2, "get": [2, 3, 4, 7, 9, 11, 12, 13, 16, 17], "standard": [2, 3, 17], "json": [2, 3, 5, 11, 12, 18], "compat": 2, "offici": 2, "www": 2, "org": 2, "en": 2, "return": [2, 3, 4, 5, 7, 9], "type": [2, 3, 4, 5, 6, 7, 9, 10, 13], "concat": 2, "creat": [2, 17], "match": [2, 4], "concaten": 2, "list": [2, 3, 4, 5, 7, 11, 12, 13], "That": 2, "equival": [2, 3], "oper": [2, 4, 8, 16], "paramet": [2, 3, 4, 5, 7, 9], "from_ebnf": 2, "ebnf_str": [2, 3, 18], "str": [2, 3, 4, 5, 10, 13], "root_rule_nam": [2, 3], "root": [2, 3, 11], "from": [2, 3, 4, 5, 11, 12, 13, 16, 18], "string": [2, 3, 4, 5, 11, 13, 18], "should": [2, 4, 5, 7, 12, 17], "default": [2, 3, 4, 5, 7, 9, 12, 16], "name": [2, 6, 12, 13], "rule": 2, "rais": [2, 4, 16], "runtimeerror": [2, 4, 16], "regex": [2, 3], "pattern": 2, "fail": 2, "detail": [2, 3, 5, 10, 18], "about": [2, 4], "pars": [2, 16], "error": 2, "from_json_schema": 2, "schema": [2, 3, 10, 11, 13, 18], "union": [2, 3, 4, 5, 10], "basemodel": [2, 3, 10, 13], "dict": [2, 3, 10], "ani": [2, 3, 4, 6, 10, 18], "any_whitespac": [2, 3], "bool": [2, 3, 4, 5], "true": [2, 3, 4, 11, 12, 13, 18], "indent": [2, 3], "option": [2, 3, 4, 5, 7, 13], "none": [2, 3, 4, 5, 6, 7, 9], "separ": [2, 3], "tupl": [2, 3, 7], "strict_mod": [2, 3], "print_converted_ebnf": 2, "fals": [2, 3, 4, 5, 11, 12, 13, 18], "pydant": [2, 3, 13], "model": [2, 3, 5, 6, 11, 12, 13, 17, 18], "specifi": [2, 3, 4, 5, 7, 11, 13], "It": [2, 3, 4, 5, 7, 11, 12, 13, 14, 16], "allow": [2, 3, 4, 7, 9], "whitespac": 2, "If": [2, 3, 4, 5, 7, 16], "user": [2, 4, 5, 7, 11, 13, 18], "want": [2, 17], "set": [2, 3, 5, 7, 9, 12, 16, 17], "mean": [2, 4, 7, 16], "valu": [2, 3, 4, 6, 9], "convent": [2, 3], "dump": [2, 3, 5, 13], "intern": [2, 4], "whether": [2, 3, 4, 5], "ignor": 2, "number": [2, 3, 4], "space": [2, 3, 5], "output": [2, 3, 4, 11, 13], "one": [2, 3, 4, 13], "line": [2, 3, 17], "note": [2, 3, 5, 7, 11, 12, 13], "forc": 2, "llm": [2, 3, 4, 5, 16], "strictli": 2, "howev": 2, "some": [2, 5, 12], "tend": 2, "In": [2, 3, 4, 5, 7, 11, 12, 13], "case": [2, 4, 5, 12, 18], "degrad": 2, "qualiti": 2, "see": [2, 3, 5, 10, 11, 12, 13, 14, 17, 18], "sgl": 2, "project": [2, 15], "sglang": 2, "issu": [2, 18], "2216": 2, "issuecom": 2, "2516192009": 2, "more": [2, 3, 5, 10, 11, 14, 18], "two": [2, 3, 12, 13], "comma": [2, 3], "colon": [2, 3], "exampl": [2, 3, 9, 13, 15], "otherwis": [2, 3, 4, 12], "strict": [2, 3], "mode": [2, 3], "item": [2, 3, 10, 16], "unevaluatedproperti": [2, 3], "unevaluateditem": [2, 3], "help": [2, 3, 4, 11, 13, 18], "accur": [2, 3], "For": [2, 12, 13, 14], "debug": [2, 4], "purpos": 2, "from_regex": 2, "regex_str": 2, "regular": 2, "express": 2, "from_structural_tag": [2, 3, 10], "tag": [2, 3, 10], "structuraltagitem": [2, 3, 8], "trigger": [2, 3], "structur": [2, 3, 7, 10, 11, 13, 15, 18], "handl": [2, 4, 5], "dispatch": 2, "differ": [2, 12], "initi": [2, 4], "until": 2, "encount": 2, "correspond": 2, "end": [2, 8, 10, 11, 13], "next": [2, 4, 7, 11, 12, 13], "especi": [2, 7], "function": [2, 4, 7], "call": [2, 7, 12], "where": [2, 4, 7], "func_nam": 2, "arg1": 2, "arg2": 2, "consist": 2, "three": [2, 6, 13], "part": 2, "begin": [2, 8, 10], "accord": [2, 12], "an": [2, 4, 7, 11, 12, 13, 16, 17, 18], "describ": 2, "abl": 2, "multipl": [2, 3, 5], "pass": [2, 5, 9, 12], "them": [2, 4, 5, 7, 12], "prefix": 2, "provid": [2, 4, 5, 7, 11, 13, 14, 16, 17, 18], "constrain": 2, "same": [2, 3, 5, 7, 12], "must": [2, 4], "e": [2, 5, 6, 17], "g": [2, 5, 6, 17], "get_weath": 2, "citi": 2, "beij": 2, "corrrespond": 2, "automat": [2, 5], "determin": [2, 5, 9], "all": [2, 3, 4, 7, 11, 12, 13, 17], "group": 2, "togeth": 2, "sure": [2, 11, 12, 13, 17], "anoth": 2, "ambigu": 2, "To": [2, 12, 14, 17, 18], "each": [2, 11, 12, 13], "1": [2, 3, 4, 6, 7, 9, 11, 12, 13, 16], "have": [2, 7, 11, 12, 13, 17], "fill_next_token_bitmask": [2, 4, 7, 11, 12, 13, 16], "enforc": [2, 11, 12, 13], "logit": [2, 7, 11, 13], "benefit": 2, "boundari": [2, 6], "between": [2, 5], "doe": [2, 4], "worri": 2, "schema1": 2, "schema2": 2, "arg3": 2, "float": 2, "arg4": 2, "f": 2, "max_thread": [3, 11, 12, 13], "8": [3, 11, 12, 13], "cache_en": 3, "cache_limit_byt": [3, 16], "certain": 3, "compiledgrammar": [3, 4, 13], "parallel": 3, "thread": [3, 9, 12], "ha": [3, 4, 5, 12, 16, 17], "cach": [3, 12], "result": [3, 12], "avoid": [3, 16, 17], "time": [3, 4], "maximum": [3, 4, 9, 16], "enabl": [3, 11, 12, 13, 17, 18], "unit": 3, "actual": [3, 11, 12, 13], "slightli": 3, "exce": [3, 4, 16], "limit": 3, "clear_cach": 3, "clear": 3, "compile_builtin_json_grammar": [3, 12, 13, 18], "compiled_grammar": [3, 4, 11, 12, 13, 18], "compile_grammar": [3, 11, 18], "compile_json_schema": [3, 13, 18], "compile_regex": 3, "compile_structural_tag": 3, "get_cache_size_byt": 3, "override_stop_token": 4, "terminate_without_stop_token": 4, "max_rollback_token": 4, "core": [4, 14, 17], "maintain": [4, 11, 12, 13], "state": [4, 11, 12, 13], "matcher": [4, 11, 12, 13, 16], "accept": [4, 11, 12, 13], "bitmask": [4, 8, 11, 13, 17], "predict": [4, 7], "so": [4, 7, 11, 12, 13], "Its": 4, "reset": [4, 7, 11, 12, 13], "roll": 4, "back": [4, 5], "util": 4, "jump": 4, "forward": 4, "decod": [4, 5, 11, 13, 18], "after": [4, 7, 12, 18], "whole": 4, "stop": [4, 5, 11, 12, 13], "onli": 4, "termin": [4, 11, 12, 13], "cannot": 4, "new": [4, 18], "finish": 4, "under": 4, "hood": 4, "pushdown": [4, 16], "automaton": 4, "backtrack": 4, "optim": [4, 7], "overrid": 4, "ones": [4, 17], "without": [4, 6], "rollback": 4, "specul": 4, "accept_str": [4, 16], "input_str": 4, "debug_print": 4, "updat": [4, 11, 12, 13], "consid": [4, 5], "step": [4, 11, 12, 13, 17], "complement": 4, "accept_token": [4, 11, 12, 13, 16], "alwai": [4, 5, 11, 12, 13], "inform": [4, 5, 12], "recurs": [4, 8, 17], "depth": [4, 8, 16], "exceed": 4, "token_id": [4, 16], "try": [4, 18], "id": [4, 5], "out": [4, 12, 14, 15, 17, 18], "rang": [4, 7, 11, 12, 13], "special": [4, 5], "captur": 4, "tensor": [4, 7, 11, 12, 13], "index": 4, "fill": [4, 7, 12], "input": [4, 5, 11, 13, 18], "allocate_token_bitmask": [4, 7, 8, 11, 12, 13], "cpu": [4, 7, 11, 12, 13, 18], "chang": 4, "torch": [4, 7, 11, 12, 13, 18], "batch": [4, 7, 11, 13], "need_appli": 4, "appli": [4, 7, 11, 12, 13, 17], "alreadi": 4, "find_jump_forward_str": [4, 16], "find": 4, "longest": 4, "certainli": 4, "conform": 4, "current": [4, 11, 12, 16], "becom": 4, "jump_forward_str": 4, "is_termin": [4, 11, 12, 13], "check": [4, 14, 15, 18], "num_token": 4, "previou": 4, "sever": [4, 12], "nor": 4, "stop_token_id": [4, 5], "detect": [4, 5, 7], "vocabulari": [4, 5, 6, 7, 12], "encoded_vocab": 5, "vocab_typ": 5, "vocabtyp": 5, "raw": [5, 6], "vocab_s": [5, 7, 11, 12, 13, 18], "add_prefix_spac": 5, "contain": [5, 11, 13], "necessari": [5, 11, 12, 13], "although": 5, "encod": [5, 6, 11, 12, 13], "0x1b": [5, 6], "bytefallback": 5, "\u0121": 5, "level": [5, 6, 14], "bpe": [5, 6], "phi": [5, 6], "3": [5, 6, 9, 11, 12, 13, 17, 18], "deepseek": 5, "v2": 5, "pad": [5, 7, 11, 12, 13], "32": [5, 7], "": [5, 12, 13, 14], "larger": [5, 11, 12, 13], "than": [5, 11, 12, 13], "size": [5, 7], "pleas": [5, 17], "constructor": 5, "becaus": 5, "len": [5, 11, 12, 13, 18], "auto": [5, 11, 13], "correct": 5, "prepend": 5, "befor": [5, 7], "text": [5, 11, 13, 18], "process": [5, 6, 9, 16], "decoded_vocab": 5, "dump_metadata": 5, "metadata": 5, "from_huggingfac": [5, 11, 12, 13, 18], "pretrainedtokenizerbas": 5, "huggingfac": [5, 6, 17], "variou": 5, "backend": [5, 14], "includ": [5, 6, 12, 14, 16, 17], "fast": [5, 15], "tiktoken": [5, 6], "introduc": [5, 11, 13, 18], "misalign": 5, "could": 5, "defin": 5, "config": [5, 11, 12, 13, 18], "here": [5, 9, 11, 12, 13, 14], "doc": 5, "eos_token_id": 5, "other": [5, 12, 18], "manual": [5, 7, 9], "equal": 5, "vocab": [5, 7], "diment": 5, "lm_head": 5, "most": [5, 12], "common": 5, "happen": 5, "possibli": 5, "due": [5, 11, 12, 13], "align": 5, "power": 5, "2": [5, 6, 9, 11, 12, 13, 18], "smaller": 5, "ad": 5, "vision": 5, "molmo": 5, "72b": 5, "0924": 5, "imag": 5, "thei": [5, 12], "model_vocab_s": 5, "from_vocab_and_metadata": 5, "prepend_space_in_token": 5, "deprec": 5, "special_token_id": 5, "control": 5, "reserv": 5, "etc": [5, 6, 11, 13, 18], "now": [5, 11, 12, 13], "given": 6, "modul": [6, 17], "qualnam": 6, "enum": 6, "kept": 6, "kind": 6, "microsoft": 6, "small": 6, "8k": 6, "instruct": [6, 11, 12, 13, 18], "qwen": 6, "7b": 6, "chat": 6, "byte_fallback": 6, "fallback": 6, "through": 6, "convers": 6, "appl": 6, "meta": [6, 11, 12, 13, 18], "5": [6, 11], "mini": 6, "byte_level": 6, "unicod": 6, "transform": [6, 12, 18], "87be06ca77166e6a6215eee5a990ab9f07238a18": 6, "src": 6, "gpt2": 6, "tokenization_gpt2": 6, "py": [6, 17], "l38": 6, "l59": 6, "8b": 6, "arg": 6, "kwd": 6, "xgrammar": [7, 9, 14, 16, 17, 18], "batch_siz": [7, 12], "alloc": [7, 11, 12, 13], "int32": 7, "shape": [7, 11, 12, 13], "ceil": 7, "who": 7, "own": [7, 12], "manag": [7, 8, 16, 17], "cuda": [7, 11, 12, 13, 18], "get_bitmask_shap": [7, 8], "bitmask_dtyp": [7, 8], "themselv": 7, "reason": 7, "why": 7, "uint32": 7, "old": 7, "version": [7, 17], "pytorch": 7, "apply_token_bitmask_inplac": [7, 8, 11, 12, 13], "indic": 7, "place": 7, "01": 7, "bitwis": 7, "compress": 7, "inf": 7, "bitmask_s": 7, "respect": 7, "j": [7, 14], "get_bitmask_valu": 7, "th": 7, "bit": 7, "row": 7, "addit": 7, "dimens": 7, "exist": 7, "real": 7, "min": 7, "which": [7, 12, 16], "request": [7, 11, 12, 13], "unstructur": 7, "mix": 7, "skip": [7, 17], "batch_id": 7, "As": 7, "long": 7, "valid": [7, 9, 11, 12, 13, 17], "perform": 7, "devic": [7, 11, 12, 13, 18], "both": 7, "gpu": [7, 11, 12, 13, 17], "launch": 7, "kernel": [7, 12], "implement": [7, 12, 14], "prefer": 7, "practic": 7, "usual": 7, "copi": 7, "uniqu": 7, "reset_token_bitmask": [7, 8], "full": 7, "dtype": 7, "schema_": [8, 10], "get_max_recursion_depth": [8, 9, 16], "set_max_recursion_depth": [8, 9, 16], "max_recursion_depth": [8, 9, 16], "share": 9, "per": [9, 12, 16], "order": 9, "via": [9, 12, 17], "xgrammar_max_recursion_depth": 9, "environ": [9, 11, 12, 13, 17], "variabl": 9, "integ": [9, 13], "1000000": 9, "10000": [9, 16], "safe": [9, 12], "temp_depth": 9, "temporarili": 9, "recursion_depth": 9, "1000": 9, "restor": 9, "besid": [11, 14], "flexibl": [11, 15, 18], "go": [11, 12, 13], "over": [11, 12, 13], "how": [11, 12, 13, 18], "achiev": [11, 13], "avail": [11, 12, 13], "pip": [11, 12, 13, 17], "recommend": [11, 12, 13, 17], "isol": [11, 12, 13, 17], "conda": [11, 12, 13, 17], "virtual": [11, 12, 13], "section": [11, 12, 13], "ensur": [11, 13, 17], "code": [11, 12, 13, 14, 16], "snippet": [11, 12, 13], "below": [11, 12, 13, 14], "runnabl": [11, 12, 13], "simul": [11, 12, 13], "import": [11, 12, 13, 16, 17, 18], "librari": [11, 12, 13, 14, 18], "tutori": [11, 12, 13], "xgr": [11, 13, 18], "numpi": [11, 12, 13], "np": [11, 12, 13], "autotoken": [11, 12, 13, 18], "autoconfig": [11, 12, 13, 18], "extract": [11, 13], "With": [11, 12, 13], "instanti": [11, 12, 13, 18], "choic": [11, 12, 13], "model_id": [11, 12, 13], "1b": [11, 12, 13, 18], "from_pretrain": [11, 12, 13, 18], "full_vocab_s": [11, 12, 13], "ebnf_grammar_str": 11, "expr": 11, "term": 11, "num": 11, "9": 11, "main": [11, 12, 13], "interact": [11, 12, 13], "token_bitmask": [11, 12, 13], "singl": [11, 12, 13], "regress": [11, 13], "integr": [11, 13, 14], "infer": [11, 13], "sampl": [11, 12, 13], "respons": [11, 12, 13], "sim_sampled_respons": [11, 12, 13], "16": 11, "end_of_text": [11, 12, 13], "sim_sampled_token_id": [11, 12, 13], "add_special_token": [11, 12, 13], "loop": [11, 12, 13], "iter": [11, 12, 13], "sim_token_id": [11, 12, 13], "enumer": [11, 12, 13], "randn": [11, 12, 13], "invalid": [11, 12, 13], "prob": [11, 12, 13], "softmax": [11, 12, 13], "dim": [11, 12, 13], "next_token_id": [11, 12, 13], "random": [11, 12, 13], "its": [11, 12, 13], "assert": [11, 12, 13], "inde": [11, 12, 13], "sinc": [11, 12, 13], "readi": [11, 12, 13, 14], "easili": [11, 13], "logitsprocessor": [11, 13, 18], "mainli": [11, 13], "aim": [11, 13], "access": [11, 13, 17], "extra": [11, 13, 17], "overhead": [11, 12, 13, 15], "automodelforcausallm": [11, 13, 18], "Or": [11, 13, 18], "model_nam": [11, 13, 18], "torch_dtyp": [11, 13, 18], "float32": [11, 13, 18], "device_map": [11, 13, 18], "messag": [11, 13, 18], "role": [11, 13, 18], "system": [11, 13, 18], "content": [11, 13, 18], "assist": [11, 13, 18], "yourself": [11, 13, 18], "briefli": [11, 18], "apply_chat_templ": [11, 13, 18], "add_generation_prompt": [11, 13, 18], "model_input": [11, 13, 18], "return_tensor": [11, 13, 18], "pt": [11, 13, 18], "grammar_compil": [11, 13, 18], "json_grammar_ebnf_str": 11, "basic_arrai": 11, "basic_object": 11, "basic_ani": 11, "basic_numb": 11, "basic_str": 11, "basic_boolean": 11, "basic_nul": 11, "basic_integ": 11, "ee": 11, "basic_string_1": 11, "x00": 11, "x1f": 11, "escap": 11, "bfnrt": 11, "u": 11, "fa": 11, "f0": 11, "null": 11, "w": 11, "n": [11, 17], "t": 11, "final": [11, 12, 13], "xgr_logits_processor": [11, 13, 18], "contrib": [11, 13, 18], "generated_id": [11, 13, 18], "max_new_token": [11, 13, 18], "512": [11, 13, 18], "logits_processor": [11, 13, 18], "input_id": [11, 13, 18], "skip_special_token": [11, 13, 18], "kei": 12, "compon": 12, "lai": 12, "concept": 12, "demonstr": 12, "encapsul": 12, "wai": [12, 18], "conveni": 12, "former": 12, "being": 12, "therefor": 12, "persist": 12, "behavior": 12, "configur": [12, 17], "multithread": 12, "enable_cach": 12, "everi": 12, "thing": 12, "seen": 12, "up": [12, 17], "rather": 12, "pre": [12, 17], "essenti": [12, 17], "illeg": 12, "neg": 12, "infin": 12, "never": 12, "prepar": 12, "assum": 12, "work": 12, "exact": 12, "sai": 12, "simplic": 12, "just": 12, "length": 12, "But": 12, "easi": 12, "b": 12, "loop_it": 12, "paralleliz": 12, "estim": 12, "our": [12, 18], "One": 13, "adher": 13, "pick": 13, "person": 13, "ag": 13, "person_schema": 13, "titl": 13, "field": 13, "lightweight": 14, "c": [14, 17], "platform": 14, "typescript": 14, "simpli": 14, "refer": 14, "take": 14, "high": 14, "view": 14, "design": 14, "webllm": 14, "emscripten": 14, "webassembli": 14, "npm": 14, "mlc": [14, 17], "ai": [14, 17], "open": [15, 18], "solut": 15, "portabl": 15, "mission": 15, "bring": 15, "zero": 15, "everywher": 15, "mechan": 16, "crash": 16, "automata": 16, "parser": 16, "involv": 16, "veri": 16, "deep": 16, "caus": 16, "stack": 16, "overflow": 16, "block": 16, "grow": 16, "too": 16, "larg": 16, "lru": 16, "algorithm": 16, "evict": 16, "least": 16, "recent": 16, "develop": 17, "nightli": 17, "wheel": 17, "whenev": 17, "highli": 17, "miss": 17, "incompat": 17, "conflict": 17, "activ": 17, "verifi": 17, "path": 17, "env": 17, "lib": 17, "11": 17, "site": 17, "nvidia": 17, "nvrtc": 17, "cu12": 17, "modif": 17, "obtain": 17, "satisfi": 17, "cmake": 17, "18": 17, "git": 17, "apt": 17, "fresh": 17, "remov": 17, "venv": 17, "forg": 17, "ninja": 17, "enter": 17, "seper": 17, "bin": 17, "workflow": 17, "download": 17, "clone": 17, "commit": 17, "hook": 17, "contribut": 17, "successfulli": 17, "4": 17, "test": 17, "gate": 17, "cli": 17, "login": 17, "your_hf_token": 17, "pytest": 17, "subset": 17, "hf_token_requir": 17, "easiest": 18, "document": 18, "json_schema_str": 18, "hf": 18, "report": 18, "problem": 18, "ask": 18, "question": 18, "repo": 18}, "objects": {"xgrammar": [[1, 0, 1, "", "CompiledGrammar"], [2, 0, 1, "", "Grammar"], [3, 0, 1, "", "GrammarCompiler"], [4, 0, 1, "", "GrammarMatcher"], [10, 0, 1, "", "StructuralTagItem"], [5, 0, 1, "", "TokenizerInfo"], [6, 0, 1, "", "VocabType"], [7, 4, 1, "", "allocate_token_bitmask"], [7, 4, 1, "", "apply_token_bitmask_inplace"], [7, 5, 1, "", "bitmask_dtype"], [7, 4, 1, "", "get_bitmask_shape"], [9, 4, 1, "", "get_max_recursion_depth"], [9, 4, 1, "", "max_recursion_depth"], [7, 4, 1, "", "reset_token_bitmask"], [9, 4, 1, "", "set_max_recursion_depth"]], "xgrammar.CompiledGrammar": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "grammar"], [1, 2, 1, "", "memory_size_bytes"], [1, 2, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "builtin_json_grammar"], [2, 1, 1, "", "concat"], [2, 1, 1, "", "from_ebnf"], [2, 1, 1, "", "from_json_schema"], [2, 1, 1, "", "from_regex"], [2, 1, 1, "", "from_structural_tag"], [2, 1, 1, "", "union"]], "xgrammar.GrammarCompiler": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "cache_limit_bytes"], [3, 1, 1, "", "clear_cache"], [3, 1, 1, "", "compile_builtin_json_grammar"], [3, 1, 1, "", "compile_grammar"], [3, 1, 1, "", "compile_json_schema"], [3, 1, 1, "", "compile_regex"], [3, 1, 1, "", "compile_structural_tag"], [3, 1, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "accept_string"], [4, 1, 1, "", "accept_token"], [4, 1, 1, "", "fill_next_token_bitmask"], [4, 1, 1, "", "find_jump_forward_string"], [4, 1, 1, "", "is_terminated"], [4, 2, 1, "", "max_rollback_tokens"], [4, 1, 1, "", "reset"], [4, 1, 1, "", "rollback"], [4, 2, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[10, 3, 1, "", "begin"], [10, 3, 1, "", "end"], [10, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "add_prefix_space"], [5, 2, 1, "", "decoded_vocab"], [5, 1, 1, "", "dump_metadata"], [5, 1, 1, "", "from_huggingface"], [5, 1, 1, "", "from_vocab_and_metadata"], [5, 2, 1, "", "prepend_space_in_tokenization"], [5, 2, 1, "", "special_token_ids"], [5, 2, 1, "", "stop_token_ids"], [5, 2, 1, "", "vocab_size"], [5, 2, 1, "", "vocab_type"]], "xgrammar.VocabType": [[6, 3, 1, "", "BYTE_FALLBACK"], [6, 3, 1, "", "BYTE_LEVEL"], [6, 3, 1, "", "RAW"], [6, 1, 1, "", "__init__"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"xgrammar": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 15], "document": 0, "depend": [0, 17], "build": [0, 17], "view": 0, "compiledgrammar": [1, 12], "grammar": [2, 18], "grammarcompil": [3, 12], "grammarmatch": [4, 12], "tokenizerinfo": [5, 12], "vocabtyp": 6, "bitmask": [7, 12], "oper": 7, "recurs": [9, 16], "depth": 9, "manag": 9, "structuraltagitem": 10, "ebnf": 11, "guid": 11, "gener": [11, 12, 13, 18], "instal": [11, 12, 13, 17], "llm": [11, 12, 13, 14], "engin": [11, 12, 13], "try": [11, 13], "out": [11, 13], "via": [11, 13], "hf": [11, 13], "transform": [11, 13], "integr": 12, "high": 12, "level": 12, "flow": 12, "xgr": 12, "logit": 12, "auto": 12, "regress": 12, "structur": 12, "batch": 12, "infer": 12, "json": 13, "portabl": 14, "api": 14, "javascript": 14, "sdk": 14, "web": 14, "base": 14, "welcom": 15, "quick": [15, 18], "start": [15, 18], "runtim": 16, "safeguard": 16, "limit": 16, "cach": 16, "size": 16, "tabl": 17, "content": 17, "option": 17, "1": 17, "prebuilt": 17, "packag": 17, "cuda": 17, "2": 17, "from": 17, "sourc": 17, "exampl": 18, "prepar": 18, "compil": 18, "what": 18, "do": 18, "next": 18}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"XGrammar Documentation": [[0, "xgrammar-documentation"]], "Dependencies": [[0, "dependencies"]], "Build the Documentation": [[0, "build-the-documentation"]], "View the Documentation": [[0, "view-the-documentation"]], "xgrammar.CompiledGrammar": [[1, "xgrammar-compiledgrammar"]], "xgrammar.Grammar": [[2, "xgrammar-grammar"]], "xgrammar.GrammarCompiler": [[3, "xgrammar-grammarcompiler"]], "xgrammar.GrammarMatcher": [[4, "xgrammar-grammarmatcher"]], "xgrammar.TokenizerInfo": [[5, "xgrammar-tokenizerinfo"]], "xgrammar.VocabType": [[6, "xgrammar-vocabtype"]], "Bitmask Operations": [[7, "bitmask-operations"]], "xgrammar": [[8, "xgrammar"]], "Recursion Depth Management": [[9, "recursion-depth-management"]], "xgrammar.StructuralTagItem": [[10, "xgrammar-structuraltagitem"]], "EBNF-Guided Generation": [[11, "ebnf-guided-generation"]], "Install XGrammar": [[11, "install-xgrammar"], [12, "install-xgrammar"], [13, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[11, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[11, "try-out-via-hf-transformers"], [13, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[12, "integration-with-llm-engine"]], "High-Level Flow": [[12, "high-level-flow"]], "xgr.TokenizerInfo": [[12, "xgr-tokenizerinfo"]], "xgr.GrammarCompiler": [[12, "xgr-grammarcompiler"]], "xgr.CompiledGrammar": [[12, "xgr-compiledgrammar"]], "xgr.GrammarMatcher": [[12, "xgr-grammarmatcher"]], "Bitmasking Logits in Auto-regressive Generation": [[12, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[12, "structured-generation-for-batched-inference"]], "JSON Generation": [[13, "json-generation"]], "JSON Generation in LLM Engines": [[13, "json-generation-in-llm-engines"]], "Portable API": [[14, "portable-api"]], "Javascript SDK for Web-based LLMs": [[14, "javascript-sdk-for-web-based-llms"]], "\ud83d\udc4b Welcome to XGrammar": [[15, "welcome-to-xgrammar"]], "Quick Start": [[15, "quick-start"], [18, "quick-start"]], "Runtime Safeguards": [[16, "runtime-safeguards"]], "Recursion Limit": [[16, "recursion-limit"]], "Cache Size Limit": [[16, "cache-size-limit"]], "Installation": [[17, "installation"]], "Table of Contents": [[17, "table-of-contents"]], "Option 1. Prebuilt Package": [[17, "option-1-prebuilt-package"]], "CUDA Dependency": [[17, "cuda-dependency"]], "Option 2. Build from Source": [[17, "option-2-build-from-source"]], "Example": [[18, "example"]], "Preparation": [[18, "preparation"]], "Compile Grammar": [[18, "compile-grammar"]], "Generate with grammar": [[18, "generate-with-grammar"]], "What to Do Next": [[18, "what-to-do-next"]]}, "indexentries": {"compiledgrammar (class in xgrammar)": [[1, "xgrammar.CompiledGrammar"]], "__init__() (xgrammar.compiledgrammar method)": [[1, "xgrammar.CompiledGrammar.__init__"]], "grammar (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.memory_size_bytes"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.tokenizer_info"]], "grammar (class in xgrammar)": [[2, "xgrammar.Grammar"]], "__init__() (xgrammar.grammar method)": [[2, "xgrammar.Grammar.__init__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.concat"]], "from_ebnf() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_structural_tag"]], "union() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[3, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[3, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_grammar() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[4, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.stop_token_ids"]], "tokenizerinfo (class in xgrammar)": [[5, "xgrammar.TokenizerInfo"]], "__init__() (xgrammar.tokenizerinfo method)": [[5, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.decoded_vocab"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[5, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[5, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[5, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.vocab_type"]], "byte_fallback (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.BYTE_FALLBACK"]], "byte_level (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.BYTE_LEVEL"]], "raw (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.RAW"]], "vocabtype (class in xgrammar)": [[6, "xgrammar.VocabType"]], "__init__() (xgrammar.vocabtype method)": [[6, "xgrammar.VocabType.__init__"]], "allocate_token_bitmask() (in module xgrammar)": [[7, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[7, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[7, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[7, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[7, "xgrammar.reset_token_bitmask"]], "get_max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.get_max_recursion_depth"]], "max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.max_recursion_depth"]], "set_max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.set_max_recursion_depth"]], "structuraltagitem (class in xgrammar)": [[10, "xgrammar.StructuralTagItem"]], "begin (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.begin"]], "end (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.end"]], "schema_ (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.schema_"]]}})