Search.setIndex({"docnames": ["api/python/bitmask_ops", "api/python/compiled_grammar", "api/python/config", "api/python/exception", "api/python/grammar", "api/python/grammar_compiler", "api/python/grammar_matcher", "api/python/index", "api/python/structural_tag", "api/python/testing", "api/python/tokenizer_info", "developer_guide/building_docs", "developer_guide/code_coverage", "index", "start/installation", "start/quick_start", "tutorials/advanced_topics", "tutorials/constrained_decoding", "tutorials/ebnf_guided_generation", "tutorials/engine_integration", "tutorials/json_generation", "tutorials/workflow_of_xgrammar", "xgrammar_features/javascript_api", "xgrammar_features/runtime_safeguards", "xgrammar_features/serialization"], "filenames": ["api/python/bitmask_ops.rst", "api/python/compiled_grammar.rst", "api/python/config.rst", "api/python/exception.rst", "api/python/grammar.rst", "api/python/grammar_compiler.rst", "api/python/grammar_matcher.rst", "api/python/index.rst", "api/python/structural_tag.rst", "api/python/testing.rst", "api/python/tokenizer_info.rst", "developer_guide/building_docs.md", "developer_guide/code_coverage.md", "index.rst", "start/installation.md", "start/quick_start.md", "tutorials/advanced_topics.md", "tutorials/constrained_decoding.md", "tutorials/ebnf_guided_generation.md", "tutorials/engine_integration.md", "tutorials/json_generation.md", "tutorials/workflow_of_xgrammar.md", "xgrammar_features/javascript_api.md", "xgrammar_features/runtime_safeguards.md", "xgrammar_features/serialization.md"], "titles": ["Bitmask Operations", "xgr.CompiledGrammar", "Config", "Exception", "xgr.Grammar", "xgr.GrammarCompiler", "xgr.GrammarMatcher", "XGrammar Python API", "Structural Tag", "xgr.testing", "xgr.TokenizerInfo", "Building Docs", "Code Coverage", "\ud83d\udc4b Welcome to XGrammar", "Installation", "Quick Start", "Advanced Topics", "Constrained Decoding", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "Workflow of XGrammar", "JavaScript API", "Runtime Safeguards", "Serialization"], "terms": {"xgrammar": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 15, 16, 22, 23, 24], "allocate_token_bitmask": [0, 6, 7, 9, 16, 17, 18, 19, 20, 21], "batch_siz": [0, 19, 21], "int": [0, 1, 2, 4, 5, 6, 9, 10, 20, 21], "vocab_s": [0, 9, 10, 15, 16, 18, 19, 20, 21], "torch": [0, 6, 9, 15, 18, 19, 20, 21], "tensor": [0, 6, 9, 16, 18, 19, 20, 21], "sourc": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 13], "alloc": [0, 17, 18, 19, 20, 21], "next": [0, 4, 6, 18, 19, 20], "token": [0, 1, 4, 5, 6, 9, 10, 14, 15, 16, 17, 18, 19, 20, 24], "predict": [0, 6], "The": [0, 1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 22, 23, 24], "i": [0, 1, 2, 3, 4, 5, 6, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24], "an": [0, 4, 5, 6, 9, 15, 17, 18, 19, 20, 21, 23], "int32": [0, 6, 17, 21], "cpu": [0, 6, 9, 14, 15, 16, 18, 19, 20, 21], "shape": [0, 6, 16, 18, 19, 20, 21], "ceil": [0, 21], "32": [0, 9, 10, 21], "user": [0, 4, 6, 9, 10, 15, 18, 20], "who": 0, "have": [0, 4, 12, 14, 15, 17, 18, 19, 20, 21, 24], "own": [0, 19], "need": [0, 4, 6, 10, 11, 14, 19], "manag": [0, 7, 11, 23], "cuda": [0, 15, 18, 19, 20, 21], "memori": [0, 1, 5, 16, 21], "can": [0, 1, 4, 6, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24], "construct": [0, 1, 4, 5, 6, 10, 15, 16, 17, 18, 19, 20, 21, 24], "get_bitmask_shap": [0, 7], "bitmask_dtyp": [0, 7], "themselv": 0, "reason": 0, "why": 0, "we": [0, 4, 14, 16, 17, 18, 19, 20, 21, 24], "us": [0, 1, 4, 5, 6, 9, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24], "instead": [0, 1, 10, 11], "uint32": 0, "old": 0, "version": [0, 1, 4, 7, 10, 11, 14, 24], "pytorch": 0, "do": [0, 1, 14, 17], "support": [0, 4, 9, 10, 14, 19, 21, 24], "paramet": [0, 1, 2, 4, 5, 6, 9, 10, 16], "batch": [0, 6, 9, 18, 20, 21], "size": [0, 9, 10, 16, 17, 21], "vocabulari": [0, 6, 9, 10, 16, 17, 19, 21], "return": [0, 1, 2, 4, 5, 6, 9, 10, 16], "type": [0, 1, 2, 4, 5, 6, 8, 9, 10, 17, 20, 24], "apply_token_bitmask_inplac": [0, 7, 18, 19, 20, 21], "logit": [0, 4, 17, 18, 20, 21], "option": [0, 4, 5, 6, 9, 10, 20], "none": [0, 2, 4, 5, 6, 9, 10], "indic": [0, 24], "list": [0, 4, 5, 6, 9, 10, 18, 19, 20, 21], "appli": [0, 6, 17, 18, 19, 20, 21], "place": [0, 21], "01": 0, "bitwis": 0, "compress": [0, 17, 21], "where": [0, 4, 6], "0": [0, 6, 9, 10, 15, 17, 18, 19, 20, 21], "mean": [0, 4, 6, 9, 23], "mask": [0, 1, 4, 6, 9, 10, 17, 18, 19, 20, 21], "1": [0, 2, 4, 5, 6, 9, 10, 16, 17, 18, 19, 20, 21, 23, 24], "It": [0, 1, 4, 5, 6, 10, 12, 15, 16, 17, 18, 19, 20, 21, 22, 23], "gener": [0, 1, 4, 5, 6, 9, 10, 13, 17], "fill": [0, 6, 9, 19, 21], "fill_next_token_bitmask": [0, 4, 6, 9, 17, 18, 19, 20, 21, 23], "after": [0, 6, 12, 17, 19, 21, 24], "set": [0, 2, 4, 5, 9, 10, 12, 16, 17, 19, 21, 23], "inf": 0, "should": [0, 4, 5, 6, 9, 10, 15, 19, 21], "bitmask_s": 0, "respect": [0, 16], "rang": [0, 6, 9, 18, 19, 20], "j": [0, 22], "get_bitmask_valu": 0, "get": [0, 2, 4, 5, 6, 9, 17, 18, 19, 20, 23, 24], "th": 0, "bit": [0, 9], "row": 0, "note": [0, 1, 4, 5, 10, 12, 16, 17, 18, 19, 20, 24], "pad": [0, 9, 10, 18, 19, 20], "thi": [0, 1, 2, 4, 5, 6, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22], "method": [0, 1, 2, 4, 5, 6, 9, 10, 21, 24], "allow": [0, 2, 4, 5, 6, 9, 17], "addit": [0, 9], "dimens": [0, 16], "If": [0, 1, 4, 5, 6, 9, 10, 14, 16, 21, 23, 24], "exist": 0, "provid": [0, 4, 6, 10, 14, 15, 17, 18, 20, 21, 22, 23, 24], "real": [0, 21], "vocab": [0, 10], "detect": [0, 6, 10], "min": 0, "specifi": [0, 1, 4, 5, 6, 9, 10, 17, 18, 20], "which": [0, 12, 19, 23], "especi": [0, 4, 17], "when": [0, 1, 3, 4, 5, 9, 10, 11, 14, 17, 19, 21, 24], "ar": [0, 4, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 24], "structur": [0, 4, 5, 7, 9, 13, 15, 17, 18, 20, 21, 24], "request": [0, 18, 19, 20], "unstructur": 0, "mix": 0, "same": [0, 1, 4, 5, 10, 16, 17, 19, 21, 24], "skip": 0, "batch_id": 0, "As": 0, "long": 0, "valid": [0, 2, 17, 18, 19, 20], "perform": [0, 16, 21], "devic": [0, 15, 18, 19, 20, 21], "both": [0, 16], "them": [0, 4, 6, 9, 10, 11, 19], "gpu": [0, 14, 15, 18, 19, 20, 21], "launch": 0, "kernel": [0, 19], "implement": [0, 19], "optim": [0, 6, 16], "prefer": [0, 11], "In": [0, 4, 5, 6, 9, 10, 12, 17, 18, 19, 20, 21, 24], "practic": 0, "usual": 0, "so": [0, 6, 16, 17, 18, 19, 20, 21, 24], "manual": [0, 2, 10], "copi": [0, 14], "befor": [0, 10], "call": [0, 4, 9, 19, 21], "function": [0, 4, 6, 9, 16], "default": [0, 2, 4, 5, 6, 9, 10, 19, 23], "A": [0, 1, 2, 8, 9, 18, 21, 24], "uniqu": 0, "all": [0, 4, 5, 6, 14, 18, 19, 20], "reset_token_bitmask": [0, 7], "reset": [0, 6, 18, 19, 20, 21], "full": [0, 11], "tupl": [0, 4, 5, 9], "arg": 0, "ani": [0, 4, 5, 6, 8, 9, 10, 15], "kwarg": [0, 9], "dtype": [0, 6, 21], "class": [1, 3, 4, 5, 6, 8, 9, 10, 17, 20, 23, 24], "primari": 1, "object": [1, 4, 5, 9, 17, 20, 21, 24], "store": [1, 5, 17, 23], "compil": [1, 5, 9, 12, 17, 18, 19, 20, 22, 23, 24], "grammar": [1, 5, 6, 7, 8, 9, 10, 17, 18, 19, 20, 23], "grammarmatch": [1, 4, 7, 9, 17, 18, 20, 21, 23], "effici": [1, 18, 19, 20], "directli": [1, 14, 16, 17, 21], "grammarcompil": [1, 7, 15, 16, 17, 18, 20, 21, 23, 24], "attribut": [1, 5, 6, 10], "properti": [1, 4, 5, 6, 9, 10, 20], "origin": [1, 2, 10], "tokenizer_info": [1, 5, 9, 10, 15, 16, 18, 19, 20, 21, 23, 24], "tokenizerinfo": [1, 5, 7, 9, 15, 16, 18, 20, 21], "info": [1, 5, 9, 10, 18, 19, 20, 24], "associ": [1, 5, 21], "memory_size_byt": 1, "approxim": [1, 5], "usag": [1, 5, 15, 16], "byte": [1, 5, 6, 9, 10], "serialize_json": [1, 4, 10, 24], "str": [1, 2, 4, 5, 6, 8, 9, 10, 20, 24], "serial": [1, 3, 4, 7, 10, 13], "json": [1, 3, 4, 5, 9, 10, 13, 15, 16, 17, 18, 19, 21, 24], "string": [1, 4, 5, 6, 9, 10, 15, 16, 17, 18, 20, 21, 24], "without": [1, 6, 9, 10, 17], "sinc": [1, 18, 19, 20], "share": [1, 2, 24], "multipl": [1, 4, 5, 10, 16, 24], "metadata": [1, 10, 24], "check": [1, 6, 9, 15, 21, 24], "deseri": [1, 3, 4, 10, 24], "json_str": [1, 4, 10], "static": [1, 4, 9, 10], "deserialize_json": [1, 4, 10, 24], "from": [1, 4, 5, 6, 9, 10, 15, 17, 18, 19, 20, 21, 23, 24], "match": [1, 4, 6, 9, 21, 24], "doe": [1, 4, 6, 9, 10, 24], "deserializeformaterror": [1, 3, 4, 7, 10, 24], "rais": [1, 3, 4, 6, 10, 23, 24], "compiled_grammar": [1, 5, 6, 9, 15, 18, 19, 20, 21, 24], "invalidjsonerror": [1, 3, 4, 7, 10, 24], "invalid": [1, 3, 4, 6, 10, 18, 19, 20, 24], "follow": [1, 2, 4, 5, 6, 9, 10, 12, 14, 17, 18, 19, 24], "format": [1, 3, 4, 5, 10, 17, 18, 21, 24], "deserializeversionerror": [1, 3, 4, 7, 10, 24], "__version__": [1, 4, 10, 24], "field": [1, 4, 10, 17, 20, 24], "current": [1, 2, 4, 6, 9, 10, 18, 19, 23, 24], "get_max_recursion_depth": [2, 23], "maximum": [2, 5, 6, 16, 23], "per": [2, 19, 23], "process": [2, 9, 10, 16, 17, 21, 23, 24], "determin": [2, 4, 10], "order": 2, "via": [2, 14, 19], "set_max_recursion_depth": [2, 23], "xgrammar_max_recursion_depth": 2, "environ": [2, 11, 18, 19, 20], "variabl": [2, 12], "integ": [2, 17, 20], "000": 2, "valu": [2, 4, 5, 6, 9, 10], "10": 2, "max_recursion_depth": [2, 23], "thread": [2, 5, 19], "safe": [2, 19], "temp_depth": 2, "context": [2, 4, 6, 21, 23], "temporarili": 2, "exampl": [2, 4, 5, 9, 16, 17, 20], "recursion_depth": 2, "1000": 2, "here": [2, 10, 18, 19, 20], "pass": [2, 4, 9, 10, 19, 21], "restor": 2, "get_serialization_vers": [2, 24], "number": [2, 4, 5, 6, 9, 16], "v4": 2, "serialization_vers": 2, "base": [3, 4, 8, 9, 10, 11, 19], "runtimeerror": [3, 4, 6, 23, 24], "repres": [4, 18], "later": [4, 14, 19], "guid": [4, 5, 6, 9, 10, 15, 17, 19], "free": [4, 21], "cfg": 4, "ebnf": [4, 5, 9, 13, 15, 16, 19, 21], "extend": [4, 21], "backu": 4, "naur": 4, "form": [4, 10, 21], "There": [4, 17, 19], "mani": [4, 17], "specif": [4, 6, 11, 14, 15, 18, 21], "literatur": 4, "gbnf": [4, 15, 18], "ggml": [4, 18], "bnf": [4, 9, 18, 21], "http": [4, 5, 9, 10, 11, 14], "github": [4, 5, 10, 14, 15], "com": [4, 5, 10, 14], "ggerganov": [4, 5], "llama": [4, 5, 10, 15, 18, 19, 20, 24], "cpp": [4, 5], "blob": [4, 5, 10], "master": [4, 5], "readm": [4, 5], "md": [4, 5, 11], "print": [4, 6, 9, 14, 15, 18, 20, 21, 24], "convert": [4, 9, 10], "__str__": 4, "grammar_str": 4, "from_ebnf": [4, 21], "ebnf_str": [4, 5, 9, 15, 21], "root_rule_nam": [4, 5, 9], "root": [4, 5, 9, 12, 18], "name": [4, 5, 9, 10, 14, 19, 20], "rule": [4, 5, 9], "regex": [4, 5, 9, 16, 21], "pattern": [4, 16, 21], "fail": [4, 17, 24], "detail": [4, 5, 8, 10, 15, 17], "about": [4, 6, 9, 16, 17, 21], "pars": [4, 9, 17, 23], "error": [4, 17, 24], "from_json_schema": [4, 21], "schema": [4, 5, 8, 9, 15, 16, 18, 20, 21], "union": [4, 5, 6, 8, 9, 10], "basemodel": [4, 5, 8, 9, 20], "dict": [4, 5, 8, 9], "any_whitespac": [4, 5, 9], "bool": [4, 5, 6, 9, 10, 21], "true": [4, 5, 6, 9, 15, 16, 18, 19, 20], "indent": [4, 5, 9], "separ": [4, 5, 9], "strict_mod": [4, 5, 9], "print_converted_ebnf": 4, "fals": [4, 5, 6, 9, 10, 15, 18, 19, 20], "pydant": [4, 5, 9, 20], "model": [4, 5, 9, 10, 14, 15, 16, 18, 19, 20, 21], "whitespac": 4, "want": [4, 14, 17], "convent": [4, 5], "dump": [4, 5, 10, 20], "intern": [4, 6, 24], "whether": [4, 5, 6, 9, 10], "ignor": [4, 9], "space": [4, 5, 9, 10], "output": [4, 5, 6, 9, 15, 17, 18, 20, 21], "one": [4, 5, 6, 9, 20], "line": [4, 5, 9], "forc": 4, "llm": [4, 5, 6, 9, 10, 13, 15, 17, 21, 22, 23], "strictli": 4, "howev": [4, 12], "some": [4, 9, 10, 19], "mai": [4, 5, 10, 18, 20, 23, 24], "tend": 4, "case": [4, 6, 10, 15, 17, 19], "degrad": 4, "qualiti": [4, 17], "see": [4, 5, 8, 10, 11, 15, 17, 18, 19, 20, 22], "sgl": 4, "project": [4, 13, 14], "sglang": 4, "issu": [4, 15, 17], "2216": 4, "issuecom": 4, "2516192009": 4, "more": [4, 5, 8, 10, 15, 17, 18, 21, 22], "two": [4, 5, 9, 16, 19, 20], "comma": [4, 5, 9], "colon": [4, 5, 9], "otherwis": [4, 5, 6, 9, 19], "strict": [4, 5, 9], "mode": [4, 5, 9], "item": [4, 5, 8, 9, 21, 23], "equival": [4, 5, 9, 21], "unevaluatedproperti": [4, 5, 9], "unevaluateditem": [4, 5, 9], "help": [4, 5, 6, 9, 12, 15, 18, 20], "accur": [4, 5, 9], "For": [4, 9, 11, 16, 17, 19, 20, 21, 22], "debug": [4, 6, 9], "purpos": [4, 9, 24], "from_regex": [4, 21], "regex_str": [4, 21], "creat": [4, 9], "regular": 4, "express": 4, "first": [4, 18, 19, 20, 21], "from_structural_tag": [4, 5, 8], "tag": [4, 5, 7], "structuraltagitem": [4, 5, 7, 8], "trigger": [4, 5], "handl": [4, 6, 10, 21], "dispatch": 4, "differ": [4, 19], "initi": [4, 6, 9], "until": 4, "encount": 4, "correspond": 4, "end": [4, 8, 9, 18, 20], "func_nam": 4, "arg1": 4, "arg2": 4, "consist": 4, "three": [4, 10, 20, 24], "part": [4, 12], "begin": [4, 8], "accord": [4, 19], "describ": [4, 5, 17, 21], "abl": 4, "prefix": 4, "constrain": [4, 13, 21], "Then": [4, 17, 18, 19, 20], "must": [4, 6, 17], "e": [4, 10, 14], "g": [4, 10, 14], "get_weath": 4, "citi": 4, "beij": 4, "corrrespond": 4, "automat": [4, 10, 11, 14], "group": [4, 9], "togeth": 4, "make": [4, 11, 14, 17, 18, 19, 20], "sure": [4, 11, 18, 19, 20], "anoth": 4, "ambigu": 4, "To": [4, 12, 15, 16, 19, 21, 22], "each": [4, 9, 11, 17, 18, 19, 20, 21, 24], "like": [4, 17], "enforc": [4, 18, 19, 20], "benefit": [4, 17], "boundari": [4, 9, 10], "between": [4, 10], "worri": 4, "schema1": 4, "schema2": 4, "arg3": 4, "float": [4, 9], "arg4": 4, "f": [4, 24], "builtin_json_grammar": [4, 21, 24], "standard": [4, 5], "compat": 4, "offici": 4, "www": 4, "org": [4, 9], "en": [4, 9], "html": 4, "concat": 4, "concaten": 4, "That": 4, "oper": [4, 6, 7, 14, 16, 23], "max_thread": [5, 16, 18, 19, 20], "8": [5, 16, 18, 19, 20], "cache_en": [5, 16], "cache_limit_byt": [5, 16, 23], "certain": 5, "compiledgrammar": [5, 6, 7, 9, 17, 20, 21], "parallel": [5, 16], "ha": [5, 6, 10, 16, 17, 19, 23, 24], "cach": [5, 19, 21, 24], "result": [5, 9, 16, 19, 24], "avoid": [5, 17, 23, 24], "time": [5, 6, 9, 11, 16], "__init__": [5, 6, 10, 14], "enabl": [5, 16, 18, 19, 20], "unit": 5, "actual": [5, 12, 18, 19, 20], "slightli": 5, "exce": [5, 6, 23], "compile_json_schema": [5, 15, 16, 20, 21], "compile_builtin_json_grammar": [5, 15, 19, 20, 21], "compile_regex": [5, 16, 21], "compile_structural_tag": 5, "compile_grammar": [5, 15, 16, 18, 21, 24], "overload": 5, "clear_cach": [5, 16], "clear": [5, 24], "get_cache_size_byt": 5, "limit": 5, "override_stop_token": 6, "terminate_without_stop_token": 6, "max_rollback_token": 6, "core": [6, 16, 21], "maintain": [6, 18, 19, 20], "state": [6, 17, 18, 19, 20], "matcher": [6, 9, 18, 19, 20, 23], "accept": [6, 9, 17, 18, 19, 20, 21], "bitmask": [6, 7, 9, 16, 18, 20], "Its": 6, "roll": 6, "back": [6, 10], "also": [6, 10, 14, 16, 17, 18, 19, 20, 21, 22, 23], "util": [6, 9], "jump": 6, "forward": 6, "decod": [6, 10, 13, 15, 18, 20, 21], "whole": 6, "stop": [6, 10, 18, 19, 20], "onli": [6, 9, 16, 17, 24], "termin": [6, 18, 19, 20, 21], "cannot": [6, 9], "new": [6, 11, 15], "finish": 6, "under": 6, "hood": 6, "pushdown": [6, 23], "automaton": 6, "backtrack": 6, "overrid": 6, "ones": [6, 14], "deprec": [6, 10], "becaus": [6, 10, 16, 17, 21], "earlei": 6, "parser": [6, 23], "significantli": 6, "reduc": [6, 16], "anymor": 6, "rollback": 6, "specul": 6, "accept_token": [6, 17, 18, 19, 20, 21, 23], "token_id": [6, 9, 21, 23], "debug_print": [6, 9], "updat": [6, 11, 14, 18, 19, 20, 24], "try": 6, "id": [6, 9, 10], "out": [6, 15, 19], "special": [6, 10], "captur": [6, 9], "inform": [6, 9, 10, 19, 21, 22, 24], "recurs": [6, 7, 14], "depth": [6, 7, 23], "exceed": 6, "accept_str": [6, 23], "input_str": [6, 9], "consid": [6, 10], "step": [6, 12, 18, 19, 20], "complement": 6, "alwai": [6, 10, 16, 17, 18, 19, 20], "buffer": 6, "_supportsarrai": 6, "_nestedsequ": 6, "complex": 6, "index": [6, 9], "input": [6, 9, 10, 15, 16, 18, 20, 21], "chang": [6, 9, 11, 24], "need_appli": 6, "alreadi": [6, 15, 17], "mismatch": 6, "find_jump_forward_str": [6, 23], "find": [6, 12], "longest": 6, "certainli": 6, "conform": [6, 17], "becom": 6, "requir": [6, 11, 14, 20, 21, 24], "jump_forward_str": 6, "num_token": 6, "previou": 6, "sever": [6, 19], "nor": 6, "is_termin": [6, 18, 19, 20, 21], "stop_token_id": [6, 10], "xgr": [7, 15, 16, 17, 18, 20, 21, 23], "vocabtyp": [7, 10], "test": [7, 12], "_json_schema_to_ebnf": [7, 9], "_regex_to_ebnf": [7, 9], "_ebnf_to_grammar_no_norm": [7, 9], "_get_matcher_from_grammar": [7, 9], "_is_grammar_accept_str": [7, 9], "_get_masked_tokens_from_bitmask": [7, 9], "_is_single_token_bitmask": [7, 9], "_bool_mask_to_bitmask": [7, 9], "_get_matcher_from_grammar_and_tokenizer_info": [7, 9], "_get_allow_empty_rule_id": [7, 9], "_generate_range_regex": [7, 9], "_generate_float_regex": [7, 9], "_print_grammar_fsm": [7, 9], "grammarfunctor": [7, 9], "config": [7, 10, 12, 14, 15, 16, 18, 19, 20], "except": 7, "schema_": 8, "api": 9, "modul": [9, 10, 14], "prone": 9, "don": [9, 15], "t": [9, 15, 17, 18], "product": 9, "bnf_string": 9, "with_rule_nam": 9, "syntax": [9, 17], "javascript": [9, 13], "ecma": 9, "262": 9, "develop": 9, "mozilla": 9, "u": [9, 18, 21], "doc": [9, 10, 13], "web": [9, 22], "refer": [9, 11], "regular_express": 9, "tutori": [9, 18, 19, 20, 21], "featur": [9, 11, 21], "backrefer": 9, "2": [9, 10, 15, 18, 19, 20], "non": [9, 11], "assert": [9, 18, 19, 20], "3": [9, 10, 15, 18, 19, 20, 24], "unicod": [9, 10], "charact": 9, "escap": [9, 18], "p": [9, 18, 19, 20], "4": 9, "word": 9, "b": [9, 19], "5": [9, 10, 18], "6": 9, "quantifi": 9, "x": 9, "y": 9, "now": [9, 10, 18, 19, 20], "just": [9, 19], "repeat": 9, "element": 9, "workaround": 9, "primarili": 9, "intend": 9, "normal": 9, "unnorm": 9, "empti": 9, "either": 9, "contain": [9, 10, 14, 18, 20, 21, 24], "print_tim": 9, "require_termin": 9, "dure": [9, 21, 24], "reject": 9, "mainli": [9, 18, 20], "infer": [9, 17, 18, 20], "rejected_token_id": 9, "singl": [9, 16, 17, 18, 19, 20], "is_single_token": 9, "bool_mask": 9, "align": [9, 10, 17], "block": [9, 23], "add": 9, "extra": [9, 18, 20], "while": [9, 21], "keyword": 9, "argument": 9, "constructor": [9, 10], "start": [9, 10], "fsm": 9, "transform": [9, 10, 15, 19, 21, 24], "These": 9, "structure_norm": 9, "rule_inlin": 9, "inlin": 9, "byte_string_fus": 9, "fuse": 9, "dead_code_elimin": 9, "elimin": 9, "referenc": [9, 11], "lookahead_assertion_analyz": 9, "analyz": 9, "lookahead": 9, "given": [10, 17, 21], "qualnam": 10, "enum": 10, "raw": [10, 21], "byte_fallback": 10, "byte_level": 10, "kept": 10, "kind": 10, "includ": [10, 14, 16, 19, 21, 23, 24], "tiktoken": [10, 21], "microsoft": 10, "phi": 10, "small": 10, "8k": 10, "instruct": [10, 15, 18, 19, 20, 24], "qwen": 10, "7b": 10, "chat": 10, "etc": [10, 14, 18, 20, 21], "fallback": 10, "bpe": 10, "encod": [10, 18, 19, 20], "through": 10, "convers": 10, "u001b": 10, "0x1b": 10, "appl": [10, 14], "meta": [10, 15, 18, 19, 20, 24], "mini": 10, "level": 10, "huggingfac": [10, 14, 15, 21], "87be06ca77166e6a6215eee5a990ab9f07238a18": 10, "src": 10, "gpt2": 10, "tokenization_gpt2": 10, "py": [10, 14], "l38": 10, "l59": 10, "8b": [10, 24], "encoded_vocab": 10, "vocab_typ": 10, "add_prefix_spac": 10, "necessari": [10, 18, 19, 20, 21], "although": 10, "bytefallback": 10, "\u0121": 10, "deepseek": [10, 16], "v2": 10, "": [10, 16, 19, 20, 21, 24], "larger": [10, 16, 18, 19, 20], "than": [10, 16, 18, 19, 20], "pleas": [10, 11, 12, 21, 24], "len": [10, 15, 18, 19, 20], "auto": [10, 18, 20], "correct": [10, 11, 17], "prepend": 10, "text": [10, 15, 17, 18, 20, 21], "from_huggingfac": [10, 15, 18, 19, 20, 21, 24], "pretrainedtokenizerbas": 10, "variou": [10, 14], "backend": [10, 21], "fast": [10, 13, 21], "introduc": [10, 15, 18, 20, 21, 24], "misalign": 10, "could": 10, "defin": [10, 11, 16], "eos_token_id": 10, "other": [10, 15, 19], "you": [10, 11, 12, 14, 15, 16, 18, 19, 20, 21, 23, 24], "equal": 10, "diment": 10, "lm_head": 10, "most": [10, 15, 16, 19, 21], "common": 10, "happen": 10, "possibli": 10, "due": [10, 18, 19, 20], "power": 10, "smaller": 10, "ad": [10, 11], "vision": 10, "molmo": 10, "72b": 10, "0924": 10, "imag": 10, "thei": [10, 19], "model_vocab_s": 10, "prepend_space_in_token": 10, "decoded_vocab": 10, "special_token_id": 10, "control": [10, 16, 17], "reserv": 10, "dump_metadata": 10, "from_vocab_and_metadata": 10, "sphinx": 11, "document": [11, 15], "host": 11, "written": [11, 14], "markdown": 11, "restructuredtext": 11, "rst": 11, "instal": [11, 13, 15, 22], "depend": [11, 14], "debian": 11, "system": [11, 14, 15, 18, 20], "conda": [11, 14, 18, 19, 20], "your": [11, 16, 18, 19, 20], "packag": 11, "rubi": 11, "sudo": 11, "apt": 11, "python": [11, 13, 15, 22], "m": [11, 14], "pip": [11, 14, 18, 19, 20], "r": [11, 18], "txt": 11, "gem": 11, "jekyl": 11, "remot": 11, "theme": 11, "bash": [11, 14], "script": [11, 12, 14], "local_deploy_sit": 11, "sh": [11, 12, 14], "websit": 11, "localhost": 11, "8888": 11, "built": [11, 14, 15, 19, 20], "merg": 11, "main": [11, 18, 19, 20], "branch": 11, "workflow": [11, 13, 17], "yaml": 11, "upload": 11, "gh": 11, "accordingli": 11, "code": [11, 13, 18, 19, 20, 22, 23], "repositori": 11, "releas": [11, 16], "run_coverag": 12, "offer": 12, "wai": [12, 15, 19], "librari": [12, 18, 19, 20], "run": [12, 16, 20, 22], "cmake": [12, 14], "xgrammar_enable_coverag": 12, "ON": 12, "configur": [12, 19], "directori": 12, "report": [12, 15, 17], "coverage_report": 12, "tool": 12, "mere": 12, "aid": 12, "identifi": 12, "been": [12, 17], "pursu": 12, "100": 12, "advis": 12, "neg": [12, 17, 19], "consequ": 12, "open": [13, 15], "solut": 13, "flexibl": [13, 15, 18], "portabl": 13, "mission": 13, "bring": 13, "zero": 13, "overhead": [13, 18, 19, 20], "everywher": 13, "quick": 13, "advanc": [13, 21], "topic": [13, 21], "integr": [13, 17, 18, 20, 21], "engin": [13, 21], "runtim": [13, 21], "safeguard": 13, "build": [13, 21], "coverag": 13, "platform": 14, "linux": 14, "maco": 14, "window": 14, "hardwar": 14, "nvidia": 14, "amd": 14, "silicon": 14, "tpu": 14, "9": [14, 18], "wheel": 14, "forg": 14, "command": 14, "verifi": 14, "import": [14, 15, 18, 19, 20, 21, 23, 24], "path": 14, "env": 14, "lib": 14, "python3": 14, "11": 14, "site": 14, "modif": 14, "obtain": 14, "git": 14, "clone": 14, "mlc": [14, 22], "ai": [14, 22], "cd": 14, "pre": [14, 19], "commit": 14, "cp": 14, "isol": [14, 18, 19, 20], "edit": 14, "rebuild": 14, "gate": 14, "cli": 14, "login": 14, "your_hf_token": 14, "pytest": 14, "subset": 14, "hf_token_requir": 14, "rust": 14, "ninja": 14, "mkdir": 14, "run_ctest": 14, "whose": 14, "test_nam": 14, "how": [15, 18, 19, 20, 21], "focus": 15, "instanti": [15, 18, 19, 20], "automodelforcausallm": [15, 18, 20, 21], "autotoken": [15, 18, 19, 20, 21, 24], "autoconfig": [15, 16, 18, 19, 20], "Or": [15, 18, 20], "model_nam": [15, 18, 20], "1b": [15, 18, 19, 20], "from_pretrain": [15, 16, 18, 19, 20, 21, 24], "torch_dtyp": [15, 18, 20], "float32": [15, 18, 20], "device_map": [15, 18, 20], "messag": [15, 18, 20], "role": [15, 18, 20], "content": [15, 17, 18, 20], "assist": [15, 18, 20], "yourself": [15, 18, 20], "briefli": [15, 18], "apply_chat_templ": [15, 18, 20], "add_generation_prompt": [15, 18, 20], "model_input": [15, 18, 20], "return_tensor": [15, 18, 20], "pt": [15, 18, 20], "custom": [15, 18, 20, 21], "grammar_compil": [15, 16, 18, 20, 21], "json_schema_str": [15, 21], "logits_processor": [15, 18, 20], "xgr_logits_processor": [15, 18, 20], "contrib": [15, 18, 20], "hf": 15, "logitsprocessor": [15, 18, 20], "generated_id": [15, 18, 20], "max_new_token": [15, 18, 20], "512": [15, 18, 20], "input_id": [15, 18, 20, 21], "skip_special_token": [15, 18, 20], "problem": 15, "ask": 15, "question": 15, "our": [15, 19], "repo": 15, "section": [16, 18, 19, 20], "cover": 16, "acceler": [16, 21], "comput": [16, 21], "multithread": [16, 19], "compile_": 16, "gil": 16, "asyncio": [16, 21], "recommend": [16, 17, 18, 19, 20], "half": 16, "virtual": [16, 18, 19, 20], "async": 16, "def": 16, "submit": 16, "sequenc": 16, "future1": 16, "to_thread": 16, "grammar1": 16, "future2": 16, "grammar2": 16, "wait": 16, "futur": 16, "complet": [16, 17, 21, 24], "compiled_grammar1": 16, "await": 16, "compiled_grammar2": 16, "again": [16, 21], "lru": [16, 23], "least": [16, 17, 23], "recent": [16, 17, 23], "evict": [16, 23], "polici": 16, "kei": [16, 19], "By": [16, 17], "further": [16, 21], "spent": 16, "128": 16, "1024": 16, "immidi": 16, "sometim": [16, 17], "v3": 16, "815": 16, "its": [16, 17, 18, 19, 20, 21], "probabl": [16, 17], "distribut": [16, 17], "129": 16, "280": 16, "treat": 16, "129280": 16, "token_bitmask": [16, 18, 19, 20, 21], "found": 16, "model_path": 16, "techniqu": 17, "prohibit": 17, "those": 17, "binari": 17, "length": [17, 19], "sampl": [17, 18, 19, 20, 21], "stage": 17, "let": 17, "take": 17, "closer": 17, "look": 17, "infti": 17, "softmax": [17, 18, 19, 20, 21], "sampler": 17, "vaild": 17, "ensur": [17, 18, 20], "guarante": 17, "entir": 17, "adher": [17, 20], "applic": 17, "increas": 17, "nearli": 17, "mistak": 17, "might": 17, "23": 17, "even": 17, "wrong": 17, "easi": [17, 19, 21], "clean": 17, "extran": 17, "parsabl": 17, "seamlessli": 17, "downstream": 17, "safeti": 17, "unexpect": 17, "prevent": 17, "erron": 17, "agent": 17, "abil": 17, "valuabl": 17, "todai": 17, "minim": 17, "impact": 17, "capabl": 17, "respons": [17, 18, 19, 20], "constraint": 17, "doesn": 17, "anyth": 17, "But": [17, 19], "produc": [17, 21], "answer": 17, "expect": 17, "prompt": 17, "affect": 17, "underli": 17, "much": 17, "possibl": 17, "bitset": [17, 21], "speed": 17, "up": [17, 19], "last": [17, 21], "learn": [17, 21], "besid": [18, 22], "go": [18, 19, 20], "over": [18, 19, 20], "achiev": [18, 20, 21], "avail": [18, 19, 20], "snippet": [18, 19, 20], "below": [18, 19, 20, 24], "runnabl": [18, 19, 20], "simul": [18, 19, 20], "numpi": [18, 19, 20], "np": [18, 19, 20], "extract": [18, 20], "With": [18, 19, 20, 21], "choic": [18, 19, 20], "model_id": [18, 19, 20], "full_vocab_s": [18, 19, 20], "ebnf_grammar_str": 18, "expr": 18, "term": 18, "num": 18, "interact": [18, 19, 20], "regress": [18, 20], "sim_sampled_respons": [18, 19, 20], "16": 18, "end_of_text": [18, 19, 20], "sim_sampled_token_id": [18, 19, 20], "add_special_token": [18, 19, 20], "loop": [18, 19, 20], "iter": [18, 19, 20], "sim_token_id": [18, 19, 20], "enumer": [18, 19, 20], "randn": [18, 19, 20], "prob": [18, 19, 20, 21], "dim": [18, 19, 20, 21], "next_token_id": [18, 19, 20, 21], "random": [18, 19, 20], "inde": [18, 19, 20], "readi": [18, 19, 20], "easili": [18, 20], "aim": [18, 20], "access": [18, 20, 21], "json_grammar_ebnf_str": 18, "basic_arrai": 18, "basic_object": 18, "basic_ani": 18, "basic_numb": 18, "basic_str": 18, "basic_boolean": 18, "basic_nul": 18, "basic_integ": 18, "ee": 18, "basic_string_1": 18, "x00": 18, "x1f": 18, "bfnrt": 18, "fa": 18, "f0": 18, "null": 18, "w": 18, "n": 18, "final": [18, 19, 20], "compon": [19, 21], "lai": 19, "concept": 19, "demonstr": 19, "encapsul": 19, "conveni": 19, "former": 19, "being": 19, "therefor": 19, "persist": 19, "behavior": 19, "enable_cach": 19, "everi": 19, "thing": 19, "seen": 19, "rather": 19, "essenti": 19, "illeg": 19, "infin": 19, "never": 19, "prepar": 19, "abov": [19, 21], "assum": 19, "work": 19, "exact": 19, "sai": 19, "simplic": 19, "loop_it": 19, "paralleliz": 19, "estim": 19, "One": 20, "pick": 20, "person": 20, "ag": 20, "person_schema": 20, "titl": 20, "read": 21, "understand": 21, "sentencepiec": 21, "preprocess": 21, "simplifi": 21, "automata": [21, 23], "adapt": 21, "bound": 21, "save": 21, "locat": 21, "logic": 21, "grammar_match": 21, "modifi": 21, "move": 21, "argmax": 21, "introduct": 21, "write": 21, "hug": 21, "face": 21, "seq_len": 21, "append": 21, "eo": 21, "congratul": 21, "successfulli": 21, "c": 22, "typescript": 22, "sdk": 22, "emscripten": 22, "webassembli": 22, "design": 22, "browser": 22, "webllm": 22, "npm": 22, "mechan": 23, "server": [23, 24], "crash": 23, "involv": 23, "veri": 23, "deep": 23, "caus": 23, "stack": 23, "overflow": 23, "10000": 23, "grow": 23, "too": 23, "larg": 23, "algorithm": 23, "cross": 24, "inter": 24, "commun": 24, "data": 24, "upgrad": 24, "disk": 24, "potenti": 24, "conflict": 24, "grammar_json": 24, "grammar_deseri": 24, "tokenizer_info_json": 24, "tokenizer_info_deseri": 24, "redund": 24, "storag": 24, "compiled_grammar_json": 24, "compiled_grammar_deseri": 24}, "objects": {"xgrammar": [[1, 0, 1, "", "CompiledGrammar"], [3, 0, 1, "", "DeserializeFormatError"], [3, 0, 1, "", "DeserializeVersionError"], [4, 0, 1, "", "Grammar"], [5, 0, 1, "", "GrammarCompiler"], [6, 0, 1, "", "GrammarMatcher"], [3, 0, 1, "", "InvalidJSONError"], [8, 0, 1, "", "StructuralTagItem"], [10, 0, 1, "", "TokenizerInfo"], [10, 0, 1, "", "VocabType"], [0, 4, 1, "", "allocate_token_bitmask"], [0, 4, 1, "", "apply_token_bitmask_inplace"], [0, 5, 1, "", "bitmask_dtype"], [0, 4, 1, "", "get_bitmask_shape"], [2, 4, 1, "", "get_max_recursion_depth"], [2, 4, 1, "", "get_serialization_version"], [2, 4, 1, "", "max_recursion_depth"], [0, 4, 1, "", "reset_token_bitmask"], [2, 4, 1, "", "set_max_recursion_depth"], [9, 6, 0, "-", "testing"]], "xgrammar.CompiledGrammar": [[1, 1, 1, "", "deserialize_json"], [1, 2, 1, "", "grammar"], [1, 2, 1, "", "memory_size_bytes"], [1, 1, 1, "", "serialize_json"], [1, 2, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[4, 1, 1, "", "__str__"], [4, 1, 1, "", "builtin_json_grammar"], [4, 1, 1, "", "concat"], [4, 1, 1, "", "deserialize_json"], [4, 1, 1, "", "from_ebnf"], [4, 1, 1, "", "from_json_schema"], [4, 1, 1, "", "from_regex"], [4, 1, 1, "", "from_structural_tag"], [4, 1, 1, "", "serialize_json"], [4, 1, 1, "", "union"]], "xgrammar.GrammarCompiler": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "cache_limit_bytes"], [5, 1, 1, "", "clear_cache"], [5, 1, 1, "", "compile_builtin_json_grammar"], [5, 1, 1, "", "compile_grammar"], [5, 1, 1, "", "compile_json_schema"], [5, 1, 1, "", "compile_regex"], [5, 1, 1, "", "compile_structural_tag"], [5, 1, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[6, 1, 1, "", "__init__"], [6, 1, 1, "", "accept_string"], [6, 1, 1, "", "accept_token"], [6, 1, 1, "", "fill_next_token_bitmask"], [6, 1, 1, "", "find_jump_forward_string"], [6, 1, 1, "", "is_terminated"], [6, 2, 1, "", "max_rollback_tokens"], [6, 1, 1, "", "reset"], [6, 1, 1, "", "rollback"], [6, 2, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[8, 3, 1, "", "begin"], [8, 3, 1, "", "end"], [8, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[10, 1, 1, "", "__init__"], [10, 2, 1, "", "add_prefix_space"], [10, 2, 1, "", "decoded_vocab"], [10, 1, 1, "", "deserialize_json"], [10, 1, 1, "", "dump_metadata"], [10, 1, 1, "", "from_huggingface"], [10, 1, 1, "", "from_vocab_and_metadata"], [10, 2, 1, "", "prepend_space_in_tokenization"], [10, 1, 1, "", "serialize_json"], [10, 2, 1, "", "special_token_ids"], [10, 2, 1, "", "stop_token_ids"], [10, 2, 1, "", "vocab_size"], [10, 2, 1, "", "vocab_type"]], "xgrammar.VocabType": [[10, 3, 1, "", "BYTE_FALLBACK"], [10, 3, 1, "", "BYTE_LEVEL"], [10, 3, 1, "", "RAW"]], "xgrammar.testing": [[9, 0, 1, "", "GrammarFunctor"], [9, 4, 1, "", "_bool_mask_to_bitmask"], [9, 4, 1, "", "_ebnf_to_grammar_no_normalization"], [9, 4, 1, "", "_generate_float_regex"], [9, 4, 1, "", "_generate_range_regex"], [9, 4, 1, "", "_get_allow_empty_rule_ids"], [9, 4, 1, "", "_get_masked_tokens_from_bitmask"], [9, 4, 1, "", "_get_matcher_from_grammar"], [9, 4, 1, "", "_get_matcher_from_grammar_and_tokenizer_info"], [9, 4, 1, "", "_is_grammar_accept_string"], [9, 4, 1, "", "_is_single_token_bitmask"], [9, 4, 1, "", "_json_schema_to_ebnf"], [9, 4, 1, "", "_print_grammar_fsms"], [9, 4, 1, "", "_regex_to_ebnf"]], "xgrammar.testing.GrammarFunctor": [[9, 1, 1, "", "byte_string_fuser"], [9, 1, 1, "", "dead_code_eliminator"], [9, 1, 1, "", "lookahead_assertion_analyzer"], [9, 1, 1, "", "rule_inliner"], [9, 1, 1, "", "structure_normalizer"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:data", "6": "py:module"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"], "6": ["py", "module", "Python module"]}, "titleterms": {"bitmask": [0, 19, 21], "oper": 0, "xgr": [1, 4, 5, 6, 9, 10, 19, 24], "compiledgrammar": [1, 19, 24], "config": 2, "recurs": [2, 23], "depth": 2, "manag": 2, "serial": [2, 24], "version": 2, "except": 3, "grammar": [4, 15, 16, 21, 24], "grammarcompil": [5, 19], "grammarmatch": [6, 19], "xgrammar": [7, 13, 14, 17, 18, 19, 20, 21], "python": [7, 14], "api": [7, 13, 22], "structur": [8, 19], "tag": 8, "test": [9, 14], "tokenizerinfo": [10, 19, 24], "build": [11, 14], "doc": 11, "local": 11, "deploi": 11, "github": 11, "page": 11, "best": 11, "practic": 11, "write": 11, "code": 12, "coverag": 12, "welcom": 13, "get": 13, "start": [13, 15], "tutori": 13, "featur": 13, "develop": 13, "guid": [13, 18], "refer": 13, "instal": [14, 18, 19, 20], "method": 14, "1": 14, "prebuilt": 14, "packag": 14, "2": 14, "from": 14, "sourc": 14, "option": 14, "run": 14, "3": 14, "c": 14, "librari": 14, "onli": 14, "quick": 15, "prepar": 15, "compil": [15, 16, 21], "gener": [15, 18, 19, 20, 21], "what": 15, "do": 15, "next": [15, 17, 21], "advanc": 16, "topic": 16, "multi": 16, "thread": 16, "cach": [16, 23], "handl": 16, "pad": 16, "llm": [16, 18, 19, 20], "output": 16, "logit": [16, 19], "constrain": 17, "decod": 17, "": 17, "implement": 17, "step": [17, 21], "ebnf": 18, "engin": [18, 19, 20], "try": [18, 20], "out": [18, 20], "via": [18, 20], "hf": [18, 20], "transform": [18, 20], "integr": 19, "high": 19, "level": 19, "flow": 19, "auto": 19, "regress": 19, "batch": 19, "infer": 19, "json": 20, "workflow": 21, "token": 21, "info": 21, "matcher": 21, "The": 21, "loop": 21, "javascript": 22, "runtim": 23, "safeguard": 23, "limit": 23, "size": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Bitmask Operations": [[0, "bitmask-operations"]], "xgr.CompiledGrammar": [[1, "xgr-compiledgrammar"], [19, "xgr-compiledgrammar"], [24, "xgr-compiledgrammar"]], "Config": [[2, "config"]], "Recursion Depth Management": [[2, "recursion-depth-management"]], "Serialization Version": [[2, "serialization-version"]], "Exception": [[3, "exception"]], "xgr.Grammar": [[4, "xgr-grammar"], [24, "xgr-grammar"]], "xgr.GrammarCompiler": [[5, "xgr-grammarcompiler"], [19, "xgr-grammarcompiler"]], "xgr.GrammarMatcher": [[6, "xgr-grammarmatcher"], [19, "xgr-grammarmatcher"]], "XGrammar Python API": [[7, "xgrammar-python-api"]], "Structural Tag": [[8, "structural-tag"]], "xgr.testing": [[9, "module-xgrammar.testing"]], "xgr.TokenizerInfo": [[10, "xgr-tokenizerinfo"], [19, "xgr-tokenizerinfo"], [24, "xgr-tokenizerinfo"]], "Building Docs": [[11, "building-docs"]], "Building Docs Locally": [[11, "building-docs-locally"]], "Deploying Docs on GitHub Pages": [[11, "deploying-docs-on-github-pages"]], "Best Practices for Writing Docs": [[11, "best-practices-for-writing-docs"]], "Code Coverage": [[12, "code-coverage"]], "\ud83d\udc4b Welcome to XGrammar": [[13, "welcome-to-xgrammar"]], "Get Started": [[13, null]], "Tutorials": [[13, null]], "XGrammar Features": [[13, null]], "Developer Guide": [[13, null]], "API Reference": [[13, null]], "Installation": [[14, "installation"]], "Method 1: Prebuilt Package": [[14, "method-1-prebuilt-package"]], "Method 2: Build XGrammar Python Package from Source": [[14, "method-2-build-xgrammar-python-package-from-source"]], "Optional: Run Python Tests": [[14, "optional-run-python-tests"]], "Method 3: Build XGrammar C++ Library Only": [[14, "method-3-build-xgrammar-c-library-only"]], "Optional: Run C++ Tests": [[14, "optional-run-c-tests"]], "Quick Start": [[15, "quick-start"]], "Preparation": [[15, "preparation"]], "Compile Grammar": [[15, "compile-grammar"]], "Generate with grammar": [[15, "generate-with-grammar"]], "What to Do Next": [[15, "what-to-do-next"]], "Advanced Topics": [[16, "advanced-topics"]], "Multi-threaded Grammar Compilation and Cache": [[16, "multi-threaded-grammar-compilation-and-cache"]], "Handle Padding to the LLM Output Logits": [[16, "handle-padding-to-the-llm-output-logits"]], "Constrained Decoding": [[17, "constrained-decoding"]], "XGrammar\u2019s Implementation": [[17, "xgrammar-s-implementation"]], "Next Steps": [[17, "next-steps"], [21, "next-steps"]], "EBNF-Guided Generation": [[18, "ebnf-guided-generation"]], "Install XGrammar": [[18, "install-xgrammar"], [19, "install-xgrammar"], [20, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[18, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[18, "try-out-via-hf-transformers"], [20, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[19, "integration-with-llm-engine"]], "High-Level Flow": [[19, "high-level-flow"]], "Bitmasking Logits in Auto-regressive Generation": [[19, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[19, "structured-generation-for-batched-inference"]], "JSON Generation": [[20, "json-generation"]], "JSON Generation in LLM Engines": [[20, "json-generation-in-llm-engines"]], "Workflow of XGrammar": [[21, "workflow-of-xgrammar"]], "Grammar": [[21, "grammar"]], "Tokenizer Info": [[21, "tokenizer-info"]], "Grammar Compiler": [[21, "grammar-compiler"]], "Compiled Grammar": [[21, "compiled-grammar"]], "Token Bitmask": [[21, "token-bitmask"]], "Grammar Matcher": [[21, "grammar-matcher"]], "The Generation Loop": [[21, "the-generation-loop"]], "JavaScript API": [[22, "javascript-api"]], "Runtime Safeguards": [[23, "runtime-safeguards"]], "Recursion Limit": [[23, "recursion-limit"]], "Cache Size Limit": [[23, "cache-size-limit"]], "Serialization": [[24, "serialization"]]}, "indexentries": {"allocate_token_bitmask() (in module xgrammar)": [[0, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[0, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[0, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[0, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[0, "xgrammar.reset_token_bitmask"]], "compiledgrammar (class in xgrammar)": [[1, "xgrammar.CompiledGrammar"]], "deserialize_json() (xgrammar.compiledgrammar static method)": [[1, "xgrammar.CompiledGrammar.deserialize_json"]], "grammar (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.memory_size_bytes"]], "serialize_json() (xgrammar.compiledgrammar method)": [[1, "xgrammar.CompiledGrammar.serialize_json"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.tokenizer_info"]], "get_max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.get_max_recursion_depth"]], "get_serialization_version() (in module xgrammar)": [[2, "xgrammar.get_serialization_version"]], "max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.max_recursion_depth"]], "set_max_recursion_depth() (in module xgrammar)": [[2, "xgrammar.set_max_recursion_depth"]], "deserializeformaterror (class in xgrammar)": [[3, "xgrammar.DeserializeFormatError"]], "deserializeversionerror (class in xgrammar)": [[3, "xgrammar.DeserializeVersionError"]], "invalidjsonerror (class in xgrammar)": [[3, "xgrammar.InvalidJSONError"]], "grammar (class in xgrammar)": [[4, "xgrammar.Grammar"]], "__str__() (xgrammar.grammar method)": [[4, "xgrammar.Grammar.__str__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.concat"]], "deserialize_json() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.deserialize_json"]], "from_ebnf() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.from_structural_tag"]], "serialize_json() (xgrammar.grammar method)": [[4, "xgrammar.Grammar.serialize_json"]], "union() (xgrammar.grammar static method)": [[4, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[5, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[5, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_grammar() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[5, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[6, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[6, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[6, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[6, "xgrammar.GrammarMatcher.stop_token_ids"]], "structuraltagitem (class in xgrammar)": [[8, "xgrammar.StructuralTagItem"]], "begin (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.begin"]], "end (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.end"]], "schema_ (xgrammar.structuraltagitem attribute)": [[8, "xgrammar.StructuralTagItem.schema_"]], "grammarfunctor (class in xgrammar.testing)": [[9, "xgrammar.testing.GrammarFunctor"]], "_bool_mask_to_bitmask() (in module xgrammar.testing)": [[9, "xgrammar.testing._bool_mask_to_bitmask"]], "_ebnf_to_grammar_no_normalization() (in module xgrammar.testing)": [[9, "xgrammar.testing._ebnf_to_grammar_no_normalization"]], "_generate_float_regex() (in module xgrammar.testing)": [[9, "xgrammar.testing._generate_float_regex"]], "_generate_range_regex() (in module xgrammar.testing)": [[9, "xgrammar.testing._generate_range_regex"]], "_get_allow_empty_rule_ids() (in module xgrammar.testing)": [[9, "xgrammar.testing._get_allow_empty_rule_ids"]], "_get_masked_tokens_from_bitmask() (in module xgrammar.testing)": [[9, "xgrammar.testing._get_masked_tokens_from_bitmask"]], "_get_matcher_from_grammar() (in module xgrammar.testing)": [[9, "xgrammar.testing._get_matcher_from_grammar"]], "_get_matcher_from_grammar_and_tokenizer_info() (in module xgrammar.testing)": [[9, "xgrammar.testing._get_matcher_from_grammar_and_tokenizer_info"]], "_is_grammar_accept_string() (in module xgrammar.testing)": [[9, "xgrammar.testing._is_grammar_accept_string"]], "_is_single_token_bitmask() (in module xgrammar.testing)": [[9, "xgrammar.testing._is_single_token_bitmask"]], "_json_schema_to_ebnf() (in module xgrammar.testing)": [[9, "xgrammar.testing._json_schema_to_ebnf"]], "_print_grammar_fsms() (in module xgrammar.testing)": [[9, "xgrammar.testing._print_grammar_fsms"]], "_regex_to_ebnf() (in module xgrammar.testing)": [[9, "xgrammar.testing._regex_to_ebnf"]], "byte_string_fuser() (xgrammar.testing.grammarfunctor static method)": [[9, "xgrammar.testing.GrammarFunctor.byte_string_fuser"]], "dead_code_eliminator() (xgrammar.testing.grammarfunctor static method)": [[9, "xgrammar.testing.GrammarFunctor.dead_code_eliminator"]], "lookahead_assertion_analyzer() (xgrammar.testing.grammarfunctor static method)": [[9, "xgrammar.testing.GrammarFunctor.lookahead_assertion_analyzer"]], "module": [[9, "module-xgrammar.testing"]], "rule_inliner() (xgrammar.testing.grammarfunctor static method)": [[9, "xgrammar.testing.GrammarFunctor.rule_inliner"]], "structure_normalizer() (xgrammar.testing.grammarfunctor static method)": [[9, "xgrammar.testing.GrammarFunctor.structure_normalizer"]], "xgrammar.testing": [[9, "module-xgrammar.testing"]], "byte_fallback (xgrammar.vocabtype attribute)": [[10, "xgrammar.VocabType.BYTE_FALLBACK"]], "byte_level (xgrammar.vocabtype attribute)": [[10, "xgrammar.VocabType.BYTE_LEVEL"]], "raw (xgrammar.vocabtype attribute)": [[10, "xgrammar.VocabType.RAW"]], "tokenizerinfo (class in xgrammar)": [[10, "xgrammar.TokenizerInfo"]], "vocabtype (class in xgrammar)": [[10, "xgrammar.VocabType"]], "__init__() (xgrammar.tokenizerinfo method)": [[10, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.decoded_vocab"]], "deserialize_json() (xgrammar.tokenizerinfo static method)": [[10, "xgrammar.TokenizerInfo.deserialize_json"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[10, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[10, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[10, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "serialize_json() (xgrammar.tokenizerinfo method)": [[10, "xgrammar.TokenizerInfo.serialize_json"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[10, "xgrammar.TokenizerInfo.vocab_type"]]}})