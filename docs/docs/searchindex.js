Search.setIndex({"docnames": ["README", "api/python/_generated/xgrammar.CompiledGrammar", "api/python/_generated/xgrammar.Grammar", "api/python/_generated/xgrammar.GrammarCompiler", "api/python/_generated/xgrammar.GrammarMatcher", "api/python/_generated/xgrammar.TokenizerInfo", "api/python/_generated/xgrammar.VocabType", "api/python/bitmask_ops", "api/python/index", "api/python/recursion_depth", "api/python/structural_tag_item", "how_to/code_coverage", "how_to/ebnf_guided_generation", "how_to/engine_integration", "how_to/json_generation", "how_to/portable_api", "index", "misc/runtime_safeguards", "start/install", "start/quick_start"], "filenames": ["README.md", "api/python/_generated/xgrammar.CompiledGrammar.rst", "api/python/_generated/xgrammar.Grammar.rst", "api/python/_generated/xgrammar.GrammarCompiler.rst", "api/python/_generated/xgrammar.GrammarMatcher.rst", "api/python/_generated/xgrammar.TokenizerInfo.rst", "api/python/_generated/xgrammar.VocabType.rst", "api/python/bitmask_ops.rst", "api/python/index.rst", "api/python/recursion_depth.rst", "api/python/structural_tag_item.rst", "how_to/code_coverage.rst", "how_to/ebnf_guided_generation.rst", "how_to/engine_integration.rst", "how_to/json_generation.rst", "how_to/portable_api.rst", "index.rst", "misc/runtime_safeguards.md", "start/install.rst", "start/quick_start.rst"], "titles": ["XGrammar Documentation", "xgrammar.CompiledGrammar", "xgrammar.Grammar", "xgrammar.GrammarCompiler", "xgrammar.GrammarMatcher", "xgrammar.TokenizerInfo", "xgrammar.VocabType", "Bitmask Operations", "xgrammar", "Recursion Depth Management", "xgrammar.StructuralTagItem", "Code Coverage Test", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "Portable API", "\ud83d\udc4b Welcome to XGrammar", "Runtime Safeguards", "Installation", "Quick Start"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 15, 16, 17, 19], "wa": 0, "built": [0, 13, 14, 18, 19], "upon": 0, "sphinx": 0, "run": [0, 11, 14, 15, 18, 19], "follow": [0, 2, 3, 4, 9, 11, 12, 13, 18, 19], "command": [0, 18], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 18, 19], "directori": [0, 11], "instal": [0, 15, 19], "first": [0, 2, 12, 13, 14], "pip3": 0, "r": [0, 12], "requir": [0, 4, 14, 18], "txt": 0, "Then": [0, 2, 12, 13, 14, 18], "you": [0, 5, 11, 12, 13, 14, 17, 18, 19], "can": [0, 1, 2, 4, 5, 7, 11, 12, 13, 14, 15, 17, 18, 19], "make": [0, 2, 12, 13, 14, 18], "html": [0, 2], "start": [0, 6, 18], "simpl": 0, "http": [0, 2, 6, 18], "server": [0, 17], "cd": [0, 18], "_build": 0, "python3": [0, 18], "m": [0, 18], "your": [0, 12, 13, 14, 18], "browser": [0, 15], "localhost": 0, "8000": 0, "port": 0, "custom": [0, 12, 14, 19], "append": 0, "p": [0, 12, 13, 14], "port_numb": 0, "python": [0, 15, 18, 19], "abov": [0, 13], "mai": [0, 2, 3, 5, 12, 14, 17, 18], "also": [0, 4, 5, 12, 13, 14, 15, 17, 18], "need": [0, 2, 4, 5, 7, 13, 18], "bind": [0, 18], "0": [0, 4, 6, 7, 12, 13, 14, 19], "machin": 0, "like": [0, 2], "mac": 0, "class": [1, 2, 3, 4, 5, 6, 10, 14, 17], "sourc": [1, 2, 3, 4, 5, 6, 7, 9, 10, 16], "base": [1, 2, 3, 4, 5, 6, 10, 13, 18], "xgrobject": [1, 2, 3, 4, 5], "i": [1, 2, 3, 4, 5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 19], "primari": 1, "object": [1, 2, 14], "store": [1, 3, 17], "compil": [1, 3, 11, 12, 13, 14, 15, 17, 18], "grammar": [1, 3, 4, 5, 10, 12, 13, 14, 17], "A": [1, 7, 9, 10, 12, 18], "us": [1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 19], "construct": [1, 2, 5, 7, 12, 13, 14, 19], "grammarmatch": [1, 2, 12, 14, 17], "gener": [1, 2, 3, 4, 5, 7, 16], "token": [1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 18, 19], "mask": [1, 2, 4, 5, 7, 12, 13, 14], "effici": [1, 12, 13, 14], "do": [1, 7, 18], "directli": [1, 18], "instead": [1, 5, 7], "grammarcompil": [1, 12, 14, 17, 19], "__init__": [1, 2, 3, 4, 5, 6, 18], "method": [1, 2, 3, 4, 5, 7, 9], "attribut": [1, 3, 4, 5, 6], "properti": [1, 2, 3, 4, 5, 14], "origin": [1, 5, 6, 9], "memory_size_byt": 1, "int": [1, 2, 3, 4, 5, 7, 9, 14], "approxim": [1, 3], "memori": [1, 3, 7], "usag": [1, 3, 19], "byte": [1, 3, 4, 5, 6], "tokenizer_info": [1, 3, 5, 12, 13, 14, 17, 19], "tokenizerinfo": [1, 3, 6, 12, 14, 19], "info": [1, 3, 5, 12, 13, 14], "associ": [1, 3], "repres": [2, 12], "later": [2, 13], "guid": [2, 3, 4, 5, 13, 19], "support": [2, 5, 6, 7, 13, 18], "context": [2, 4, 9, 17], "free": 2, "cfg": 2, "ebnf": [2, 13, 19], "extend": 2, "backu": 2, "naur": 2, "form": [2, 6], "format": [2, 3, 5, 6, 12], "There": [2, 13], "ar": [2, 5, 6, 7, 12, 13, 14, 18, 19], "mani": [2, 15], "specif": [2, 4, 12, 18, 19], "literatur": 2, "we": [2, 7, 12, 13, 14, 15, 18], "gbnf": [2, 12, 19], "ggml": [2, 12], "bnf": [2, 12], "github": [2, 6, 16, 18, 19], "com": [2, 6, 18], "ggerganov": 2, "llama": [2, 5, 6, 12, 13, 14, 19], "cpp": 2, "blob": [2, 6], "master": 2, "readm": 2, "md": 2, "when": [2, 3, 5, 7, 13, 18], "print": [2, 4, 12, 14, 18, 19], "convert": [2, 5], "static": [2, 5], "builtin_json_grammar": 2, "get": [2, 3, 4, 7, 9, 12, 13, 14, 17, 18], "standard": [2, 3, 18], "json": [2, 3, 5, 12, 13, 19], "compat": 2, "offici": 2, "www": 2, "org": 2, "en": 2, "return": [2, 3, 4, 5, 7, 9], "type": [2, 3, 4, 5, 6, 7, 9, 10, 14], "concat": 2, "creat": [2, 18], "match": [2, 4], "concaten": 2, "list": [2, 3, 4, 5, 7, 12, 13, 14], "That": 2, "equival": [2, 3], "oper": [2, 4, 8, 17], "paramet": [2, 3, 4, 5, 7, 9], "from_ebnf": 2, "ebnf_str": [2, 3, 19], "str": [2, 3, 4, 5, 10, 14], "root_rule_nam": [2, 3], "root": [2, 3, 11, 12], "from": [2, 3, 4, 5, 12, 13, 14, 17, 19], "string": [2, 3, 4, 5, 12, 14, 19], "should": [2, 4, 5, 7, 13, 18], "default": [2, 3, 4, 5, 7, 9, 13, 17], "name": [2, 6, 13, 14], "rule": 2, "rais": [2, 4, 17], "runtimeerror": [2, 4, 17], "regex": [2, 3], "pattern": 2, "fail": 2, "detail": [2, 3, 5, 10, 19], "about": [2, 4], "pars": [2, 17], "error": 2, "from_json_schema": 2, "schema": [2, 3, 10, 12, 14, 19], "union": [2, 3, 4, 5, 10], "basemodel": [2, 3, 10, 14], "dict": [2, 3, 10], "ani": [2, 3, 4, 6, 10, 19], "any_whitespac": [2, 3], "bool": [2, 3, 4, 5], "true": [2, 3, 4, 12, 13, 14, 19], "indent": [2, 3], "option": [2, 3, 4, 5, 7, 14], "none": [2, 3, 4, 5, 6, 7, 9], "separ": [2, 3], "tupl": [2, 3, 7], "strict_mod": [2, 3], "print_converted_ebnf": 2, "fals": [2, 3, 4, 5, 12, 13, 14, 19], "pydant": [2, 3, 14], "model": [2, 3, 5, 6, 12, 13, 14, 18, 19], "specifi": [2, 3, 4, 5, 7, 12, 14], "It": [2, 3, 4, 5, 7, 12, 13, 14, 15, 17], "allow": [2, 3, 4, 7, 9], "whitespac": 2, "If": [2, 3, 4, 5, 7, 17], "user": [2, 4, 5, 7, 12, 14, 19], "want": [2, 18], "set": [2, 3, 5, 7, 9, 11, 13, 17, 18], "mean": [2, 4, 7, 17], "valu": [2, 3, 4, 6, 9], "convent": [2, 3], "dump": [2, 3, 5, 14], "intern": [2, 4], "whether": [2, 3, 4, 5], "ignor": 2, "number": [2, 3, 4], "space": [2, 3, 5], "output": [2, 3, 4, 11, 12, 14], "one": [2, 3, 4, 14], "line": [2, 3, 18], "note": [2, 3, 5, 7, 12, 13, 14], "forc": 2, "llm": [2, 3, 4, 5, 17], "strictli": 2, "howev": 2, "some": [2, 5, 13], "tend": 2, "In": [2, 3, 4, 5, 7, 11, 12, 13, 14], "case": [2, 4, 5, 11, 13, 19], "degrad": 2, "qualiti": 2, "see": [2, 3, 5, 10, 12, 13, 14, 15, 18, 19], "sgl": 2, "project": [2, 16], "sglang": 2, "issu": [2, 19], "2216": 2, "issuecom": 2, "2516192009": 2, "more": [2, 3, 5, 10, 12, 15, 19], "two": [2, 3, 13, 14], "comma": [2, 3], "colon": [2, 3], "exampl": [2, 3, 9, 14, 16], "otherwis": [2, 3, 4, 13], "strict": [2, 3], "mode": [2, 3], "item": [2, 3, 10, 17], "unevaluatedproperti": [2, 3], "unevaluateditem": [2, 3], "help": [2, 3, 4, 12, 14, 19], "accur": [2, 3], "For": [2, 13, 14, 15], "debug": [2, 4], "purpos": 2, "from_regex": 2, "regex_str": 2, "regular": 2, "express": 2, "from_structural_tag": [2, 3, 10], "tag": [2, 3, 10], "structuraltagitem": [2, 3, 8], "trigger": [2, 3], "structur": [2, 3, 7, 10, 12, 14, 16, 19], "handl": [2, 4, 5], "dispatch": 2, "differ": [2, 13], "initi": [2, 4], "until": 2, "encount": 2, "correspond": 2, "end": [2, 8, 10, 12, 14], "next": [2, 4, 7, 12, 13, 14], "especi": [2, 7], "function": [2, 4, 7], "call": [2, 7, 13], "where": [2, 4, 7], "func_nam": 2, "arg1": 2, "arg2": 2, "consist": 2, "three": [2, 6, 14], "part": 2, "begin": [2, 8, 10], "accord": [2, 13], "an": [2, 4, 7, 12, 13, 14, 17, 18, 19], "describ": 2, "abl": 2, "multipl": [2, 3, 5], "pass": [2, 5, 9, 13], "them": [2, 4, 5, 7, 13], "prefix": 2, "provid": [2, 4, 5, 7, 12, 14, 15, 17, 18, 19], "constrain": 2, "same": [2, 3, 5, 7, 13], "must": [2, 4], "e": [2, 5, 6, 18], "g": [2, 5, 6, 18], "get_weath": 2, "citi": 2, "beij": 2, "corrrespond": 2, "automat": [2, 5], "determin": [2, 5, 9], "all": [2, 3, 4, 7, 12, 13, 14, 18], "group": 2, "togeth": 2, "sure": [2, 12, 13, 14, 18], "anoth": 2, "ambigu": 2, "To": [2, 11, 13, 15, 18, 19], "each": [2, 12, 13, 14], "1": [2, 3, 4, 6, 7, 9, 12, 13, 14, 17], "have": [2, 7, 12, 13, 14, 18], "fill_next_token_bitmask": [2, 4, 7, 12, 13, 14, 17], "enforc": [2, 12, 13, 14], "logit": [2, 7, 12, 14], "benefit": 2, "boundari": [2, 6], "between": [2, 5], "doe": [2, 4], "worri": 2, "schema1": 2, "schema2": 2, "arg3": 2, "float": 2, "arg4": 2, "f": 2, "max_thread": [3, 12, 13, 14], "8": [3, 12, 13, 14], "cache_en": 3, "cache_limit_byt": [3, 17], "certain": 3, "compiledgrammar": [3, 4, 14], "parallel": 3, "thread": [3, 9, 13], "ha": [3, 4, 5, 13, 17, 18], "cach": [3, 13], "result": [3, 13], "avoid": [3, 17, 18], "time": [3, 4], "maximum": [3, 4, 9, 17], "enabl": [3, 12, 13, 14, 18, 19], "unit": 3, "actual": [3, 12, 13, 14], "slightli": 3, "exce": [3, 4, 17], "limit": 3, "clear_cach": 3, "clear": 3, "compile_builtin_json_grammar": [3, 13, 14, 19], "compiled_grammar": [3, 4, 12, 13, 14, 19], "compile_grammar": [3, 12, 19], "compile_json_schema": [3, 14, 19], "compile_regex": 3, "compile_structural_tag": 3, "get_cache_size_byt": 3, "override_stop_token": 4, "terminate_without_stop_token": 4, "max_rollback_token": 4, "core": [4, 15, 18], "maintain": [4, 12, 13, 14], "state": [4, 12, 13, 14], "matcher": [4, 12, 13, 14, 17], "accept": [4, 12, 13, 14], "bitmask": [4, 8, 12, 14, 18], "predict": [4, 7], "so": [4, 7, 12, 13, 14], "Its": 4, "reset": [4, 7, 12, 13, 14], "roll": 4, "back": [4, 5], "util": 4, "jump": 4, "forward": 4, "decod": [4, 5, 12, 14, 19], "after": [4, 7, 11, 13, 19], "whole": 4, "stop": [4, 5, 12, 13, 14], "onli": 4, "termin": [4, 12, 13, 14], "cannot": 4, "new": [4, 19], "finish": 4, "under": 4, "hood": 4, "pushdown": [4, 17], "automaton": 4, "backtrack": 4, "optim": [4, 7], "overrid": 4, "ones": [4, 18], "without": [4, 6], "rollback": 4, "specul": 4, "accept_str": [4, 17], "input_str": 4, "debug_print": 4, "updat": [4, 12, 13, 14], "consid": [4, 5], "step": [4, 11, 12, 13, 14, 18], "complement": 4, "accept_token": [4, 12, 13, 14, 17], "alwai": [4, 5, 12, 13, 14], "inform": [4, 5, 13], "recurs": [4, 8, 18], "depth": [4, 8, 17], "exceed": 4, "token_id": [4, 17], "try": [4, 19], "id": [4, 5], "out": [4, 13, 15, 16, 18, 19], "rang": [4, 7, 12, 13, 14], "special": [4, 5], "captur": 4, "tensor": [4, 7, 12, 13, 14], "index": 4, "fill": [4, 7, 13], "input": [4, 5, 12, 14, 19], "allocate_token_bitmask": [4, 7, 8, 12, 13, 14], "cpu": [4, 7, 12, 13, 14, 19], "chang": [4, 11], "torch": [4, 7, 12, 13, 14, 19], "batch": [4, 7, 12, 14], "need_appli": 4, "appli": [4, 7, 12, 13, 14, 18], "alreadi": 4, "find_jump_forward_str": [4, 17], "find": [4, 11], "longest": 4, "certainli": 4, "conform": 4, "current": [4, 12, 13, 17], "becom": 4, "jump_forward_str": 4, "is_termin": [4, 12, 13, 14], "check": [4, 15, 16, 19], "num_token": 4, "previou": 4, "sever": [4, 13], "nor": 4, "stop_token_id": [4, 5], "detect": [4, 5, 7], "vocabulari": [4, 5, 6, 7, 13], "encoded_vocab": 5, "vocab_typ": 5, "vocabtyp": 5, "raw": [5, 6], "vocab_s": [5, 7, 12, 13, 14, 19], "add_prefix_spac": 5, "contain": [5, 12, 14], "necessari": [5, 12, 13, 14], "although": 5, "encod": [5, 6, 12, 13, 14], "0x1b": [5, 6], "bytefallback": 5, "\u0121": 5, "level": [5, 6, 15], "bpe": [5, 6], "phi": [5, 6], "3": [5, 6, 9, 12, 13, 14, 18, 19], "deepseek": 5, "v2": 5, "pad": [5, 7, 12, 13, 14], "32": [5, 7], "": [5, 13, 14, 15], "larger": [5, 12, 13, 14], "than": [5, 12, 13, 14], "size": [5, 7], "pleas": [5, 11, 18], "constructor": 5, "becaus": 5, "len": [5, 12, 13, 14, 19], "auto": [5, 12, 14], "correct": 5, "prepend": 5, "befor": [5, 7], "text": [5, 12, 14, 19], "process": [5, 6, 9, 17], "decoded_vocab": 5, "dump_metadata": 5, "metadata": 5, "from_huggingfac": [5, 12, 13, 14, 19], "pretrainedtokenizerbas": 5, "huggingfac": [5, 6, 18], "variou": 5, "backend": [5, 15], "includ": [5, 6, 13, 15, 17, 18], "fast": [5, 16], "tiktoken": [5, 6], "introduc": [5, 12, 14, 19], "misalign": 5, "could": 5, "defin": 5, "config": [5, 11, 12, 13, 14, 19], "here": [5, 9, 12, 13, 14, 15], "doc": 5, "eos_token_id": 5, "other": [5, 13, 19], "manual": [5, 7, 9], "equal": 5, "vocab": [5, 7], "diment": 5, "lm_head": 5, "most": [5, 13], "common": 5, "happen": 5, "possibli": 5, "due": [5, 12, 13, 14], "align": 5, "power": 5, "2": [5, 6, 9, 12, 13, 14, 19], "smaller": 5, "ad": 5, "vision": 5, "molmo": 5, "72b": 5, "0924": 5, "imag": 5, "thei": [5, 13], "model_vocab_s": 5, "from_vocab_and_metadata": 5, "prepend_space_in_token": 5, "deprec": 5, "special_token_id": 5, "control": 5, "reserv": 5, "etc": [5, 6, 12, 14, 19], "now": [5, 12, 13, 14], "given": 6, "modul": [6, 18], "qualnam": 6, "enum": 6, "kept": 6, "kind": 6, "microsoft": 6, "small": 6, "8k": 6, "instruct": [6, 12, 13, 14, 19], "qwen": 6, "7b": 6, "chat": 6, "byte_fallback": 6, "fallback": 6, "through": 6, "convers": 6, "appl": 6, "meta": [6, 12, 13, 14, 19], "5": [6, 12], "mini": 6, "byte_level": 6, "unicod": 6, "transform": [6, 13, 19], "87be06ca77166e6a6215eee5a990ab9f07238a18": 6, "src": 6, "gpt2": 6, "tokenization_gpt2": 6, "py": [6, 18], "l38": 6, "l59": 6, "8b": 6, "arg": 6, "kwd": 6, "xgrammar": [7, 9, 11, 15, 17, 18, 19], "batch_siz": [7, 13], "alloc": [7, 12, 13, 14], "int32": 7, "shape": [7, 12, 13, 14], "ceil": 7, "who": 7, "own": [7, 13], "manag": [7, 8, 17, 18], "cuda": [7, 12, 13, 14, 19], "get_bitmask_shap": [7, 8], "bitmask_dtyp": [7, 8], "themselv": 7, "reason": 7, "why": 7, "uint32": 7, "old": 7, "version": [7, 18], "pytorch": 7, "apply_token_bitmask_inplac": [7, 8, 12, 13, 14], "indic": 7, "place": 7, "01": 7, "bitwis": 7, "compress": 7, "inf": 7, "bitmask_s": 7, "respect": 7, "j": [7, 15], "get_bitmask_valu": 7, "th": 7, "bit": 7, "row": 7, "addit": 7, "dimens": 7, "exist": 7, "real": 7, "min": 7, "which": [7, 13, 17], "request": [7, 12, 13, 14], "unstructur": 7, "mix": 7, "skip": [7, 18], "batch_id": 7, "As": 7, "long": 7, "valid": [7, 9, 12, 13, 14, 18], "perform": 7, "devic": [7, 12, 13, 14, 19], "both": 7, "gpu": [7, 12, 13, 14, 18], "launch": 7, "kernel": [7, 13], "implement": [7, 13, 15], "prefer": 7, "practic": 7, "usual": 7, "copi": 7, "uniqu": 7, "reset_token_bitmask": [7, 8], "full": 7, "dtype": 7, "schema_": [8, 10], "get_max_recursion_depth": [8, 9, 17], "set_max_recursion_depth": [8, 9, 17], "max_recursion_depth": [8, 9, 17], "share": 9, "per": [9, 13, 17], "order": 9, "via": [9, 13, 18], "xgrammar_max_recursion_depth": 9, "environ": [9, 12, 13, 14, 18], "variabl": [9, 11], "integ": [9, 14], "1000000": 9, "10000": [9, 17], "safe": [9, 13], "temp_depth": 9, "temporarili": 9, "recursion_depth": 9, "1000": 9, "restor": 9, "script": 11, "run_coverag": 11, "sh": 11, "offer": 11, "wai": [11, 13, 19], "librari": [11, 12, 13, 14, 15, 19], "cmake": [11, 18], "xgrammar_enable_coverag": 11, "ON": 11, "configur": [11, 13, 18], "report": [11, 19], "coverage_report": 11, "modifi": 11, "besid": [12, 15], "flexibl": [12, 16, 19], "go": [12, 13, 14], "over": [12, 13, 14], "how": [12, 13, 14, 19], "achiev": [12, 14], "avail": [12, 13, 14], "pip": [12, 13, 14, 18], "recommend": [12, 13, 14, 18], "isol": [12, 13, 14, 18], "conda": [12, 13, 14, 18], "virtual": [12, 13, 14], "section": [12, 13, 14], "ensur": [12, 14, 18], "code": [12, 13, 14, 15, 17], "snippet": [12, 13, 14], "below": [12, 13, 14, 15], "runnabl": [12, 13, 14], "simul": [12, 13, 14], "import": [12, 13, 14, 17, 18, 19], "tutori": [12, 13, 14], "xgr": [12, 14, 19], "numpi": [12, 13, 14], "np": [12, 13, 14], "autotoken": [12, 13, 14, 19], "autoconfig": [12, 13, 14, 19], "extract": [12, 14], "With": [12, 13, 14], "instanti": [12, 13, 14, 19], "choic": [12, 13, 14], "model_id": [12, 13, 14], "1b": [12, 13, 14, 19], "from_pretrain": [12, 13, 14, 19], "full_vocab_s": [12, 13, 14], "ebnf_grammar_str": 12, "expr": 12, "term": 12, "num": 12, "9": 12, "main": [12, 13, 14], "interact": [12, 13, 14], "token_bitmask": [12, 13, 14], "singl": [12, 13, 14], "regress": [12, 14], "integr": [12, 14, 15], "infer": [12, 14], "sampl": [12, 13, 14], "respons": [12, 13, 14], "sim_sampled_respons": [12, 13, 14], "16": 12, "end_of_text": [12, 13, 14], "sim_sampled_token_id": [12, 13, 14], "add_special_token": [12, 13, 14], "loop": [12, 13, 14], "iter": [12, 13, 14], "sim_token_id": [12, 13, 14], "enumer": [12, 13, 14], "randn": [12, 13, 14], "invalid": [12, 13, 14], "prob": [12, 13, 14], "softmax": [12, 13, 14], "dim": [12, 13, 14], "next_token_id": [12, 13, 14], "random": [12, 13, 14], "its": [12, 13, 14], "assert": [12, 13, 14], "inde": [12, 13, 14], "sinc": [12, 13, 14], "readi": [12, 13, 14, 15], "easili": [12, 14], "logitsprocessor": [12, 14, 19], "mainli": [12, 14], "aim": [12, 14], "access": [12, 14, 18], "extra": [12, 14, 18], "overhead": [12, 13, 14, 16], "automodelforcausallm": [12, 14, 19], "Or": [12, 14, 19], "model_nam": [12, 14, 19], "torch_dtyp": [12, 14, 19], "float32": [12, 14, 19], "device_map": [12, 14, 19], "messag": [12, 14, 19], "role": [12, 14, 19], "system": [12, 14, 19], "content": [12, 14, 19], "assist": [12, 14, 19], "yourself": [12, 14, 19], "briefli": [12, 19], "apply_chat_templ": [12, 14, 19], "add_generation_prompt": [12, 14, 19], "model_input": [12, 14, 19], "return_tensor": [12, 14, 19], "pt": [12, 14, 19], "grammar_compil": [12, 14, 19], "json_grammar_ebnf_str": 12, "basic_arrai": 12, "basic_object": 12, "basic_ani": 12, "basic_numb": 12, "basic_str": 12, "basic_boolean": 12, "basic_nul": 12, "basic_integ": 12, "ee": 12, "basic_string_1": 12, "x00": 12, "x1f": 12, "escap": 12, "bfnrt": 12, "u": 12, "fa": 12, "f0": 12, "null": 12, "w": 12, "n": [12, 18], "t": 12, "final": [12, 13, 14], "xgr_logits_processor": [12, 14, 19], "contrib": [12, 14, 19], "generated_id": [12, 14, 19], "max_new_token": [12, 14, 19], "512": [12, 14, 19], "logits_processor": [12, 14, 19], "input_id": [12, 14, 19], "skip_special_token": [12, 14, 19], "kei": 13, "compon": 13, "lai": 13, "concept": 13, "demonstr": 13, "encapsul": 13, "conveni": 13, "former": 13, "being": 13, "therefor": 13, "persist": 13, "behavior": 13, "multithread": 13, "enable_cach": 13, "everi": 13, "thing": 13, "seen": 13, "up": [13, 18], "rather": 13, "pre": [13, 18], "essenti": [13, 18], "illeg": 13, "neg": 13, "infin": 13, "never": 13, "prepar": 13, "assum": 13, "work": 13, "exact": 13, "sai": 13, "simplic": 13, "just": 13, "length": 13, "But": 13, "easi": 13, "b": 13, "loop_it": 13, "paralleliz": 13, "estim": 13, "our": [13, 19], "One": 14, "adher": 14, "pick": 14, "person": 14, "ag": 14, "person_schema": 14, "titl": 14, "field": 14, "lightweight": 15, "c": [15, 18], "platform": 15, "typescript": 15, "simpli": 15, "refer": 15, "take": 15, "high": 15, "view": 15, "design": 15, "webllm": 15, "emscripten": 15, "webassembli": 15, "npm": 15, "mlc": [15, 18], "ai": [15, 18], "open": [16, 19], "solut": 16, "portabl": 16, "mission": 16, "bring": 16, "zero": 16, "everywher": 16, "mechan": 17, "crash": 17, "automata": 17, "parser": 17, "involv": 17, "veri": 17, "deep": 17, "caus": 17, "stack": 17, "overflow": 17, "block": 17, "grow": 17, "too": 17, "larg": 17, "lru": 17, "algorithm": 17, "evict": 17, "least": 17, "recent": 17, "develop": 18, "nightli": 18, "wheel": 18, "whenev": 18, "highli": 18, "miss": 18, "incompat": 18, "conflict": 18, "activ": 18, "verifi": 18, "path": 18, "env": 18, "lib": 18, "11": 18, "site": 18, "nvidia": 18, "nvrtc": 18, "cu12": 18, "modif": 18, "obtain": 18, "satisfi": 18, "18": 18, "git": 18, "apt": 18, "fresh": 18, "remov": 18, "venv": 18, "forg": 18, "ninja": 18, "enter": 18, "seper": 18, "bin": 18, "workflow": 18, "download": 18, "clone": 18, "commit": 18, "hook": 18, "contribut": 18, "successfulli": 18, "4": 18, "test": 18, "gate": 18, "cli": 18, "login": 18, "your_hf_token": 18, "pytest": 18, "subset": 18, "hf_token_requir": 18, "easiest": 19, "document": 19, "json_schema_str": 19, "hf": 19, "problem": 19, "ask": 19, "question": 19, "repo": 19}, "objects": {"xgrammar": [[1, 0, 1, "", "CompiledGrammar"], [2, 0, 1, "", "Grammar"], [3, 0, 1, "", "GrammarCompiler"], [4, 0, 1, "", "GrammarMatcher"], [10, 0, 1, "", "StructuralTagItem"], [5, 0, 1, "", "TokenizerInfo"], [6, 0, 1, "", "VocabType"], [7, 4, 1, "", "allocate_token_bitmask"], [7, 4, 1, "", "apply_token_bitmask_inplace"], [7, 5, 1, "", "bitmask_dtype"], [7, 4, 1, "", "get_bitmask_shape"], [9, 4, 1, "", "get_max_recursion_depth"], [9, 4, 1, "", "max_recursion_depth"], [7, 4, 1, "", "reset_token_bitmask"], [9, 4, 1, "", "set_max_recursion_depth"]], "xgrammar.CompiledGrammar": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "grammar"], [1, 2, 1, "", "memory_size_bytes"], [1, 2, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "builtin_json_grammar"], [2, 1, 1, "", "concat"], [2, 1, 1, "", "from_ebnf"], [2, 1, 1, "", "from_json_schema"], [2, 1, 1, "", "from_regex"], [2, 1, 1, "", "from_structural_tag"], [2, 1, 1, "", "union"]], "xgrammar.GrammarCompiler": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "cache_limit_bytes"], [3, 1, 1, "", "clear_cache"], [3, 1, 1, "", "compile_builtin_json_grammar"], [3, 1, 1, "", "compile_grammar"], [3, 1, 1, "", "compile_json_schema"], [3, 1, 1, "", "compile_regex"], [3, 1, 1, "", "compile_structural_tag"], [3, 1, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "accept_string"], [4, 1, 1, "", "accept_token"], [4, 1, 1, "", "fill_next_token_bitmask"], [4, 1, 1, "", "find_jump_forward_string"], [4, 1, 1, "", "is_terminated"], [4, 2, 1, "", "max_rollback_tokens"], [4, 1, 1, "", "reset"], [4, 1, 1, "", "rollback"], [4, 2, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[10, 3, 1, "", "begin"], [10, 3, 1, "", "end"], [10, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[5, 1, 1, "", "__init__"], [5, 2, 1, "", "add_prefix_space"], [5, 2, 1, "", "decoded_vocab"], [5, 1, 1, "", "dump_metadata"], [5, 1, 1, "", "from_huggingface"], [5, 1, 1, "", "from_vocab_and_metadata"], [5, 2, 1, "", "prepend_space_in_tokenization"], [5, 2, 1, "", "special_token_ids"], [5, 2, 1, "", "stop_token_ids"], [5, 2, 1, "", "vocab_size"], [5, 2, 1, "", "vocab_type"]], "xgrammar.VocabType": [[6, 3, 1, "", "BYTE_FALLBACK"], [6, 3, 1, "", "BYTE_LEVEL"], [6, 3, 1, "", "RAW"], [6, 1, 1, "", "__init__"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"xgrammar": [0, 1, 2, 3, 4, 5, 6, 8, 10, 12, 13, 14, 16], "document": 0, "depend": [0, 18], "build": [0, 18], "view": 0, "compiledgrammar": [1, 13], "grammar": [2, 19], "grammarcompil": [3, 13], "grammarmatch": [4, 13], "tokenizerinfo": [5, 13], "vocabtyp": 6, "bitmask": [7, 13], "oper": 7, "recurs": [9, 17], "depth": 9, "manag": 9, "structuraltagitem": 10, "code": 11, "coverag": 11, "test": 11, "ebnf": 12, "guid": 12, "gener": [12, 13, 14, 19], "instal": [12, 13, 14, 18], "llm": [12, 13, 14, 15], "engin": [12, 13, 14], "try": [12, 14], "out": [12, 14], "via": [12, 14], "hf": [12, 14], "transform": [12, 14], "integr": 13, "high": 13, "level": 13, "flow": 13, "xgr": 13, "logit": 13, "auto": 13, "regress": 13, "structur": 13, "batch": 13, "infer": 13, "json": 14, "portabl": 15, "api": 15, "javascript": 15, "sdk": 15, "web": 15, "base": 15, "welcom": 16, "quick": [16, 19], "start": [16, 19], "runtim": 17, "safeguard": 17, "limit": 17, "cach": 17, "size": 17, "tabl": 18, "content": 18, "option": 18, "1": 18, "prebuilt": 18, "packag": 18, "cuda": 18, "2": 18, "from": 18, "sourc": 18, "exampl": 19, "prepar": 19, "compil": 19, "what": 19, "do": 19, "next": 19}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"XGrammar Documentation": [[0, "xgrammar-documentation"]], "Dependencies": [[0, "dependencies"]], "Build the Documentation": [[0, "build-the-documentation"]], "View the Documentation": [[0, "view-the-documentation"]], "xgrammar.CompiledGrammar": [[1, "xgrammar-compiledgrammar"]], "xgrammar.Grammar": [[2, "xgrammar-grammar"]], "xgrammar.GrammarCompiler": [[3, "xgrammar-grammarcompiler"]], "xgrammar.GrammarMatcher": [[4, "xgrammar-grammarmatcher"]], "xgrammar.TokenizerInfo": [[5, "xgrammar-tokenizerinfo"]], "xgrammar.VocabType": [[6, "xgrammar-vocabtype"]], "Bitmask Operations": [[7, "bitmask-operations"]], "xgrammar": [[8, "xgrammar"]], "Recursion Depth Management": [[9, "recursion-depth-management"]], "xgrammar.StructuralTagItem": [[10, "xgrammar-structuraltagitem"]], "Code Coverage Test": [[11, "code-coverage-test"]], "EBNF-Guided Generation": [[12, "ebnf-guided-generation"]], "Install XGrammar": [[12, "install-xgrammar"], [13, "install-xgrammar"], [14, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[12, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[12, "try-out-via-hf-transformers"], [14, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[13, "integration-with-llm-engine"]], "High-Level Flow": [[13, "high-level-flow"]], "xgr.TokenizerInfo": [[13, "xgr-tokenizerinfo"]], "xgr.GrammarCompiler": [[13, "xgr-grammarcompiler"]], "xgr.CompiledGrammar": [[13, "xgr-compiledgrammar"]], "xgr.GrammarMatcher": [[13, "xgr-grammarmatcher"]], "Bitmasking Logits in Auto-regressive Generation": [[13, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[13, "structured-generation-for-batched-inference"]], "JSON Generation": [[14, "json-generation"]], "JSON Generation in LLM Engines": [[14, "json-generation-in-llm-engines"]], "Portable API": [[15, "portable-api"]], "Javascript SDK for Web-based LLMs": [[15, "javascript-sdk-for-web-based-llms"]], "\ud83d\udc4b Welcome to XGrammar": [[16, "welcome-to-xgrammar"]], "Quick Start": [[16, "quick-start"], [19, "quick-start"]], "Runtime Safeguards": [[17, "runtime-safeguards"]], "Recursion Limit": [[17, "recursion-limit"]], "Cache Size Limit": [[17, "cache-size-limit"]], "Installation": [[18, "installation"]], "Table of Contents": [[18, "table-of-contents"]], "Option 1. Prebuilt Package": [[18, "option-1-prebuilt-package"]], "CUDA Dependency": [[18, "cuda-dependency"]], "Option 2. Build from Source": [[18, "option-2-build-from-source"]], "Example": [[19, "example"]], "Preparation": [[19, "preparation"]], "Compile Grammar": [[19, "compile-grammar"]], "Generate with grammar": [[19, "generate-with-grammar"]], "What to Do Next": [[19, "what-to-do-next"]]}, "indexentries": {"compiledgrammar (class in xgrammar)": [[1, "xgrammar.CompiledGrammar"]], "__init__() (xgrammar.compiledgrammar method)": [[1, "xgrammar.CompiledGrammar.__init__"]], "grammar (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.memory_size_bytes"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.tokenizer_info"]], "grammar (class in xgrammar)": [[2, "xgrammar.Grammar"]], "__init__() (xgrammar.grammar method)": [[2, "xgrammar.Grammar.__init__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.concat"]], "from_ebnf() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_structural_tag"]], "union() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[3, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[3, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_grammar() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[4, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.stop_token_ids"]], "tokenizerinfo (class in xgrammar)": [[5, "xgrammar.TokenizerInfo"]], "__init__() (xgrammar.tokenizerinfo method)": [[5, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.decoded_vocab"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[5, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[5, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[5, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[5, "xgrammar.TokenizerInfo.vocab_type"]], "byte_fallback (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.BYTE_FALLBACK"]], "byte_level (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.BYTE_LEVEL"]], "raw (xgrammar.vocabtype attribute)": [[6, "xgrammar.VocabType.RAW"]], "vocabtype (class in xgrammar)": [[6, "xgrammar.VocabType"]], "__init__() (xgrammar.vocabtype method)": [[6, "xgrammar.VocabType.__init__"]], "allocate_token_bitmask() (in module xgrammar)": [[7, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[7, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[7, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[7, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[7, "xgrammar.reset_token_bitmask"]], "get_max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.get_max_recursion_depth"]], "max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.max_recursion_depth"]], "set_max_recursion_depth() (in module xgrammar)": [[9, "xgrammar.set_max_recursion_depth"]], "structuraltagitem (class in xgrammar)": [[10, "xgrammar.StructuralTagItem"]], "begin (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.begin"]], "end (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.end"]], "schema_ (xgrammar.structuraltagitem attribute)": [[10, "xgrammar.StructuralTagItem.schema_"]]}})