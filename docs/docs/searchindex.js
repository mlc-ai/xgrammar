Search.setIndex({"docnames": ["README", "api/python/_generated/xgrammar.CompiledGrammar", "api/python/_generated/xgrammar.Grammar", "api/python/_generated/xgrammar.GrammarCompiler", "api/python/_generated/xgrammar.GrammarMatcher", "api/python/_generated/xgrammar.StructuralTagItem", "api/python/_generated/xgrammar.TokenizerInfo", "api/python/_generated/xgrammar.VocabType", "api/python/_generated/xgrammar.allocate_token_bitmask", "api/python/_generated/xgrammar.apply_token_bitmask_inplace", "api/python/_generated/xgrammar.bitmask_dtype", "api/python/_generated/xgrammar.get_bitmask_shape", "api/python/_generated/xgrammar.reset_token_bitmask", "api/python/index", "how_to/ebnf_guided_generation", "how_to/engine_integration", "how_to/json_generation", "how_to/portable_api", "index", "misc/runtime_safeguards", "start/install", "start/quick_start"], "filenames": ["README.md", "api/python/_generated/xgrammar.CompiledGrammar.rst", "api/python/_generated/xgrammar.Grammar.rst", "api/python/_generated/xgrammar.GrammarCompiler.rst", "api/python/_generated/xgrammar.GrammarMatcher.rst", "api/python/_generated/xgrammar.StructuralTagItem.rst", "api/python/_generated/xgrammar.TokenizerInfo.rst", "api/python/_generated/xgrammar.VocabType.rst", "api/python/_generated/xgrammar.allocate_token_bitmask.rst", "api/python/_generated/xgrammar.apply_token_bitmask_inplace.rst", "api/python/_generated/xgrammar.bitmask_dtype.rst", "api/python/_generated/xgrammar.get_bitmask_shape.rst", "api/python/_generated/xgrammar.reset_token_bitmask.rst", "api/python/index.rst", "how_to/ebnf_guided_generation.rst", "how_to/engine_integration.rst", "how_to/json_generation.rst", "how_to/portable_api.rst", "index.rst", "misc/runtime_safeguards.md", "start/install.rst", "start/quick_start.rst"], "titles": ["XGrammar Documentation", "xgrammar.CompiledGrammar", "xgrammar.Grammar", "xgrammar.GrammarCompiler", "xgrammar.GrammarMatcher", "xgrammar.StructuralTagItem", "xgrammar.TokenizerInfo", "xgrammar.VocabType", "xgrammar.allocate_token_bitmask", "xgrammar.apply_token_bitmask_inplace", "xgrammar.bitmask_dtype", "xgrammar.get_bitmask_shape", "xgrammar.reset_token_bitmask", "xgrammar", "EBNF-Guided Generation", "Integration with LLM Engine", "JSON Generation", "Portable API", "\ud83d\udc4b Welcome to XGrammar", "Runtime Safeguards", "Installation", "Quick Start"], "terms": {"The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 15, 17, 18, 19, 21], "wa": [0, 5], "built": [0, 15, 16, 20, 21], "upon": 0, "sphinx": 0, "run": [0, 5, 16, 17, 20, 21], "follow": [0, 2, 3, 4, 14, 15, 20, 21], "command": [0, 20], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 9, 14, 15, 16, 17, 18, 20, 21], "directori": 0, "instal": [0, 17, 21], "first": [0, 2, 14, 15, 16], "pip3": 0, "r": [0, 14], "requir": [0, 4, 5, 16, 20], "txt": 0, "Then": [0, 2, 14, 15, 16, 20], "you": [0, 5, 6, 14, 15, 16, 19, 20, 21], "can": [0, 1, 2, 4, 5, 6, 8, 9, 14, 15, 16, 17, 19, 20, 21], "make": [0, 2, 5, 14, 15, 16, 20], "html": [0, 2], "start": [0, 7, 20], "simpl": 0, "http": [0, 2, 7, 20], "server": [0, 19], "cd": [0, 20], "_build": 0, "python3": [0, 20], "m": [0, 20], "your": [0, 5, 14, 15, 16, 20], "browser": [0, 17], "localhost": 0, "8000": 0, "port": 0, "custom": [0, 5, 14, 16, 21], "append": 0, "p": [0, 14, 15, 16], "port_numb": 0, "python": [0, 5, 17, 20, 21], "abov": [0, 15], "mai": [0, 2, 3, 5, 6, 14, 16, 19, 20], "also": [0, 4, 6, 14, 15, 16, 17, 19, 20], "need": [0, 2, 4, 5, 6, 8, 9, 15, 20], "bind": [0, 20], "0": [0, 4, 9, 14, 15, 16, 21], "machin": 0, "like": [0, 2], "mac": 0, "class": [1, 2, 3, 4, 5, 6, 7, 16, 19], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 18], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21], "primari": 1, "object": [1, 2, 5, 16], "store": [1, 3, 5, 19], "compil": [1, 3, 14, 15, 16, 17, 19, 20], "grammar": [1, 3, 4, 5, 6, 14, 15, 16, 19], "A": [1, 5, 9, 14, 20], "us": [1, 2, 3, 4, 5, 6, 7, 8, 9, 14, 15, 16, 17, 18, 19, 20, 21], "construct": [1, 2, 6, 8, 14, 15, 16, 21], "grammarmatch": [1, 2, 14, 16, 19], "gener": [1, 2, 3, 4, 5, 6, 9, 18], "token": [1, 2, 3, 4, 6, 7, 8, 9, 14, 15, 16, 20, 21], "mask": [1, 2, 4, 6, 9, 12, 14, 15, 16], "effici": [1, 14, 15, 16], "do": [1, 5, 8, 9, 20], "directli": [1, 5, 20], "instead": [1, 5, 6, 8], "grammarcompil": [1, 14, 16, 19, 21], "__init__": [1, 2, 3, 4, 5, 6, 7, 20], "method": [1, 2, 3, 4, 5, 6, 9], "attribut": [1, 3, 4, 5, 6, 7], "properti": [1, 2, 3, 4, 5, 6, 16], "origin": [1, 5, 6, 7], "memory_size_byt": 1, "int": [1, 2, 3, 4, 5, 6, 8, 9, 11, 16], "approxim": [1, 3], "memori": [1, 3, 8], "usag": [1, 3, 5, 21], "byte": [1, 3, 4, 5, 6, 7], "tokenizer_info": [1, 3, 6, 14, 15, 16, 19, 21], "tokenizerinfo": [1, 3, 7, 14, 16, 21], "info": [1, 3, 6, 14, 15, 16], "associ": [1, 3], "repres": [2, 5, 14], "later": [2, 15], "guid": [2, 3, 4, 6, 15, 21], "support": [2, 6, 7, 8, 15, 20], "context": [2, 4, 5, 19], "free": 2, "cfg": 2, "ebnf": [2, 15, 21], "extend": 2, "backu": 2, "naur": 2, "form": [2, 5, 7], "format": [2, 3, 6, 7, 14], "There": [2, 15], "ar": [2, 5, 6, 7, 9, 14, 15, 16, 20, 21], "mani": [2, 17], "specif": [2, 4, 14, 20, 21], "literatur": 2, "we": [2, 8, 9, 14, 15, 16, 17, 20], "gbnf": [2, 14, 21], "ggml": [2, 14], "bnf": [2, 14], "github": [2, 7, 18, 20, 21], "com": [2, 7, 20], "ggerganov": 2, "llama": [2, 6, 7, 14, 15, 16, 21], "cpp": 2, "blob": [2, 7], "master": 2, "readm": 2, "md": [2, 5], "when": [2, 3, 5, 6, 9, 15, 20], "print": [2, 4, 14, 16, 20, 21], "convert": [2, 6], "static": [2, 6], "builtin_json_grammar": 2, "get": [2, 3, 4, 5, 9, 14, 15, 16, 19, 20], "standard": [2, 3, 20], "json": [2, 3, 5, 6, 14, 15, 21], "compat": 2, "offici": 2, "www": 2, "org": 2, "en": 2, "return": [2, 3, 4, 5, 6, 8, 11], "type": [2, 3, 4, 5, 6, 7, 8, 16], "concat": 2, "creat": [2, 5, 20], "match": [2, 4], "concaten": 2, "list": [2, 3, 4, 6, 9, 14, 15, 16], "That": [2, 5], "equival": [2, 3], "oper": [2, 4, 9, 19], "paramet": [2, 3, 4, 5, 6, 8, 9], "from_ebnf": 2, "ebnf_str": [2, 21], "str": [2, 3, 4, 5, 6, 16], "root_rule_nam": 2, "root": [2, 14], "from": [2, 3, 4, 5, 6, 14, 15, 16, 19, 21], "string": [2, 3, 4, 5, 6, 14, 16, 21], "should": [2, 4, 5, 6, 9, 15, 20], "default": [2, 3, 4, 5, 6, 9, 15, 19], "name": [2, 5, 7, 15, 16], "rule": 2, "rais": [2, 5, 19], "runtimeerror": [2, 4, 19], "regex": [2, 3], "pattern": 2, "fail": [2, 5], "detail": [2, 3, 5, 6, 21], "about": [2, 4], "pars": [2, 5, 19], "error": [2, 5], "from_json_schema": 2, "schema": [2, 3, 5, 14, 16, 21], "union": [2, 3, 4, 5, 6], "basemodel": [2, 3, 5, 16], "dict": [2, 3, 5], "ani": [2, 3, 4, 5, 7, 21], "any_whitespac": [2, 3], "bool": [2, 3, 4, 5, 6], "true": [2, 3, 4, 5, 14, 15, 16, 21], "indent": [2, 3, 5], "option": [2, 3, 4, 5, 6, 9, 16], "none": [2, 3, 4, 5, 6, 7, 9, 12], "separ": [2, 3], "tupl": [2, 3, 5, 11], "strict_mod": [2, 3], "print_converted_ebnf": 2, "fals": [2, 3, 4, 5, 6, 14, 15, 16, 21], "pydant": [2, 3, 5, 16], "model": [2, 3, 5, 6, 7, 14, 15, 16, 20, 21], "specifi": [2, 3, 4, 5, 6, 9, 14, 16], "It": [2, 3, 4, 6, 9, 14, 15, 16, 17, 19], "allow": [2, 3, 4, 5, 9], "whitespac": 2, "If": [2, 3, 4, 5, 6, 9, 19], "user": [2, 4, 6, 8, 9, 14, 16, 21], "want": [2, 5, 20], "set": [2, 3, 5, 6, 9, 15, 19, 20], "mean": [2, 4, 9, 19], "valu": [2, 3, 4, 5, 7], "convent": [2, 3], "dump": [2, 3, 5, 6, 16], "intern": [2, 4], "whether": [2, 3, 4, 5, 6], "ignor": [2, 5], "number": [2, 3, 4], "space": [2, 3, 6], "output": [2, 3, 4, 5, 14, 16], "one": [2, 3, 4, 5, 16], "line": [2, 3, 20], "note": [2, 3, 5, 6, 9, 14, 15, 16], "forc": [2, 5], "llm": [2, 3, 4, 6, 19], "strictli": [2, 5], "howev": 2, "some": [2, 5, 6, 15], "tend": 2, "In": [2, 3, 4, 6, 9, 14, 15, 16], "case": [2, 4, 6, 15, 21], "degrad": 2, "qualiti": 2, "see": [2, 3, 5, 6, 14, 15, 16, 17, 20, 21], "sgl": 2, "project": [2, 18], "sglang": 2, "issu": [2, 21], "2216": 2, "issuecom": 2, "2516192009": 2, "more": [2, 3, 5, 6, 14, 17, 21], "two": [2, 3, 15, 16], "comma": [2, 3], "colon": [2, 3], "exampl": [2, 3, 16, 18], "otherwis": [2, 3, 4, 5, 15], "strict": [2, 3, 5], "mode": [2, 3, 5], "item": [2, 3, 5, 19], "unevaluatedproperti": [2, 3], "unevaluateditem": [2, 3], "help": [2, 3, 4, 14, 16, 21], "accur": [2, 3], "For": [2, 15, 16, 17], "debug": [2, 4], "purpos": 2, "from_regex": 2, "regex_str": 2, "regular": 2, "express": 2, "from_structural_tag": [2, 3, 5], "tag": [2, 3, 5], "structuraltagitem": [2, 3], "trigger": [2, 3], "structur": [2, 3, 5, 9, 14, 16, 18, 21], "handl": [2, 4, 5, 6], "dispatch": 2, "differ": [2, 15], "base": [2, 15, 20], "initi": [2, 4, 5], "until": 2, "encount": [2, 5], "correspond": 2, "end": [2, 5, 14, 16], "next": [2, 4, 8, 14, 15, 16], "especi": [2, 9], "function": [2, 4, 5, 9], "call": [2, 5, 9, 15], "where": [2, 4, 5, 9], "func_nam": 2, "arg1": 2, "arg2": 2, "consist": 2, "three": [2, 7, 16], "part": 2, "begin": [2, 5], "accord": [2, 15], "an": [2, 4, 5, 8, 14, 15, 16, 19, 20, 21], "describ": 2, "abl": 2, "multipl": [2, 3, 6], "pass": [2, 5, 6, 15], "them": [2, 4, 5, 6, 9, 15], "prefix": 2, "provid": [2, 4, 5, 6, 9, 14, 16, 17, 19, 20, 21], "constrain": 2, "same": [2, 3, 6, 9, 15], "must": [2, 4], "e": [2, 5, 6, 7, 20], "g": [2, 5, 6, 7, 20], "get_weath": 2, "citi": 2, "beij": 2, "corrrespond": 2, "automat": [2, 5, 6], "determin": [2, 6], "all": [2, 3, 4, 5, 9, 14, 15, 16, 20], "group": 2, "togeth": 2, "sure": [2, 14, 15, 16, 20], "anoth": 2, "ambigu": 2, "To": [2, 5, 15, 17, 20, 21], "each": [2, 14, 15, 16], "1": [2, 3, 4, 7, 9, 14, 15, 16, 19], "have": [2, 5, 8, 14, 15, 16, 20], "fill_next_token_bitmask": [2, 4, 9, 14, 15, 16, 19], "enforc": [2, 5, 14, 15, 16], "logit": [2, 9, 14, 16], "benefit": 2, "boundari": [2, 7], "between": [2, 6], "doe": [2, 4, 5], "worri": 2, "schema1": 2, "schema2": 2, "arg3": 2, "float": 2, "arg4": 2, "f": 2, "max_thread": [3, 14, 15, 16], "8": [3, 14, 15, 16], "cache_en": 3, "cache_limit_byt": [3, 19], "certain": 3, "compiledgrammar": [3, 4, 16], "parallel": 3, "thread": [3, 15], "ha": [3, 4, 6, 15, 19, 20], "cach": [3, 5, 15], "result": [3, 5, 15], "avoid": [3, 19, 20], "time": [3, 4], "maximum": [3, 4, 19], "enabl": [3, 14, 15, 16, 20, 21], "unit": 3, "actual": [3, 14, 15, 16], "slightli": 3, "exce": [3, 4, 19], "limit": 3, "clear_cach": 3, "clear": 3, "compile_builtin_json_grammar": [3, 15, 16, 21], "compiled_grammar": [3, 4, 14, 15, 16, 21], "compile_json_schema": [3, 16, 21], "compile_regex": 3, "compile_structural_tag": 3, "get_cache_size_byt": 3, "override_stop_token": 4, "terminate_without_stop_token": 4, "max_rollback_token": 4, "core": [4, 5, 17, 20], "maintain": [4, 14, 15, 16], "state": [4, 14, 15, 16], "matcher": [4, 14, 15, 16, 19], "accept": [4, 14, 15, 16], "bitmask": [4, 8, 9, 11, 12, 14, 16, 20], "predict": [4, 8], "so": [4, 9, 14, 15, 16], "Its": 4, "reset": [4, 12, 14, 15, 16], "roll": 4, "back": [4, 6], "util": 4, "jump": 4, "forward": 4, "decod": [4, 6, 14, 16, 21], "after": [4, 5, 9, 15, 21], "whole": 4, "stop": [4, 6, 14, 15, 16], "onli": [4, 5], "termin": [4, 14, 15, 16], "cannot": [4, 5], "new": [4, 5, 21], "finish": 4, "under": 4, "hood": 4, "pushdown": [4, 19], "automaton": 4, "backtrack": 4, "optim": [4, 9], "overrid": [4, 5], "ones": [4, 20], "without": [4, 7], "rollback": 4, "specul": 4, "accept_str": [4, 19], "input_str": 4, "debug_print": 4, "updat": [4, 5, 14, 15, 16], "consid": [4, 6], "step": [4, 14, 15, 16, 20], "complement": 4, "accept_token": [4, 14, 15, 16, 19], "alwai": [4, 6, 14, 15, 16], "inform": [4, 6, 15], "throw": 4, "recurs": [4, 20], "depth": [4, 5, 19], "exceed": 4, "token_id": [4, 19], "try": [4, 5, 21], "id": [4, 6], "out": [4, 15, 17, 18, 20, 21], "rang": [4, 9, 14, 15, 16], "special": [4, 6], "captur": 4, "tensor": [4, 8, 9, 12, 14, 15, 16], "index": 4, "fill": [4, 5, 9, 15], "input": [4, 5, 6, 14, 16, 21], "allocate_token_bitmask": [4, 9, 14, 15, 16], "cpu": [4, 8, 9, 14, 15, 16, 21], "chang": [4, 5], "torch": [4, 8, 9, 10, 14, 15, 16, 21], "batch": [4, 8, 9, 14, 16], "need_appli": 4, "appli": [4, 9, 14, 15, 16, 20], "alreadi": [4, 5], "find_jump_forward_str": [4, 19], "find": 4, "longest": 4, "certainli": 4, "conform": [4, 5], "current": [4, 14, 15, 19], "becom": 4, "jump_forward_str": 4, "is_termin": [4, 14, 15, 16], "check": [4, 17, 18, 21], "num_token": 4, "previou": 4, "sever": [4, 15], "nor": 4, "stop_token_id": [4, 6], "detect": [4, 6, 9], "vocabulari": [4, 6, 7, 8, 9, 15], "schema_": 5, "data": 5, "valid": [5, 9, 14, 15, 16, 20], "keyword": 5, "argument": 5, "validationerror": 5, "pydantic_cor": 5, "self": 5, "explicitli": 5, "posit": 5, "field": [5, 16], "copi": [5, 9], "includ": [5, 6, 7, 15, 17, 19, 20], "abstractsetintstr": 5, "mappingintstrani": 5, "exclud": 5, "deep": [5, 19], "warn": 5, "deprec": [5, 6], "now": [5, 6, 14, 15, 16], "model_copi": 5, "test": [5, 20], "skip": [5, 9, 20], "lint": 5, "model_dump": 5, "round_trip": 5, "model_valid": 5, "map": 5, "which": [5, 9, 15, 19], "dictionari": 5, "pair": 5, "model_config": 5, "classvar": 5, "configdict": 5, "configur": [5, 15, 20], "config": [5, 6, 14, 15, 16, 21], "classmethod": 5, "model_construct": 5, "_fields_set": 5, "instanc": 5, "__dict__": 5, "__pydantic_fields_set__": 5, "trust": 5, "pre": [5, 15, 20], "respect": [5, 9], "other": [5, 6, 15, 21], "perform": [5, 9], "extra": [5, 14, 16, 20], "ad": [5, 6], "": [5, 6, 15, 16, 17], "__pydantic_extra__": 5, "becaus": [5, 6], "forbid": 5, "thei": [5, 6, 15], "were": 5, "dure": 5, "instanti": [5, 14, 15, 16, 21], "model_fields_set": 5, "collect": 5, "abc": 5, "abstract": 5, "document": [5, 21], "concept": [5, 15], "serial": 5, "underli": 5, "might": 5, "unexpect": 5, "side": 5, "effect": 5, "anyth": 5, "top": 5, "functool": 5, "cached_properti": 5, "add": 5, "befor": [5, 6, 9], "liter": 5, "incex": 5, "by_alia": 5, "exclude_unset": 5, "exclude_default": 5, "exclude_non": 5, "fallback": [5, 7], "callabl": 5, "serialize_as_ani": 5, "modelmodel_dump": 5, "represent": 5, "to_python": 5, "contain": [5, 6, 14, 16], "serializ": 5, "non": 5, "addit": [5, 9], "alia": 5, "kei": [5, 15], "defin": [5, 6], "been": 5, "idempot": 5, "t": [5, 14], "how": [5, 14, 15, 16, 21], "log": 5, "pydanticserializationerror": 5, "unknown": 5, "duck": 5, "behavior": [5, 15], "model_dump_json": 5, "modelmodel_dump_json": 5, "to_json": 5, "compact": 5, "alias": 5, "model_extra": 5, "model_json_schema": 5, "ref_templ": 5, "def": 5, "schema_gener": 5, "json_schema": 5, "generatejsonschema": 5, "refer": [5, 17], "templat": 5, "logic": 5, "subclass": 5, "desir": 5, "modif": [5, 20], "given": [5, 7], "model_parametrized_nam": 5, "param": 5, "comput": 5, "parametr": 5, "overridden": 5, "achiev": [5, 14, 16], "scheme": 5, "2": [5, 6, 7, 14, 15, 16, 21], "variabl": 5, "concret": 5, "would": 5, "cl": 5, "typeerror": 5, "model_post_init": 5, "entir": 5, "model_rebuild": 5, "raise_error": 5, "_parent_namespace_depth": 5, "_types_namespac": 5, "mappingnamespac": 5, "rebuild": 5, "necessari": [5, 6, 14, 15, 16], "annot": 5, "forwardref": 5, "could": [5, 6], "resolv": 5, "attempt": 5, "build": 5, "level": [5, 6, 7, 17], "parent": 5, "namespac": 5, "complet": 5, "_was_": 5, "success": 5, "obj": 5, "from_attribut": 5, "by_nam": 5, "extract": [5, 14, 16], "against": 5, "model_validate_json": 5, "json_data": 5, "bytearrai": 5, "model_validate_str": 5, "encoded_vocab": 6, "vocab_typ": 6, "vocabtyp": 6, "raw": [6, 7], "vocab_s": [6, 8, 9, 11, 14, 15, 16, 21], "add_prefix_spac": 6, "although": 6, "encod": [6, 7, 14, 15, 16], "0x1b": [6, 7], "bytefallback": 6, "\u0121": 6, "bpe": [6, 7], "phi": [6, 7], "3": [6, 7, 14, 15, 16, 20, 21], "deepseek": 6, "v2": 6, "pad": [6, 9, 14, 15, 16], "32": [6, 8, 9, 11], "larger": [6, 14, 15, 16], "than": [6, 14, 15, 16], "size": [6, 8, 9], "pleas": [6, 20], "constructor": 6, "len": [6, 14, 15, 16, 21], "auto": [6, 14, 16], "correct": 6, "prepend": 6, "text": [6, 14, 16, 21], "process": [6, 7, 19], "decoded_vocab": 6, "dump_metadata": 6, "metadata": 6, "from_huggingfac": [6, 14, 15, 16, 21], "pretrainedtokenizerbas": 6, "huggingfac": [6, 7, 20], "variou": 6, "backend": [6, 17], "fast": [6, 18], "tiktoken": [6, 7], "introduc": [6, 14, 16, 21], "misalign": 6, "here": [6, 14, 15, 16, 17], "doc": 6, "eos_token_id": 6, "manual": [6, 9], "equal": 6, "vocab": [6, 9], "diment": 6, "lm_head": 6, "most": [6, 15], "common": 6, "happen": 6, "possibli": 6, "due": [6, 14, 15, 16], "align": 6, "power": 6, "smaller": 6, "vision": 6, "molmo": 6, "72b": 6, "0924": 6, "imag": 6, "model_vocab_s": 6, "from_vocab_and_metadata": 6, "prepend_space_in_token": 6, "special_token_id": 6, "control": 6, "reserv": 6, "etc": [6, 7, 14, 16, 21], "modul": [7, 20], "qualnam": 7, "kept": 7, "kind": 7, "microsoft": 7, "small": 7, "8k": 7, "instruct": [7, 14, 15, 16, 21], "qwen": 7, "7b": 7, "chat": 7, "byte_fallback": 7, "through": 7, "convers": 7, "appl": 7, "meta": [7, 14, 15, 16, 21], "5": [7, 14], "mini": 7, "byte_level": 7, "unicod": 7, "transform": [7, 15, 21], "87be06ca77166e6a6215eee5a990ab9f07238a18": 7, "src": 7, "gpt2": 7, "tokenization_gpt2": 7, "py": [7, 20], "l38": 7, "l59": 7, "8b": 7, "arg": 7, "kwd": 7, "batch_siz": [8, 9, 11, 15], "alloc": [8, 9, 14, 15, 16], "int32": [8, 10], "shape": [8, 9, 11, 14, 15, 16], "ceil": [8, 9, 11], "who": 8, "own": [8, 15], "manag": [8, 19, 20], "cuda": [8, 14, 15, 16, 21], "get_bitmask_shap": 8, "bitmask_dtyp": 8, "themselv": 8, "reason": 8, "why": 8, "uint32": 8, "old": 8, "version": [8, 20], "pytorch": 8, "indic": 9, "place": 9, "01": 9, "bitwis": 9, "compress": 9, "inf": 9, "bitmask_s": 9, "j": [9, 17], "get_bitmask_valu": 9, "th": 9, "bit": 9, "row": 9, "dimens": 9, "exist": 9, "real": 9, "min": 9, "request": [9, 14, 15, 16], "unstructur": 9, "mix": 9, "batch_id": 9, "As": 9, "long": 9, "devic": [9, 14, 15, 16, 21], "both": 9, "gpu": [9, 14, 15, 16, 20], "launch": 9, "kernel": [9, 15], "implement": [9, 15, 17], "prefer": 9, "practic": 9, "usual": 9, "uniqu": 9, "full": 12, "besid": [14, 17], "flexibl": [14, 18, 21], "go": [14, 15, 16], "over": [14, 15, 16], "avail": [14, 15, 16], "pip": [14, 15, 16, 20], "recommend": [14, 15, 16, 20], "isol": [14, 15, 16, 20], "conda": [14, 15, 16, 20], "virtual": [14, 15, 16], "environ": [14, 15, 16, 20], "section": [14, 15, 16], "ensur": [14, 16, 20], "code": [14, 15, 16, 17, 19], "snippet": [14, 15, 16], "below": [14, 15, 16, 17], "runnabl": [14, 15, 16], "simul": [14, 15, 16], "import": [14, 15, 16, 19, 20, 21], "librari": [14, 15, 16, 17, 21], "tutori": [14, 15, 16], "xgr": [14, 16, 21], "numpi": [14, 15, 16], "np": [14, 15, 16], "autotoken": [14, 15, 16, 21], "autoconfig": [14, 15, 16, 21], "With": [14, 15, 16], "choic": [14, 15, 16], "model_id": [14, 15, 16], "1b": [14, 15, 16, 21], "from_pretrain": [14, 15, 16, 21], "full_vocab_s": [14, 15, 16], "ebnf_grammar_str": 14, "expr": 14, "term": 14, "num": 14, "9": 14, "compile_grammar": [14, 21], "main": [14, 15, 16], "interact": [14, 15, 16], "token_bitmask": [14, 15, 16], "singl": [14, 15, 16], "regress": [14, 16], "integr": [14, 16, 17], "infer": [14, 16], "sampl": [14, 15, 16], "respons": [14, 15, 16], "sim_sampled_respons": [14, 15, 16], "16": 14, "end_of_text": [14, 15, 16], "sim_sampled_token_id": [14, 15, 16], "add_special_token": [14, 15, 16], "loop": [14, 15, 16], "iter": [14, 15, 16], "sim_token_id": [14, 15, 16], "enumer": [14, 15, 16], "randn": [14, 15, 16], "invalid": [14, 15, 16], "apply_token_bitmask_inplac": [14, 15, 16], "prob": [14, 15, 16], "softmax": [14, 15, 16], "dim": [14, 15, 16], "next_token_id": [14, 15, 16], "random": [14, 15, 16], "its": [14, 15, 16], "assert": [14, 15, 16], "inde": [14, 15, 16], "sinc": [14, 15, 16], "readi": [14, 15, 16, 17], "easili": [14, 16], "logitsprocessor": [14, 16, 21], "mainli": [14, 16], "aim": [14, 16], "access": [14, 16, 20], "overhead": [14, 15, 16, 18], "automodelforcausallm": [14, 16, 21], "Or": [14, 16, 21], "model_nam": [14, 16, 21], "torch_dtyp": [14, 16, 21], "float32": [14, 16, 21], "device_map": [14, 16, 21], "messag": [14, 16, 21], "role": [14, 16, 21], "system": [14, 16, 21], "content": [14, 16, 21], "assist": [14, 16, 21], "yourself": [14, 16, 21], "briefli": [14, 21], "apply_chat_templ": [14, 16, 21], "add_generation_prompt": [14, 16, 21], "model_input": [14, 16, 21], "return_tensor": [14, 16, 21], "pt": [14, 16, 21], "grammar_compil": [14, 16, 21], "json_grammar_ebnf_str": 14, "basic_arrai": 14, "basic_object": 14, "basic_ani": 14, "basic_numb": 14, "basic_str": 14, "basic_boolean": 14, "basic_nul": 14, "basic_integ": 14, "ee": 14, "basic_string_1": 14, "x00": 14, "x1f": 14, "escap": 14, "bfnrt": 14, "u": 14, "fa": 14, "f0": 14, "null": 14, "w": 14, "n": [14, 20], "final": [14, 15, 16], "xgr_logits_processor": [14, 16, 21], "contrib": [14, 16, 21], "generated_id": [14, 16, 21], "max_new_token": [14, 16, 21], "512": [14, 16, 21], "logits_processor": [14, 16, 21], "input_id": [14, 16, 21], "skip_special_token": [14, 16, 21], "compon": 15, "lai": 15, "demonstr": 15, "via": [15, 20], "per": [15, 19], "encapsul": 15, "wai": [15, 21], "conveni": 15, "former": 15, "being": 15, "safe": 15, "therefor": 15, "persist": 15, "multithread": 15, "enable_cach": 15, "everi": 15, "thing": 15, "seen": 15, "up": [15, 20], "rather": 15, "essenti": [15, 20], "illeg": 15, "neg": 15, "infin": 15, "never": 15, "prepar": 15, "assum": 15, "work": 15, "exact": 15, "sai": 15, "simplic": 15, "just": 15, "length": 15, "But": 15, "easi": 15, "b": 15, "loop_it": 15, "paralleliz": 15, "estim": 15, "our": [15, 21], "One": 16, "adher": 16, "pick": 16, "person": 16, "ag": 16, "person_schema": 16, "titl": 16, "integ": 16, "xgrammar": [17, 19, 20, 21], "lightweight": 17, "c": [17, 20], "platform": 17, "typescript": 17, "simpli": 17, "take": 17, "high": 17, "view": 17, "design": 17, "webllm": 17, "emscripten": 17, "webassembli": 17, "npm": 17, "mlc": [17, 20], "ai": [17, 20], "open": [18, 21], "solut": 18, "portabl": 18, "mission": 18, "bring": 18, "zero": 18, "everywher": 18, "mechan": 19, "crash": 19, "automata": 19, "parser": 19, "involv": 19, "veri": 19, "caus": 19, "stack": 19, "overflow": 19, "set_max_recursion_depth": 19, "get_max_recursion_depth": 19, "10000": 19, "max_recursion_depth": 19, "block": 19, "grow": 19, "too": 19, "larg": 19, "lru": 19, "algorithm": 19, "evict": 19, "least": 19, "recent": 19, "develop": 20, "nightli": 20, "wheel": 20, "whenev": 20, "highli": 20, "miss": 20, "incompat": 20, "conflict": 20, "activ": 20, "verifi": 20, "path": 20, "env": 20, "lib": 20, "11": 20, "site": 20, "nvidia": 20, "nvrtc": 20, "cu12": 20, "obtain": 20, "satisfi": 20, "cmake": 20, "18": 20, "git": 20, "apt": 20, "fresh": 20, "remov": 20, "venv": 20, "forg": 20, "ninja": 20, "enter": 20, "seper": 20, "bin": 20, "workflow": 20, "download": 20, "clone": 20, "commit": 20, "hook": 20, "contribut": 20, "successfulli": 20, "4": 20, "gate": 20, "cli": 20, "login": 20, "your_hf_token": 20, "pytest": 20, "subset": 20, "hf_token_requir": 20, "easiest": 21, "json_schema_str": 21, "hf": 21, "report": 21, "problem": 21, "ask": 21, "question": 21, "repo": 21}, "objects": {"xgrammar": [[1, 0, 1, "", "CompiledGrammar"], [2, 0, 1, "", "Grammar"], [3, 0, 1, "", "GrammarCompiler"], [4, 0, 1, "", "GrammarMatcher"], [5, 0, 1, "", "StructuralTagItem"], [6, 0, 1, "", "TokenizerInfo"], [7, 0, 1, "", "VocabType"], [8, 4, 1, "", "allocate_token_bitmask"], [9, 4, 1, "", "apply_token_bitmask_inplace"], [10, 5, 1, "", "bitmask_dtype"], [11, 4, 1, "", "get_bitmask_shape"], [12, 4, 1, "", "reset_token_bitmask"]], "xgrammar.CompiledGrammar": [[1, 1, 1, "", "__init__"], [1, 2, 1, "", "grammar"], [1, 2, 1, "", "memory_size_bytes"], [1, 2, 1, "", "tokenizer_info"]], "xgrammar.Grammar": [[2, 1, 1, "", "__init__"], [2, 1, 1, "", "builtin_json_grammar"], [2, 1, 1, "", "concat"], [2, 1, 1, "", "from_ebnf"], [2, 1, 1, "", "from_json_schema"], [2, 1, 1, "", "from_regex"], [2, 1, 1, "", "from_structural_tag"], [2, 1, 1, "", "union"]], "xgrammar.GrammarCompiler": [[3, 1, 1, "", "__init__"], [3, 2, 1, "", "cache_limit_bytes"], [3, 1, 1, "", "clear_cache"], [3, 1, 1, "", "compile_builtin_json_grammar"], [3, 1, 1, "", "compile_json_schema"], [3, 1, 1, "", "compile_regex"], [3, 1, 1, "", "compile_structural_tag"], [3, 1, 1, "", "get_cache_size_bytes"]], "xgrammar.GrammarMatcher": [[4, 1, 1, "", "__init__"], [4, 1, 1, "", "accept_string"], [4, 1, 1, "", "accept_token"], [4, 1, 1, "", "fill_next_token_bitmask"], [4, 1, 1, "", "find_jump_forward_string"], [4, 1, 1, "", "is_terminated"], [4, 2, 1, "", "max_rollback_tokens"], [4, 1, 1, "", "reset"], [4, 1, 1, "", "rollback"], [4, 2, 1, "", "stop_token_ids"]], "xgrammar.StructuralTagItem": [[5, 1, 1, "", "__init__"], [5, 3, 1, "", "begin"], [5, 1, 1, "", "copy"], [5, 3, 1, "", "end"], [5, 3, 1, "", "model_config"], [5, 1, 1, "", "model_construct"], [5, 1, 1, "", "model_copy"], [5, 1, 1, "", "model_dump"], [5, 1, 1, "", "model_dump_json"], [5, 2, 1, "", "model_extra"], [5, 2, 1, "", "model_fields_set"], [5, 1, 1, "", "model_json_schema"], [5, 1, 1, "", "model_parametrized_name"], [5, 1, 1, "", "model_post_init"], [5, 1, 1, "", "model_rebuild"], [5, 1, 1, "", "model_validate"], [5, 1, 1, "", "model_validate_json"], [5, 1, 1, "", "model_validate_strings"], [5, 3, 1, "", "schema_"]], "xgrammar.TokenizerInfo": [[6, 1, 1, "", "__init__"], [6, 2, 1, "", "add_prefix_space"], [6, 2, 1, "", "decoded_vocab"], [6, 1, 1, "", "dump_metadata"], [6, 1, 1, "", "from_huggingface"], [6, 1, 1, "", "from_vocab_and_metadata"], [6, 2, 1, "", "prepend_space_in_tokenization"], [6, 2, 1, "", "special_token_ids"], [6, 2, 1, "", "stop_token_ids"], [6, 2, 1, "", "vocab_size"], [6, 2, 1, "", "vocab_type"]], "xgrammar.VocabType": [[7, 1, 1, "", "__init__"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:attribute", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"xgrammar": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18], "document": 0, "depend": [0, 20], "build": [0, 20], "view": 0, "compiledgrammar": [1, 15], "grammar": [2, 21], "grammarcompil": [3, 15], "grammarmatch": [4, 15], "structuraltagitem": 5, "tokenizerinfo": [6, 15], "vocabtyp": 7, "allocate_token_bitmask": 8, "apply_token_bitmask_inplac": 9, "bitmask_dtyp": 10, "get_bitmask_shap": 11, "reset_token_bitmask": 12, "ebnf": 14, "guid": 14, "gener": [14, 15, 16, 21], "instal": [14, 15, 16, 20], "llm": [14, 15, 16, 17], "engin": [14, 15, 16], "try": [14, 16], "out": [14, 16], "via": [14, 16], "hf": [14, 16], "transform": [14, 16], "integr": 15, "high": 15, "level": 15, "flow": 15, "xgr": 15, "bitmask": 15, "logit": 15, "auto": 15, "regress": 15, "structur": 15, "batch": 15, "infer": 15, "json": 16, "portabl": 17, "api": 17, "javascript": 17, "sdk": 17, "web": 17, "base": 17, "welcom": 18, "quick": [18, 21], "start": [18, 21], "runtim": 19, "safeguard": 19, "recurs": 19, "limit": 19, "cach": 19, "size": 19, "tabl": 20, "content": 20, "option": 20, "1": 20, "prebuilt": 20, "packag": 20, "cuda": 20, "2": 20, "from": 20, "sourc": 20, "exampl": 21, "prepar": 21, "compil": 21, "what": 21, "do": 21, "next": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"XGrammar Documentation": [[0, "xgrammar-documentation"]], "Dependencies": [[0, "dependencies"]], "Build the Documentation": [[0, "build-the-documentation"]], "View the Documentation": [[0, "view-the-documentation"]], "xgrammar.CompiledGrammar": [[1, "xgrammar-compiledgrammar"]], "xgrammar.Grammar": [[2, "xgrammar-grammar"]], "xgrammar.GrammarCompiler": [[3, "xgrammar-grammarcompiler"]], "xgrammar.GrammarMatcher": [[4, "xgrammar-grammarmatcher"]], "xgrammar.StructuralTagItem": [[5, "xgrammar-structuraltagitem"]], "xgrammar.TokenizerInfo": [[6, "xgrammar-tokenizerinfo"]], "xgrammar.VocabType": [[7, "xgrammar-vocabtype"]], "xgrammar.allocate_token_bitmask": [[8, "xgrammar-allocate-token-bitmask"]], "xgrammar.apply_token_bitmask_inplace": [[9, "xgrammar-apply-token-bitmask-inplace"]], "xgrammar.bitmask_dtype": [[10, "xgrammar-bitmask-dtype"]], "xgrammar.get_bitmask_shape": [[11, "xgrammar-get-bitmask-shape"]], "xgrammar.reset_token_bitmask": [[12, "xgrammar-reset-token-bitmask"]], "xgrammar": [[13, "xgrammar"]], "EBNF-Guided Generation": [[14, "ebnf-guided-generation"]], "Install XGrammar": [[14, "install-xgrammar"], [15, "install-xgrammar"], [16, "install-xgrammar"]], "EBNF-Guided Generation in LLM Engines": [[14, "ebnf-guided-generation-in-llm-engines"]], "Try out via HF Transformers": [[14, "try-out-via-hf-transformers"], [16, "try-out-via-hf-transformers"]], "Integration with LLM Engine": [[15, "integration-with-llm-engine"]], "High-Level Flow": [[15, "high-level-flow"]], "xgr.TokenizerInfo": [[15, "xgr-tokenizerinfo"]], "xgr.GrammarCompiler": [[15, "xgr-grammarcompiler"]], "xgr.CompiledGrammar": [[15, "xgr-compiledgrammar"]], "xgr.GrammarMatcher": [[15, "xgr-grammarmatcher"]], "Bitmasking Logits in Auto-regressive Generation": [[15, "bitmasking-logits-in-auto-regressive-generation"]], "Structured Generation for Batched Inference": [[15, "structured-generation-for-batched-inference"]], "JSON Generation": [[16, "json-generation"]], "JSON Generation in LLM Engines": [[16, "json-generation-in-llm-engines"]], "Portable API": [[17, "portable-api"]], "Javascript SDK for Web-based LLMs": [[17, "javascript-sdk-for-web-based-llms"]], "\ud83d\udc4b Welcome to XGrammar": [[18, "welcome-to-xgrammar"]], "Quick Start": [[18, "quick-start"], [21, "quick-start"]], "Runtime Safeguards": [[19, "runtime-safeguards"]], "Recursion Limit": [[19, "recursion-limit"]], "Cache Size Limit": [[19, "cache-size-limit"]], "Installation": [[20, "installation"]], "Table of Contents": [[20, "table-of-contents"]], "Option 1. Prebuilt Package": [[20, "option-1-prebuilt-package"]], "CUDA Dependency": [[20, "cuda-dependency"]], "Option 2. Build from Source": [[20, "option-2-build-from-source"]], "Example": [[21, "example"]], "Preparation": [[21, "preparation"]], "Compile Grammar": [[21, "compile-grammar"]], "Generate with grammar": [[21, "generate-with-grammar"]], "What to Do Next": [[21, "what-to-do-next"]]}, "indexentries": {"compiledgrammar (class in xgrammar)": [[1, "xgrammar.CompiledGrammar"]], "__init__() (xgrammar.compiledgrammar method)": [[1, "xgrammar.CompiledGrammar.__init__"]], "grammar (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.grammar"]], "memory_size_bytes (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.memory_size_bytes"]], "tokenizer_info (xgrammar.compiledgrammar property)": [[1, "xgrammar.CompiledGrammar.tokenizer_info"]], "grammar (class in xgrammar)": [[2, "xgrammar.Grammar"]], "__init__() (xgrammar.grammar method)": [[2, "xgrammar.Grammar.__init__"]], "builtin_json_grammar() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.builtin_json_grammar"]], "concat() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.concat"]], "from_ebnf() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_ebnf"]], "from_json_schema() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_json_schema"]], "from_regex() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_regex"]], "from_structural_tag() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.from_structural_tag"]], "union() (xgrammar.grammar static method)": [[2, "xgrammar.Grammar.union"]], "grammarcompiler (class in xgrammar)": [[3, "xgrammar.GrammarCompiler"]], "__init__() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.__init__"]], "cache_limit_bytes (xgrammar.grammarcompiler property)": [[3, "xgrammar.GrammarCompiler.cache_limit_bytes"]], "clear_cache() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.clear_cache"]], "compile_builtin_json_grammar() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_builtin_json_grammar"]], "compile_json_schema() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_json_schema"]], "compile_regex() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_regex"]], "compile_structural_tag() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.compile_structural_tag"]], "get_cache_size_bytes() (xgrammar.grammarcompiler method)": [[3, "xgrammar.GrammarCompiler.get_cache_size_bytes"]], "grammarmatcher (class in xgrammar)": [[4, "xgrammar.GrammarMatcher"]], "__init__() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.__init__"]], "accept_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_string"]], "accept_token() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.accept_token"]], "fill_next_token_bitmask() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.fill_next_token_bitmask"]], "find_jump_forward_string() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.find_jump_forward_string"]], "is_terminated() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.is_terminated"]], "max_rollback_tokens (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.max_rollback_tokens"]], "reset() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.reset"]], "rollback() (xgrammar.grammarmatcher method)": [[4, "xgrammar.GrammarMatcher.rollback"]], "stop_token_ids (xgrammar.grammarmatcher property)": [[4, "xgrammar.GrammarMatcher.stop_token_ids"]], "structuraltagitem (class in xgrammar)": [[5, "xgrammar.StructuralTagItem"]], "__init__() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.__init__"]], "begin (xgrammar.structuraltagitem attribute)": [[5, "xgrammar.StructuralTagItem.begin"]], "copy() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.copy"]], "end (xgrammar.structuraltagitem attribute)": [[5, "xgrammar.StructuralTagItem.end"]], "model_config (xgrammar.structuraltagitem attribute)": [[5, "xgrammar.StructuralTagItem.model_config"]], "model_construct() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_construct"]], "model_copy() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.model_copy"]], "model_dump() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.model_dump"]], "model_dump_json() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.model_dump_json"]], "model_extra (xgrammar.structuraltagitem property)": [[5, "xgrammar.StructuralTagItem.model_extra"]], "model_fields_set (xgrammar.structuraltagitem property)": [[5, "xgrammar.StructuralTagItem.model_fields_set"]], "model_json_schema() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_json_schema"]], "model_parametrized_name() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_parametrized_name"]], "model_post_init() (xgrammar.structuraltagitem method)": [[5, "xgrammar.StructuralTagItem.model_post_init"]], "model_rebuild() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_rebuild"]], "model_validate() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_validate"]], "model_validate_json() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_validate_json"]], "model_validate_strings() (xgrammar.structuraltagitem class method)": [[5, "xgrammar.StructuralTagItem.model_validate_strings"]], "schema_ (xgrammar.structuraltagitem attribute)": [[5, "xgrammar.StructuralTagItem.schema_"]], "tokenizerinfo (class in xgrammar)": [[6, "xgrammar.TokenizerInfo"]], "__init__() (xgrammar.tokenizerinfo method)": [[6, "xgrammar.TokenizerInfo.__init__"]], "add_prefix_space (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.add_prefix_space"]], "decoded_vocab (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.decoded_vocab"]], "dump_metadata() (xgrammar.tokenizerinfo method)": [[6, "xgrammar.TokenizerInfo.dump_metadata"]], "from_huggingface() (xgrammar.tokenizerinfo static method)": [[6, "xgrammar.TokenizerInfo.from_huggingface"]], "from_vocab_and_metadata() (xgrammar.tokenizerinfo static method)": [[6, "xgrammar.TokenizerInfo.from_vocab_and_metadata"]], "prepend_space_in_tokenization (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.prepend_space_in_tokenization"]], "special_token_ids (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.special_token_ids"]], "stop_token_ids (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.stop_token_ids"]], "vocab_size (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.vocab_size"]], "vocab_type (xgrammar.tokenizerinfo property)": [[6, "xgrammar.TokenizerInfo.vocab_type"]], "vocabtype (class in xgrammar)": [[7, "xgrammar.VocabType"]], "__init__() (xgrammar.vocabtype method)": [[7, "xgrammar.VocabType.__init__"]], "allocate_token_bitmask() (in module xgrammar)": [[8, "xgrammar.allocate_token_bitmask"]], "apply_token_bitmask_inplace() (in module xgrammar)": [[9, "xgrammar.apply_token_bitmask_inplace"]], "bitmask_dtype (in module xgrammar)": [[10, "xgrammar.bitmask_dtype"]], "get_bitmask_shape() (in module xgrammar)": [[11, "xgrammar.get_bitmask_shape"]], "reset_token_bitmask() (in module xgrammar)": [[12, "xgrammar.reset_token_bitmask"]]}})